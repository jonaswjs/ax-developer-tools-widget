/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/spec-output/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 565);
/******/ })
/************************************************************************/
/******/ ({

/***/ 115:
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 117:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var compileSchema = __webpack_require__(122)
  , resolve = __webpack_require__(68)
  , Cache = __webpack_require__(118)
  , SchemaObject = __webpack_require__(69)
  , stableStringify = __webpack_require__(36)
  , formats = __webpack_require__(121)
  , rules = __webpack_require__(123)
  , v5 = __webpack_require__(147)
  , util = __webpack_require__(13)
  , async = __webpack_require__(66)
  , co = __webpack_require__(79);

module.exports = Ajv;

Ajv.prototype.compileAsync = async.compile;

var customKeyword = __webpack_require__(144);
Ajv.prototype.addKeyword = customKeyword.add;
Ajv.prototype.getKeyword = customKeyword.get;
Ajv.prototype.removeKeyword = customKeyword.remove;
Ajv.ValidationError = __webpack_require__(70);

var META_SCHEMA_ID = 'http://json-schema.org/draft-04/schema';
var SCHEMA_URI_FORMAT = /^(?:(?:[a-z][a-z0-9+-.]*:)?\/\/)?[^\s]*$/i;
function SCHEMA_URI_FORMAT_FUNC(str) {
  return SCHEMA_URI_FORMAT.test(str);
}

var META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];

/**
 * Creates validator instance.
 * Usage: `Ajv(opts)`
 * @param {Object} opts optional options
 * @return {Object} ajv instance
 */
function Ajv(opts) {
  if (!(this instanceof Ajv)) return new Ajv(opts);
  var self = this;

  opts = this._opts = util.copy(opts) || {};
  this._schemas = {};
  this._refs = {};
  this._fragments = {};
  this._formats = formats(opts.format);
  this._cache = opts.cache || new Cache;
  this._loadingSchemas = {};
  this._compilations = [];
  this.RULES = rules();

  // this is done on purpose, so that methods are bound to the instance
  // (without using bind) so that they can be used without the instance
  this.validate = validate;
  this.compile = compile;
  this.addSchema = addSchema;
  this.addMetaSchema = addMetaSchema;
  this.validateSchema = validateSchema;
  this.getSchema = getSchema;
  this.removeSchema = removeSchema;
  this.addFormat = addFormat;
  this.errorsText = errorsText;

  this._addSchema = _addSchema;
  this._compile = _compile;

  opts.loopRequired = opts.loopRequired || Infinity;
  if (opts.async || opts.transpile) async.setup(opts);
  if (opts.beautify === true) opts.beautify = { indent_size: 2 };
  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;
  this._metaOpts = getMetaSchemaOptions();

  if (opts.formats) addInitialFormats();
  addDraft4MetaSchema();
  if (opts.v5) v5.enable(this);
  if (typeof opts.meta == 'object') addMetaSchema(opts.meta);
  addInitialSchemas();


  /**
   * Validate data using schema
   * Schema will be compiled and cached (using serialized JSON as key. [json-stable-stringify](https://github.com/substack/json-stable-stringify) is used to serialize.
   * @param  {String|Object} schemaKeyRef key, ref or schema object
   * @param  {Any} data to be validated
   * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).
   */
  function validate(schemaKeyRef, data) {
    var v;
    if (typeof schemaKeyRef == 'string') {
      v = getSchema(schemaKeyRef);
      if (!v) throw new Error('no schema with key or ref "' + schemaKeyRef + '"');
    } else {
      var schemaObj = _addSchema(schemaKeyRef);
      v = schemaObj.validate || _compile(schemaObj);
    }

    var valid = v(data);
    if (v.$async === true)
      return self._opts.async == '*' ? co(valid) : valid;
    self.errors = v.errors;
    return valid;
  }


  /**
   * Create validating function for passed schema.
   * @param  {Object} schema schema object
   * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.
   * @return {Function} validating function
   */
  function compile(schema, _meta) {
    var schemaObj = _addSchema(schema, undefined, _meta);
    return schemaObj.validate || _compile(schemaObj);
  }


  /**
   * Adds schema to the instance.
   * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.
   * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.
   * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.
   * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.
   */
  function addSchema(schema, key, _skipValidation, _meta) {
    if (Array.isArray(schema)){
      for (var i=0; i<schema.length; i++) addSchema(schema[i], undefined, _skipValidation, _meta);
      return;
    }
    // can key/id have # inside?
    key = resolve.normalizeId(key || schema.id);
    checkUnique(key);
    self._schemas[key] = _addSchema(schema, _skipValidation, _meta, true);
  }


  /**
   * Add schema that will be used to validate other schemas
   * options in META_IGNORE_OPTIONS are alway set to false
   * @param {Object} schema schema object
   * @param {String} key optional schema key
   * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema
   */
  function addMetaSchema(schema, key, skipValidation) {
    addSchema(schema, key, skipValidation, true);
  }


  /**
   * Validate schema
   * @param {Object} schema schema to validate
   * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid
   * @return {Boolean} true if schema is valid
   */
  function validateSchema(schema, throwOrLogError) {
    var $schema = schema.$schema || self._opts.defaultMeta || defaultMeta();
    var currentUriFormat = self._formats.uri;
    self._formats.uri = typeof currentUriFormat == 'function'
                        ? SCHEMA_URI_FORMAT_FUNC
                        : SCHEMA_URI_FORMAT;
    var valid;
    try { valid = validate($schema, schema); }
    finally { self._formats.uri = currentUriFormat; }
    if (!valid && throwOrLogError) {
      var message = 'schema is invalid: ' + errorsText();
      if (self._opts.validateSchema == 'log') console.error(message);
      else throw new Error(message);
    }
    return valid;
  }


  function defaultMeta() {
    var meta = self._opts.meta;
    self._opts.defaultMeta = typeof meta == 'object'
                              ? meta.id || meta
                              : self._opts.v5
                                ? v5.META_SCHEMA_ID
                                : META_SCHEMA_ID;
    return self._opts.defaultMeta;
  }


  /**
   * Get compiled schema from the instance by `key` or `ref`.
   * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).
   * @return {Function} schema validating function (with property `schema`).
   */
  function getSchema(keyRef) {
    var schemaObj = _getSchemaObj(keyRef);
    switch (typeof schemaObj) {
      case 'object': return schemaObj.validate || _compile(schemaObj);
      case 'string': return getSchema(schemaObj);
      case 'undefined': return _getSchemaFragment(keyRef);
    }
  }


  function _getSchemaFragment(ref) {
    var res = resolve.schema.call(self, { schema: {} }, ref);
    if (res) {
      var schema = res.schema
        , root = res.root
        , baseId = res.baseId;
      var v = compileSchema.call(self, schema, root, undefined, baseId);
      self._fragments[ref] = new SchemaObject({
        ref: ref,
        fragment: true,
        schema: schema,
        root: root,
        baseId: baseId,
        validate: v
      });
      return v;
    }
  }


  function _getSchemaObj(keyRef) {
    keyRef = resolve.normalizeId(keyRef);
    return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];
  }


  /**
   * Remove cached schema(s).
   * If no parameter is passed all schemas but meta-schemas are removed.
   * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.
   * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.
   * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object
   */
  function removeSchema(schemaKeyRef) {
    if (schemaKeyRef instanceof RegExp) {
      _removeAllSchemas(self._schemas, schemaKeyRef);
      _removeAllSchemas(self._refs, schemaKeyRef);
      return;
    }
    switch (typeof schemaKeyRef) {
      case 'undefined':
        _removeAllSchemas(self._schemas);
        _removeAllSchemas(self._refs);
        self._cache.clear();
        return;
      case 'string':
        var schemaObj = _getSchemaObj(schemaKeyRef);
        if (schemaObj) self._cache.del(schemaObj.jsonStr);
        delete self._schemas[schemaKeyRef];
        delete self._refs[schemaKeyRef];
        return;
      case 'object':
        var jsonStr = stableStringify(schemaKeyRef);
        self._cache.del(jsonStr);
        var id = schemaKeyRef.id;
        if (id) {
          id = resolve.normalizeId(id);
          delete self._schemas[id];
          delete self._refs[id];
        }
    }
  }


  function _removeAllSchemas(schemas, regex) {
    for (var keyRef in schemas) {
      var schemaObj = schemas[keyRef];
      if (!schemaObj.meta && (!regex || regex.test(keyRef))) {
        self._cache.del(schemaObj.jsonStr);
        delete schemas[keyRef];
      }
    }
  }


  function _addSchema(schema, skipValidation, meta, shouldAddSchema) {
    if (typeof schema != 'object') throw new Error('schema should be object');
    var jsonStr = stableStringify(schema);
    var cached = self._cache.get(jsonStr);
    if (cached) return cached;

    shouldAddSchema = shouldAddSchema || self._opts.addUsedSchema !== false;

    var id = resolve.normalizeId(schema.id);
    if (id && shouldAddSchema) checkUnique(id);

    var willValidate = self._opts.validateSchema !== false && !skipValidation;
    var recursiveMeta;
    if (willValidate && !(recursiveMeta = schema.id && schema.id == schema.$schema))
      validateSchema(schema, true);

    var localRefs = resolve.ids.call(self, schema);

    var schemaObj = new SchemaObject({
      id: id,
      schema: schema,
      localRefs: localRefs,
      jsonStr: jsonStr,
      meta: meta
    });

    if (id[0] != '#' && shouldAddSchema) self._refs[id] = schemaObj;
    self._cache.put(jsonStr, schemaObj);

    if (willValidate && recursiveMeta) validateSchema(schema, true);

    return schemaObj;
  }


  function _compile(schemaObj, root) {
    if (schemaObj.compiling) {
      schemaObj.validate = callValidate;
      callValidate.schema = schemaObj.schema;
      callValidate.errors = null;
      callValidate.root = root ? root : callValidate;
      if (schemaObj.schema.$async === true)
        callValidate.$async = true;
      return callValidate;
    }
    schemaObj.compiling = true;

    var currentOpts;
    if (schemaObj.meta) {
      currentOpts = self._opts;
      self._opts = self._metaOpts;
    }

    var v;
    try { v = compileSchema.call(self, schemaObj.schema, root, schemaObj.localRefs); }
    finally {
      schemaObj.compiling = false;
      if (schemaObj.meta) self._opts = currentOpts;
    }

    schemaObj.validate = v;
    schemaObj.refs = v.refs;
    schemaObj.refVal = v.refVal;
    schemaObj.root = v.root;
    return v;


    function callValidate() {
      var _validate = schemaObj.validate;
      var result = _validate.apply(null, arguments);
      callValidate.errors = _validate.errors;
      return result;
    }
  }


  /**
   * Convert array of error message objects to string
   * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.
   * @param  {Object} options optional options with properties `separator` and `dataVar`.
   * @return {String} human readable string with all errors descriptions
   */
  function errorsText(errors, options) {
    errors = errors || self.errors;
    if (!errors) return 'No errors';
    options = options || {};
    var separator = options.separator === undefined ? ', ' : options.separator;
    var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;

    var text = '';
    for (var i=0; i<errors.length; i++) {
      var e = errors[i];
      if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;
    }
    return text.slice(0, -separator.length);
  }


  /**
   * Add custom format
   * @param {String} name format name
   * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)
   */
  function addFormat(name, format) {
    if (typeof format == 'string') format = new RegExp(format);
    self._formats[name] = format;
  }


  function addDraft4MetaSchema() {
    if (self._opts.meta !== false) {
      var metaSchema = __webpack_require__(145);
      addMetaSchema(metaSchema, META_SCHEMA_ID, true);
      self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;
    }
  }


  function addInitialSchemas() {
    var optsSchemas = self._opts.schemas;
    if (!optsSchemas) return;
    if (Array.isArray(optsSchemas)) addSchema(optsSchemas);
    else for (var key in optsSchemas) addSchema(optsSchemas[key], key);
  }


  function addInitialFormats() {
    for (var name in self._opts.formats) {
      var format = self._opts.formats[name];
      addFormat(name, format);
    }
  }


  function checkUnique(id) {
    if (self._schemas[id] || self._refs[id])
      throw new Error('schema with key or id "' + id + '" already exists');
  }


  function getMetaSchemaOptions() {
    var metaOpts = util.copy(self._opts);
    for (var i=0; i<META_IGNORE_OPTIONS.length; i++)
      delete metaOpts[META_IGNORE_OPTIONS[i]];
    return metaOpts;
  }
}


/***/ }),

/***/ 118:
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var Cache = module.exports = function Cache() {
  this._cache = {};
};


Cache.prototype.put = function Cache_put(key, value) {
  this._cache[key] = value;
};


Cache.prototype.get = function Cache_get(key) {
  return this._cache[key];
};


Cache.prototype.del = function Cache_del(key) {
  delete this._cache[key];
};


Cache.prototype.clear = function Cache_clear() {
  this._cache = {};
};


/***/ }),

/***/ 119:
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 119;


/***/ }),

/***/ 120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//all requires must be explicit because browserify won't work with dynamic requires
module.exports = {
  '$ref': __webpack_require__(140),
  allOf: __webpack_require__(126),
  anyOf: __webpack_require__(127),
  dependencies: __webpack_require__(130),
  'enum': __webpack_require__(131),
  format: __webpack_require__(132),
  items: __webpack_require__(133),
  maximum: __webpack_require__(71),
  minimum: __webpack_require__(71),
  maxItems: __webpack_require__(72),
  minItems: __webpack_require__(72),
  maxLength: __webpack_require__(73),
  minLength: __webpack_require__(73),
  maxProperties: __webpack_require__(74),
  minProperties: __webpack_require__(74),
  multipleOf: __webpack_require__(134),
  not: __webpack_require__(135),
  oneOf: __webpack_require__(136),
  pattern: __webpack_require__(137),
  properties: __webpack_require__(139),
  required: __webpack_require__(141),
  uniqueItems: __webpack_require__(143),
  validate: __webpack_require__(75)
};


/***/ }),

/***/ 121:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(13);

var DATE = /^\d\d\d\d-(\d\d)-(\d\d)$/;
var DAYS = [0,31,29,31,30,31,30,31,31,30,31,30,31];
var TIME = /^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d:\d\d)?$/i;
var HOSTNAME = /^[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\.[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i;
var URI = /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?(?:\#(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?$/i;
var UUID = /^(?:urn\:uuid\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;
var JSON_POINTER = /^(?:\/(?:[^~\/]|~0|~1)*)*$|^\#(?:\/(?:[a-z0-9_\-\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;
var RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:\#|(?:\/(?:[^~\/]|~0|~1)*)*)$/;


module.exports = formats;

function formats(mode) {
  mode = mode == 'full' ? 'full' : 'fast';
  var formatDefs = util.copy(formats[mode]);
  for (var fName in formats.compare) {
    formatDefs[fName] = {
      validate: formatDefs[fName],
      compare: formats.compare[fName]
    };
  }
  return formatDefs;
}


formats.fast = {
  // date: http://tools.ietf.org/html/rfc3339#section-5.6
  date: /^\d\d\d\d-[0-1]\d-[0-3]\d$/,
  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
  time: /^[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:z|[+-]\d\d:\d\d)?$/i,
  'date-time': /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s][0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i,
  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
  uri: /^(?:[a-z][a-z0-9+-.]*)?(?:\:|\/)\/?[^\s]*$/i,
  // email (sources from jsen validator):
  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')
  email: /^[a-z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
  hostname: HOSTNAME,
  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
  regex: regex,
  // uuid: http://tools.ietf.org/html/rfc4122
  uuid: UUID,
  // JSON-pointer: https://tools.ietf.org/html/rfc6901
  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
  'json-pointer': JSON_POINTER,
  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
  'relative-json-pointer': RELATIVE_JSON_POINTER
};


formats.full = {
  date: date,
  time: time,
  'date-time': date_time,
  uri: uri,
  email: /^[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
  hostname: hostname,
  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
  regex: regex,
  uuid: UUID,
  'json-pointer': JSON_POINTER,
  'relative-json-pointer': RELATIVE_JSON_POINTER
};


formats.compare = {
  date: compareDate,
  time: compareTime,
  'date-time': compareDateTime
};


function date(str) {
  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6
  var matches = str.match(DATE);
  if (!matches) return false;

  var month = +matches[1];
  var day = +matches[2];
  return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];
}


function time(str, full) {
  var matches = str.match(TIME);
  if (!matches) return false;

  var hour = matches[1];
  var minute = matches[2];
  var second = matches[3];
  var timeZone = matches[5];
  return hour <= 23 && minute <= 59 && second <= 59 && (!full || timeZone);
}


var DATE_TIME_SEPARATOR = /t|\s/i;
function date_time(str) {
  // http://tools.ietf.org/html/rfc3339#section-5.6
  var dateTime = str.split(DATE_TIME_SEPARATOR);
  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);
}


function hostname(str) {
  // https://tools.ietf.org/html/rfc1034#section-3.5
  // https://tools.ietf.org/html/rfc1123#section-2
  return str.length <= 255 && HOSTNAME.test(str);
}


var NOT_URI_FRAGMENT = /\/|\:/;
function uri(str) {
  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required "."
  return NOT_URI_FRAGMENT.test(str) && URI.test(str);
}


function regex(str) {
  try {
    new RegExp(str);
    return true;
  } catch(e) {
    return false;
  }
}


function compareDate(d1, d2) {
  if (!(d1 && d2)) return;
  if (d1 > d2) return 1;
  if (d1 < d2) return -1;
  if (d1 === d2) return 0;
}


function compareTime(t1, t2) {
  if (!(t1 && t2)) return;
  t1 = t1.match(TIME);
  t2 = t2.match(TIME);
  if (!(t1 && t2)) return;
  t1 = t1[1] + t1[2] + t1[3] + (t1[4]||'');
  t2 = t2[1] + t2[2] + t2[3] + (t2[4]||'');
  if (t1 > t2) return 1;
  if (t1 < t2) return -1;
  if (t1 === t2) return 0;
}


function compareDateTime(dt1, dt2) {
  if (!(dt1 && dt2)) return;
  dt1 = dt1.split(DATE_TIME_SEPARATOR);
  dt2 = dt2.split(DATE_TIME_SEPARATOR);
  var res = compareDate(dt1[0], dt2[0]);
  if (res === undefined) return;
  return res || compareTime(dt1[1], dt2[1]);
}


/***/ }),

/***/ 122:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var resolve = __webpack_require__(68)
  , util = __webpack_require__(13)
  , stableStringify = __webpack_require__(36)
  , async = __webpack_require__(66);

var beautify;

function loadBeautify(){
  if (beautify === undefined) {
    var name = 'js-beautify';
    try { beautify = !(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND';; throw e; }()).js_beautify; }
    catch(e) { beautify = false; }
  }
}

var validateGenerator = __webpack_require__(75);

/**
 * Functions below are used inside compiled validations function
 */

var co = __webpack_require__(79);
var ucs2length = util.ucs2length;
var equal = __webpack_require__(67);

// this error is thrown by async schemas to return validation errors via exception
var ValidationError = __webpack_require__(70);

module.exports = compile;


/**
 * Compiles schema to validation function
 * @this   Ajv
 * @param  {Object} schema schema object
 * @param  {Object} root object with information about the root schema for this schema
 * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution
 * @param  {String} baseId base ID for IDs in the schema
 * @return {Function} validation function
 */
function compile(schema, root, localRefs, baseId) {
  /* jshint validthis: true, evil: true */
  /* eslint no-shadow: 0 */
  var self = this
    , opts = this._opts
    , refVal = [ undefined ]
    , refs = {}
    , patterns = []
    , patternsHash = {}
    , defaults = []
    , defaultsHash = {}
    , customRules = []
    , keepSourceCode = opts.sourceCode !== false;

  root = root || { schema: schema, refVal: refVal, refs: refs };

  var c = checkCompiling.call(this, schema, root, baseId);
  var compilation = this._compilations[c.index];
  if (c.compiling) return (compilation.callValidate = callValidate);

  var formats = this._formats;
  var RULES = this.RULES;

  try {
    var v = localCompile(schema, root, localRefs, baseId);
    compilation.validate = v;
    var cv = compilation.callValidate;
    if (cv) {
      cv.schema = v.schema;
      cv.errors = null;
      cv.refs = v.refs;
      cv.refVal = v.refVal;
      cv.root = v.root;
      cv.$async = v.$async;
      if (keepSourceCode) cv.sourceCode = v.sourceCode;
    }
    return v;
  } finally {
    endCompiling.call(this, schema, root, baseId);
  }

  function callValidate() {
    var validate = compilation.validate;
    var result = validate.apply(null, arguments);
    callValidate.errors = validate.errors;
    return result;
  }

  function localCompile(_schema, _root, localRefs, baseId) {
    var isRoot = !_root || (_root && _root.schema == _schema);
    if (_root.schema != root.schema)
      return compile.call(self, _schema, _root, localRefs, baseId);

    var $async = _schema.$async === true;
    if ($async && !opts.transpile) async.setup(opts);

    var sourceCode = validateGenerator({
      isTop: true,
      schema: _schema,
      isRoot: isRoot,
      baseId: baseId,
      root: _root,
      schemaPath: '',
      errSchemaPath: '#',
      errorPath: '""',
      RULES: RULES,
      validate: validateGenerator,
      util: util,
      resolve: resolve,
      resolveRef: resolveRef,
      usePattern: usePattern,
      useDefault: useDefault,
      useCustomRule: useCustomRule,
      opts: opts,
      formats: formats,
      self: self
    });

    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)
                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)
                   + sourceCode;

    if (opts.beautify) {
      loadBeautify();
      /* istanbul ignore else */
      if (beautify) sourceCode = beautify(sourceCode, opts.beautify);
      else console.error('"npm install js-beautify" to use beautify option');
    }
    // console.log('\n\n\n *** \n', sourceCode);
    var validate, validateCode
      , transpile = opts._transpileFunc;
    try {
      validateCode = $async && transpile
                      ? transpile(sourceCode)
                      : sourceCode;

      var makeValidate = new Function(
        'self',
        'RULES',
        'formats',
        'root',
        'refVal',
        'defaults',
        'customRules',
        'co',
        'equal',
        'ucs2length',
        'ValidationError',
        validateCode
      );

      validate = makeValidate(
        self,
        RULES,
        formats,
        root,
        refVal,
        defaults,
        customRules,
        co,
        equal,
        ucs2length,
        ValidationError
      );

      refVal[0] = validate;
    } catch(e) {
      console.error('Error compiling schema, function code:', validateCode);
      throw e;
    }

    validate.schema = _schema;
    validate.errors = null;
    validate.refs = refs;
    validate.refVal = refVal;
    validate.root = isRoot ? validate : _root;
    if ($async) validate.$async = true;
    if (keepSourceCode) validate.sourceCode = sourceCode;
    if (opts.sourceCode === true) {
      validate.source = {
        patterns: patterns,
        defaults: defaults
      };
    }

    return validate;
  }

  function resolveRef(baseId, ref, isRoot) {
    ref = resolve.url(baseId, ref);
    var refIndex = refs[ref];
    var _refVal, refCode;
    if (refIndex !== undefined) {
      _refVal = refVal[refIndex];
      refCode = 'refVal[' + refIndex + ']';
      return resolvedRef(_refVal, refCode);
    }
    if (!isRoot && root.refs) {
      var rootRefId = root.refs[ref];
      if (rootRefId !== undefined) {
        _refVal = root.refVal[rootRefId];
        refCode = addLocalRef(ref, _refVal);
        return resolvedRef(_refVal, refCode);
      }
    }

    refCode = addLocalRef(ref);
    var v = resolve.call(self, localCompile, root, ref);
    if (!v) {
      var localSchema = localRefs && localRefs[ref];
      if (localSchema) {
        v = resolve.inlineRef(localSchema, opts.inlineRefs)
            ? localSchema
            : compile.call(self, localSchema, root, localRefs, baseId);
      }
    }

    if (v) {
      replaceLocalRef(ref, v);
      return resolvedRef(v, refCode);
    }
  }

  function addLocalRef(ref, v) {
    var refId = refVal.length;
    refVal[refId] = v;
    refs[ref] = refId;
    return 'refVal' + refId;
  }

  function replaceLocalRef(ref, v) {
    var refId = refs[ref];
    refVal[refId] = v;
  }

  function resolvedRef(refVal, code) {
    return typeof refVal == 'object'
            ? { code: code, schema: refVal, inline: true }
            : { code: code, $async: refVal && refVal.$async };
  }

  function usePattern(regexStr) {
    var index = patternsHash[regexStr];
    if (index === undefined) {
      index = patternsHash[regexStr] = patterns.length;
      patterns[index] = regexStr;
    }
    return 'pattern' + index;
  }

  function useDefault(value) {
    switch (typeof value) {
      case 'boolean':
      case 'number':
        return '' + value;
      case 'string':
        return util.toQuotedString(value);
      case 'object':
        if (value === null) return 'null';
        var valueStr = stableStringify(value);
        var index = defaultsHash[valueStr];
        if (index === undefined) {
          index = defaultsHash[valueStr] = defaults.length;
          defaults[index] = value;
        }
        return 'default' + index;
    }
  }

  function useCustomRule(rule, schema, parentSchema, it) {
    var validateSchema = rule.definition.validateSchema;
    if (validateSchema && self._opts.validateSchema !== false) {
      var valid = validateSchema(schema);
      if (!valid) {
        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);
        if (self._opts.validateSchema == 'log') console.error(message);
        else throw new Error(message);
      }
    }

    var compile = rule.definition.compile
      , inline = rule.definition.inline
      , macro = rule.definition.macro;

    var validate;
    if (compile) {
      validate = compile.call(self, schema, parentSchema, it);
    } else if (macro) {
      validate = macro.call(self, schema, parentSchema, it);
      if (opts.validateSchema !== false) self.validateSchema(validate, true);
    } else if (inline) {
      validate = inline.call(self, it, rule.keyword, schema, parentSchema);
    } else {
      validate = rule.definition.validate;
    }

    var index = customRules.length;
    customRules[index] = validate;

    return {
      code: 'customRule' + index,
      validate: validate
    };
  }
}


/**
 * Checks if the schema is currently compiled
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 * @return {Object} object with properties "index" (compilation index) and "compiling" (boolean)
 */
function checkCompiling(schema, root, baseId) {
  /* jshint validthis: true */
  var index = compIndex.call(this, schema, root, baseId);
  if (index >= 0) return { index: index, compiling: true };
  index = this._compilations.length;
  this._compilations[index] = {
    schema: schema,
    root: root,
    baseId: baseId
  };
  return { index: index, compiling: false };
}


/**
 * Removes the schema from the currently compiled list
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 */
function endCompiling(schema, root, baseId) {
  /* jshint validthis: true */
  var i = compIndex.call(this, schema, root, baseId);
  if (i >= 0) this._compilations.splice(i, 1);
}


/**
 * Index of schema compilation in the currently compiled list
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 * @return {Integer} compilation index
 */
function compIndex(schema, root, baseId) {
  /* jshint validthis: true */
  for (var i=0; i<this._compilations.length; i++) {
    var c = this._compilations[i];
    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;
  }
  return -1;
}


function patternCode(i, patterns) {
  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';
}


function defaultCode(i) {
  return 'var default' + i + ' = defaults[' + i + '];';
}


function refValCode(i, refVal) {
  return refVal[i] ? 'var refVal' + i + ' = refVal[' + i + '];' : '';
}


function customRuleCode(i) {
  return 'var customRule' + i + ' = customRules[' + i + '];';
}


function vars(arr, statement) {
  if (!arr.length) return '';
  var code = '';
  for (var i=0; i<arr.length; i++)
    code += statement(i, arr);
  return code;
}


/***/ }),

/***/ 123:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ruleModules = __webpack_require__(120)
  , toHash = __webpack_require__(13).toHash;

module.exports = function rules() {
  var RULES = [
    { type: 'number',
      rules: [ 'maximum', 'minimum', 'multipleOf'] },
    { type: 'string',
      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },
    { type: 'array',
      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'items' ] },
    { type: 'object',
      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'properties' ] },
    { rules: [ '$ref', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }
  ];

  var ALL = [ 'type', 'additionalProperties', 'patternProperties' ];
  var KEYWORDS = [ 'additionalItems', '$schema', 'id', 'title', 'description', 'default' ];
  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];
  RULES.all = toHash(ALL);

  RULES.forEach(function (group) {
    group.rules = group.rules.map(function (keyword) {
      ALL.push(keyword);
      var rule = RULES.all[keyword] = {
        keyword: keyword,
        code: ruleModules[keyword]
      };
      return rule;
    });
  });

  RULES.keywords = toHash(ALL.concat(KEYWORDS));
  RULES.types = toHash(TYPES);
  RULES.custom = {};

  return RULES;
};


/***/ }),

/***/ 124:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://mathiasbynens.be/notes/javascript-encoding
// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode
module.exports = function ucs2length(str) {
  var length = 0
    , len = str.length
    , pos = 0
    , value;
  while (pos < len) {
    length++;
    value = str.charCodeAt(pos++);
    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {
      // high surrogate, and there is a next character
      value = str.charCodeAt(pos);
      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate
    }
  }
  return length;
};


/***/ }),

/***/ 125:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__formatLimit(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  out += 'var ' + ($valid) + ' = undefined;';
  if (it.opts.format === false) {
    out += ' ' + ($valid) + ' = true; ';
    return out;
  }
  var $schemaFormat = it.schema.format,
    $isDataFormat = it.opts.v5 && $schemaFormat.$data,
    $closingBraces = '';
  if ($isDataFormat) {
    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),
      $format = 'format' + $lvl,
      $compare = 'compare' + $lvl;
    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';
  } else {
    var $format = it.formats[$schemaFormat];
    if (!($format && $format.compare)) {
      out += '  ' + ($valid) + ' = true; ';
      return out;
    }
    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';
  }
  var $isMax = $keyword == 'formatMaximum',
    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),
    $schemaExcl = it.schema[$exclusiveKeyword],
    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,
    $op = $isMax ? '<' : '>',
    $result = 'result' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  if ($isDataExcl) {
    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),
      $exclusive = 'exclusive' + $lvl,
      $opExpr = 'op' + $lvl,
      $opStr = '\' + ' + $opExpr + ' + \'';
    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';
    $schemaValueExcl = 'schemaExcl' + $lvl;
    out += ' if (typeof ' + ($schemaValueExcl) + ' != \'boolean\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';
    var $errorKeyword = $exclusiveKeyword;
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || '_formatExclusiveLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'' + ($exclusiveKeyword) + ' should be boolean\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' }  ';
    if ($breakOnError) {
      $closingBraces += '}';
      out += ' else { ';
    }
    if ($isData) {
      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'string\') ' + ($valid) + ' = false; else { ';
      $closingBraces += '}';
    }
    if ($isDataFormat) {
      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';
      $closingBraces += '}';
    }
    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \'' + ($op) + '\' : \'' + ($op) + '=\';';
  } else {
    var $exclusive = $schemaExcl === true,
      $opStr = $op;
    if (!$exclusive) $opStr += '=';
    var $opExpr = '\'' + $opStr + '\'';
    if ($isData) {
      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'string\') ' + ($valid) + ' = false; else { ';
      $closingBraces += '}';
    }
    if ($isDataFormat) {
      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';
      $closingBraces += '}';
    }
    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);
    if (!$exclusive) {
      out += '=';
    }
    out += ' 0;';
  }
  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_formatLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += ' , exclusive: ' + ($exclusive) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be ' + ($opStr) + ' "';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + (it.util.escapeQuotes($schema));
      }
      out += '"\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + (it.util.toQuotedString($schema));
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '}';
  return out;
}


/***/ }),

/***/ 126:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_allOf(it, $keyword) {
  var out = ' ';
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $currentBaseId = $it.baseId,
    $allSchemasEmpty = true;
  var arr1 = $schema;
  if (arr1) {
    var $sch, $i = -1,
      l1 = arr1.length - 1;
    while ($i < l1) {
      $sch = arr1[$i += 1];
      if (it.util.schemaHasRules($sch, it.RULES.all)) {
        $allSchemasEmpty = false;
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
        if ($breakOnError) {
          out += ' if (' + ($nextValid) + ') { ';
          $closingBraces += '}';
        }
      }
    }
  }
  if ($breakOnError) {
    if ($allSchemasEmpty) {
      out += ' if (true) { ';
    } else {
      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';
    }
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ 127:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_anyOf(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $noEmptySchema = $schema.every(function($sch) {
    return it.util.schemaHasRules($sch, it.RULES.all);
  });
  if ($noEmptySchema) {
    var $currentBaseId = $it.baseId;
    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    var arr1 = $schema;
    if (arr1) {
      var $sch, $i = -1,
        l1 = arr1.length - 1;
      while ($i < l1) {
        $sch = arr1[$i += 1];
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';
        $closingBraces += '}';
      }
    }
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {  var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'anyOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should match some schema in anyOf\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
    if (it.opts.allErrors) {
      out += ' } ';
    }
    out = it.util.cleanUpCode(out);
  } else {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  }
  return out;
}


/***/ }),

/***/ 128:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_constant(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  if (!$isData) {
    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';
  }
  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'constant') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be equal to constant\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' }';
  return out;
}


/***/ }),

/***/ 129:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_custom(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $rule = this,
    $definition = 'definition' + $lvl,
    $rDef = $rule.definition,
    $validate = $rDef.validate,
    $compile, $inline, $macro, $ruleValidate, $validateCode;
  if ($isData && $rDef.$data) {
    $validateCode = 'keywordValidate' + $lvl;
    var $validateSchema = $rDef.validateSchema;
    out += ' var ' + ($definition) + ' = RULES.custom[\'' + ($keyword) + '\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';
  } else {
    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);
    $schemaValue = 'validate.schema' + $schemaPath;
    $validateCode = $ruleValidate.code;
    $compile = $rDef.compile;
    $inline = $rDef.inline;
    $macro = $rDef.macro;
  }
  var $ruleErrs = $validateCode + '.errors',
    $i = 'i' + $lvl,
    $ruleErr = 'ruleErr' + $lvl,
    $asyncKeyword = $rDef.async;
  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');
  if (!($inline || $macro)) {
    out += '' + ($ruleErrs) + ' = null;';
  }
  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
  if ($validateSchema) {
    out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') {';
  }
  if ($inline) {
    if ($rDef.statements) {
      out += ' ' + ($ruleValidate.validate) + ' ';
    } else {
      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';
    }
  } else if ($macro) {
    var $it = it.util.copy(it);
    $it.level++;
    var $nextValid = 'valid' + $it.level;
    $it.schema = $ruleValidate.validate;
    $it.schemaPath = '';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    var $code = it.validate($it).replace(/validate\.schema/g, $validateCode);
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' ' + ($code);
  } else {
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    out += '  ' + ($validateCode) + '.call( ';
    if (it.opts.passContext) {
      out += 'this';
    } else {
      out += 'self';
    }
    if ($compile || $rDef.schema === false) {
      out += ' , ' + ($data) + ' ';
    } else {
      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';
    }
    out += ' , (dataPath || \'\')';
    if (it.errorPath != '""') {
      out += ' + ' + (it.errorPath);
    }
    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';
    var def_callRuleValidate = out;
    out = $$outStack.pop();
    if ($rDef.errors === false) {
      out += ' ' + ($valid) + ' = ';
      if ($asyncKeyword) {
        out += '' + (it.yieldAwait);
      }
      out += '' + (def_callRuleValidate) + '; ';
    } else {
      if ($asyncKeyword) {
        $ruleErrs = 'customErrors' + $lvl;
        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';
      } else {
        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';
      }
    }
  }
  if ($rDef.modifying) {
    out += ' ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';
  }
  if ($validateSchema) {
    out += ' }';
  }
  if ($rDef.valid) {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  } else {
    out += ' if ( ';
    if ($rDef.valid === undefined) {
      out += ' !';
      if ($macro) {
        out += '' + ($nextValid);
      } else {
        out += '' + ($valid);
      }
    } else {
      out += ' ' + (!$rDef.valid) + ' ';
    }
    out += ') { ';
    $errorKeyword = $rule.keyword;
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    var def_customError = out;
    out = $$outStack.pop();
    if ($inline) {
      if ($rDef.errors) {
        if ($rDef.errors != 'full') {
          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
          if (it.opts.verbose) {
            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
          }
          out += ' } ';
        }
      } else {
        if ($rDef.errors === false) {
          out += ' ' + (def_customError) + ' ';
        } else {
          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
          if (it.opts.verbose) {
            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
          }
          out += ' } } ';
        }
      }
    } else if ($macro) {
      out += '   var err =   '; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError(vErrors); ';
        } else {
          out += ' validate.errors = vErrors; return false; ';
        }
      }
    } else {
      if ($rDef.errors === false) {
        out += ' ' + (def_customError) + ' ';
      } else {
        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '";  ';
        if (it.opts.verbose) {
          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
        }
        out += ' } } else { ' + (def_customError) + ' } ';
      }
    }
    out += ' } ';
    if ($breakOnError) {
      out += ' else { ';
    }
  }
  return out;
}


/***/ }),

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

"use strict";



module.exports = {
  copy: copy,
  checkDataType: checkDataType,
  checkDataTypes: checkDataTypes,
  coerceToTypes: coerceToTypes,
  toHash: toHash,
  getProperty: getProperty,
  escapeQuotes: escapeQuotes,
  ucs2length: __webpack_require__(124),
  varOccurences: varOccurences,
  varReplace: varReplace,
  cleanUpCode: cleanUpCode,
  cleanUpVarErrors: cleanUpVarErrors,
  schemaHasRules: schemaHasRules,
  schemaHasRulesExcept: schemaHasRulesExcept,
  stableStringify: __webpack_require__(36),
  toQuotedString: toQuotedString,
  getPathExpr: getPathExpr,
  getPath: getPath,
  getData: getData,
  unescapeFragment: unescapeFragment,
  escapeFragment: escapeFragment,
  escapeJsonPointer: escapeJsonPointer
};


function copy(o, to) {
  to = to || {};
  for (var key in o) to[key] = o[key];
  return to;
}


function checkDataType(dataType, data, negate) {
  var EQUAL = negate ? ' !== ' : ' === '
    , AND = negate ? ' || ' : ' && '
    , OK = negate ? '!' : ''
    , NOT = negate ? '' : '!';
  switch (dataType) {
    case 'null': return data + EQUAL + 'null';
    case 'array': return OK + 'Array.isArray(' + data + ')';
    case 'object': return '(' + OK + data + AND +
                          'typeof ' + data + EQUAL + '"object"' + AND +
                          NOT + 'Array.isArray(' + data + '))';
    case 'integer': return '(typeof ' + data + EQUAL + '"number"' + AND +
                           NOT + '(' + data + ' % 1)' +
                           AND + data + EQUAL + data + ')';
    default: return 'typeof ' + data + EQUAL + '"' + dataType + '"';
  }
}


function checkDataTypes(dataTypes, data) {
  switch (dataTypes.length) {
    case 1: return checkDataType(dataTypes[0], data, true);
    default:
      var code = '';
      var types = toHash(dataTypes);
      if (types.array && types.object) {
        code = types.null ? '(': '(!' + data + ' || ';
        code += 'typeof ' + data + ' !== "object")';
        delete types.null;
        delete types.array;
        delete types.object;
      }
      if (types.number) delete types.integer;
      for (var t in types)
        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);

      return code;
  }
}


var COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);
function coerceToTypes(optionCoerceTypes, dataTypes) {
  if (Array.isArray(dataTypes)) {
    var types = [];
    for (var i=0; i<dataTypes.length; i++) {
      var t = dataTypes[i];
      if (COERCE_TO_TYPES[t]) types[types.length] = t;
      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;
    }
    if (types.length) return types;
  } else if (COERCE_TO_TYPES[dataTypes]) {
    return [dataTypes];
  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {
    return ['array'];
  }
}


function toHash(arr) {
  var hash = {};
  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;
  return hash;
}


var IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
var SINGLE_QUOTE = /'|\\/g;
function getProperty(key) {
  return typeof key == 'number'
          ? '[' + key + ']'
          : IDENTIFIER.test(key)
            ? '.' + key
            : "['" + escapeQuotes(key) + "']";
}


function escapeQuotes(str) {
  return str.replace(SINGLE_QUOTE, '\\$&')
            .replace(/\n/g, '\\n')
            .replace(/\r/g, '\\r')
            .replace(/\f/g, '\\f')
            .replace(/\t/g, '\\t');
}


function varOccurences(str, dataVar) {
  dataVar += '[^0-9]';
  var matches = str.match(new RegExp(dataVar, 'g'));
  return matches ? matches.length : 0;
}


function varReplace(str, dataVar, expr) {
  dataVar += '([^0-9])';
  expr = expr.replace(/\$/g, '$$$$');
  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');
}


var EMPTY_ELSE = /else\s*{\s*}/g
  , EMPTY_IF_NO_ELSE = /if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g
  , EMPTY_IF_WITH_ELSE = /if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;
function cleanUpCode(out) {
  return out.replace(EMPTY_ELSE, '')
            .replace(EMPTY_IF_NO_ELSE, '')
            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');
}


var ERRORS_REGEXP = /[^v\.]errors/g
  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g
  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g
  , RETURN_VALID = 'return errors === 0;'
  , RETURN_TRUE = 'validate.errors = null; return true;'
  , RETURN_ASYNC = /if \(errors === 0\) return true;\s*else throw new ValidationError\(vErrors\);/
  , RETURN_TRUE_ASYNC = 'return true;';

function cleanUpVarErrors(out, async) {
  var matches = out.match(ERRORS_REGEXP);
  if (!matches || matches.length !== 2) return out;
  return async
          ? out.replace(REMOVE_ERRORS_ASYNC, '')
               .replace(RETURN_ASYNC, RETURN_TRUE_ASYNC)
          : out.replace(REMOVE_ERRORS, '')
               .replace(RETURN_VALID, RETURN_TRUE);
}


function schemaHasRules(schema, rules) {
  for (var key in schema) if (rules[key]) return true;
}


function schemaHasRulesExcept(schema, rules, exceptKeyword) {
  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;
}


function toQuotedString(str) {
  return '\'' + escapeQuotes(str) + '\'';
}


function getPathExpr(currentPath, expr, jsonPointers, isNumber) {
  var path = jsonPointers // false by default
              ? '\'/\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \'~0\').replace(/\\//g, \'~1\')')
              : (isNumber ? '\'[\' + ' + expr + ' + \']\'' : '\'[\\\'\' + ' + expr + ' + \'\\\']\'');
  return joinPaths(currentPath, path);
}


function getPath(currentPath, prop, jsonPointers) {
  var path = jsonPointers // false by default
              ? toQuotedString('/' + escapeJsonPointer(prop))
              : toQuotedString(getProperty(prop));
  return joinPaths(currentPath, path);
}


var JSON_POINTER = /^\/(?:[^~]|~0|~1)*$/;
var RELATIVE_JSON_POINTER = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
function getData($data, lvl, paths) {
  var up, jsonPointer, data, matches;
  if ($data === '') return 'rootData';
  if ($data[0] == '/') {
    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);
    jsonPointer = $data;
    data = 'rootData';
  } else {
    matches = $data.match(RELATIVE_JSON_POINTER);
    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);
    up = +matches[1];
    jsonPointer = matches[2];
    if (jsonPointer == '#') {
      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);
      return paths[lvl - up];
    }

    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);
    data = 'data' + ((lvl - up) || '');
    if (!jsonPointer) return data;
  }

  var expr = data;
  var segments = jsonPointer.split('/');
  for (var i=0; i<segments.length; i++) {
    var segment = segments[i];
    if (segment) {
      data += getProperty(unescapeJsonPointer(segment));
      expr += ' && ' + data;
    }
  }
  return expr;
}


function joinPaths (a, b) {
  if (a == '""') return b;
  return (a + ' + ' + b).replace(/' \+ '/g, '');
}


function unescapeFragment(str) {
  return unescapeJsonPointer(decodeURIComponent(str));
}


function escapeFragment(str) {
  return encodeURIComponent(escapeJsonPointer(str));
}


function escapeJsonPointer(str) {
  return str.replace(/~/g, '~0').replace(/\//g, '~1');
}


function unescapeJsonPointer(str) {
  return str.replace(/~1/g, '/').replace(/~0/g, '~');
}


/***/ }),

/***/ 130:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_dependencies(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $schemaDeps = {},
    $propertyDeps = {};
  for ($property in $schema) {
    var $sch = $schema[$property];
    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
    $deps[$property] = $sch;
  }
  out += 'var ' + ($errs) + ' = errors;';
  var $currentErrorPath = it.errorPath;
  out += 'var missing' + ($lvl) + ';';
  for (var $property in $propertyDeps) {
    $deps = $propertyDeps[$property];
    out += ' if (' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';
    if ($breakOnError) {
      out += ' && ( ';
      var arr1 = $deps;
      if (arr1) {
        var _$property, $i = -1,
          l1 = arr1.length - 1;
        while ($i < l1) {
          _$property = arr1[$i += 1];
          if ($i) {
            out += ' || ';
          }
          var $prop = it.util.getProperty(_$property);
          out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
        }
      }
      out += ')) {  ';
      var $propertyPath = 'missing' + $lvl,
        $missingProperty = '\' + ' + $propertyPath + ' + \'';
      if (it.opts._errorDataPathProperty) {
        it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
      }
      var $$outStack = $$outStack || [];
      $$outStack.push(out);
      out = ''; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should have ';
          if ($deps.length == 1) {
            out += 'property ' + (it.util.escapeQuotes($deps[0]));
          } else {
            out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
          }
          out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      var __err = out;
      out = $$outStack.pop();
      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError([' + (__err) + ']); ';
        } else {
          out += ' validate.errors = [' + (__err) + ']; return false; ';
        }
      } else {
        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      }
    } else {
      out += ' ) { ';
      var arr2 = $deps;
      if (arr2) {
        var $reqProperty, i2 = -1,
          l2 = arr2.length - 1;
        while (i2 < l2) {
          $reqProperty = arr2[i2 += 1];
          var $prop = it.util.getProperty($reqProperty),
            $missingProperty = it.util.escapeQuotes($reqProperty);
          if (it.opts._errorDataPathProperty) {
            it.errorPath = it.util.getPath($currentErrorPath, $reqProperty, it.opts.jsonPointers);
          }
          out += ' if (' + ($data) + ($prop) + ' === undefined) {  var err =   '; /* istanbul ignore else */
          if (it.createErrors !== false) {
            out += ' { keyword: \'' + ($errorKeyword || 'dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
            if (it.opts.messages !== false) {
              out += ' , message: \'should have ';
              if ($deps.length == 1) {
                out += 'property ' + (it.util.escapeQuotes($deps[0]));
              } else {
                out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
              }
              out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
            }
            if (it.opts.verbose) {
              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
            }
            out += ' } ';
          } else {
            out += ' {} ';
          }
          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
        }
      }
    }
    out += ' }   ';
    if ($breakOnError) {
      $closingBraces += '}';
      out += ' else { ';
    }
  }
  it.errorPath = $currentErrorPath;
  var $currentBaseId = $it.baseId;
  for (var $property in $schemaDeps) {
    var $sch = $schemaDeps[$property];
    if (it.util.schemaHasRules($sch, it.RULES.all)) {
      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '[\'' + ($property) + '\'] !== undefined) { ';
      $it.schema = $sch;
      $it.schemaPath = $schemaPath + it.util.getProperty($property);
      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);
      out += '  ' + (it.validate($it)) + ' ';
      $it.baseId = $currentBaseId;
      out += ' }  ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
        $closingBraces += '}';
      }
    }
  }
  if ($breakOnError) {
    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ 131:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_enum(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $i = 'i' + $lvl,
    $vSchema = 'schema' + $lvl;
  if (!$isData) {
    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';
  }
  out += 'var ' + ($valid) + ';';
  if ($isData) {
    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
  }
  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';
  if ($isData) {
    out += '  }  ';
  }
  out += ' if (!' + ($valid) + ') {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'enum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be equal to one of the allowed values\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' }';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 132:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_format(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  if (it.opts.format === false) {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
    return out;
  }
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $unknownFormats = it.opts.unknownFormats,
    $allowUnknown = Array.isArray($unknownFormats);
  if ($isData) {
    var $format = 'format' + $lvl;
    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var isObject' + ($lvl) + ' = typeof ' + ($format) + ' == \'object\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; if (isObject' + ($lvl) + ') { ';
    if (it.async) {
      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';
    }
    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';
    if ($isData) {
      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
    }
    out += ' (';
    if ($unknownFormats === true || $allowUnknown) {
      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';
      if ($allowUnknown) {
        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';
      }
      out += ') || ';
    }
    out += ' (' + ($format) + ' && !(typeof ' + ($format) + ' == \'function\' ? ';
    if (it.async) {
      out += ' (async' + ($lvl) + ' ? ' + (it.yieldAwait) + ' ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';
    } else {
      out += ' ' + ($format) + '(' + ($data) + ') ';
    }
    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';
  } else {
    var $format = it.formats[$schema];
    if (!$format) {
      if ($unknownFormats === true || ($allowUnknown && $unknownFormats.indexOf($schema) == -1)) {
        throw new Error('unknown format "' + $schema + '" is used in schema at path "' + it.errSchemaPath + '"');
      } else {
        if (!$allowUnknown) {
          console.warn('unknown format "' + $schema + '" ignored in schema at path "' + it.errSchemaPath + '"');
          if ($unknownFormats !== 'ignore') console.warn('In the next major version it will throw exception. See option unknownFormats for more information');
        }
        if ($breakOnError) {
          out += ' if (true) { ';
        }
        return out;
      }
    }
    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;
    if ($isObject) {
      var $async = $format.async === true;
      $format = $format.validate;
    }
    if ($async) {
      if (!it.async) throw new Error('async format in sync schema');
      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';
      out += ' if (!(' + (it.yieldAwait) + ' ' + ($formatRef) + '(' + ($data) + '))) { ';
    } else {
      out += ' if (! ';
      var $formatRef = 'formats' + it.util.getProperty($schema);
      if ($isObject) $formatRef += '.validate';
      if (typeof $format == 'function') {
        out += ' ' + ($formatRef) + '(' + ($data) + ') ';
      } else {
        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';
      }
      out += ') { ';
    }
  }
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'format') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += '  } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match format "';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + (it.util.escapeQuotes($schema));
      }
      out += '"\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + (it.util.toQuotedString($schema));
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' } ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 133:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_items(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $idx = 'i' + $lvl,
    $dataNxt = $it.dataLevel = it.dataLevel + 1,
    $nextData = 'data' + $dataNxt,
    $currentBaseId = it.baseId;
  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
  if (Array.isArray($schema)) {
    var $additionalItems = it.schema.additionalItems;
    if ($additionalItems === false) {
      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';
      var $currErrSchemaPath = $errSchemaPath;
      $errSchemaPath = it.errSchemaPath + '/additionalItems';
      out += '  if (!' + ($valid) + ') {   ';
      var $$outStack = $$outStack || [];
      $$outStack.push(out);
      out = ''; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'additionalItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should NOT have more than ' + ($schema.length) + ' items\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      var __err = out;
      out = $$outStack.pop();
      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError([' + (__err) + ']); ';
        } else {
          out += ' validate.errors = [' + (__err) + ']; return false; ';
        }
      } else {
        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      }
      out += ' } ';
      $errSchemaPath = $currErrSchemaPath;
      if ($breakOnError) {
        $closingBraces += '}';
        out += ' else { ';
      }
    }
    var arr1 = $schema;
    if (arr1) {
      var $sch, $i = -1,
        l1 = arr1.length - 1;
      while ($i < l1) {
        $sch = arr1[$i += 1];
        if (it.util.schemaHasRules($sch, it.RULES.all)) {
          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';
          var $passData = $data + '[' + $i + ']';
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + '[' + $i + ']';
          $it.errSchemaPath = $errSchemaPath + '/' + $i;
          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
          $it.dataPathArr[$dataNxt] = $i;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          out += ' }  ';
          if ($breakOnError) {
            out += ' if (' + ($nextValid) + ') { ';
            $closingBraces += '}';
          }
        }
      }
    }
    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {
      $it.schema = $additionalItems;
      $it.schemaPath = it.schemaPath + '.additionalItems';
      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';
      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
      var $passData = $data + '[' + $idx + ']';
      $it.dataPathArr[$dataNxt] = $idx;
      var $code = it.validate($it);
      $it.baseId = $currentBaseId;
      if (it.util.varOccurences($code, $nextData) < 2) {
        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
      } else {
        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
      }
      if ($breakOnError) {
        out += ' if (!' + ($nextValid) + ') break; ';
      }
      out += ' } }  ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
        $closingBraces += '}';
      }
    }
  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
    var $passData = $data + '[' + $idx + ']';
    $it.dataPathArr[$dataNxt] = $idx;
    var $code = it.validate($it);
    $it.baseId = $currentBaseId;
    if (it.util.varOccurences($code, $nextData) < 2) {
      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
    } else {
      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
    }
    if ($breakOnError) {
      out += ' if (!' + ($nextValid) + ') break; ';
    }
    out += ' }  ';
    if ($breakOnError) {
      out += ' if (' + ($nextValid) + ') { ';
      $closingBraces += '}';
    }
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ 134:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_multipleOf(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  out += 'var division' + ($lvl) + ';if (';
  if ($isData) {
    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \'number\' || ';
  }
  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';
  if (it.opts.multipleOfPrecision) {
    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';
  } else {
    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';
  }
  out += ' ) ';
  if ($isData) {
    out += '  )  ';
  }
  out += ' ) {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'multipleOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be multiple of ';
      if ($isData) {
        out += '\' + ' + ($schemaValue);
      } else {
        out += '' + ($schema) + '\'';
      }
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 135:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_not(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  if (it.util.schemaHasRules($schema, it.RULES.all)) {
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += ' var ' + ($errs) + ' = errors;  ';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    $it.createErrors = false;
    var $allErrorsOption;
    if ($it.opts.allErrors) {
      $allErrorsOption = $it.opts.allErrors;
      $it.opts.allErrors = false;
    }
    out += ' ' + (it.validate($it)) + ' ';
    $it.createErrors = true;
    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' if (' + ($nextValid) + ') {   ';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT be valid\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
    if (it.opts.allErrors) {
      out += ' } ';
    }
  } else {
    out += '  var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT be valid\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    if ($breakOnError) {
      out += ' if (false) { ';
    }
  }
  return out;
}


/***/ }),

/***/ 136:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_oneOf(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';
  var $currentBaseId = $it.baseId;
  var $wasComposite = it.compositeRule;
  it.compositeRule = $it.compositeRule = true;
  var arr1 = $schema;
  if (arr1) {
    var $sch, $i = -1,
      l1 = arr1.length - 1;
    while ($i < l1) {
      $sch = arr1[$i += 1];
      if (it.util.schemaHasRules($sch, it.RULES.all)) {
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
      } else {
        out += ' var ' + ($nextValid) + ' = true; ';
      }
      if ($i) {
        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';
        $closingBraces += '}';
      }
      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';
    }
  }
  it.compositeRule = $it.compositeRule = $wasComposite;
  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'oneOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match exactly one schema in oneOf\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';
  if (it.opts.allErrors) {
    out += ' } ';
  }
  return out;
}


/***/ }),

/***/ 137:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_pattern(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
  }
  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || 'pattern') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += '  } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match pattern "';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + (it.util.escapeQuotes($schema));
      }
      out += '"\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + (it.util.toQuotedString($schema));
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 138:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_patternRequired(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $key = 'key' + $lvl,
    $matched = 'patternMatched' + $lvl,
    $closingBraces = '',
    $ownProperties = it.opts.ownProperties;
  out += 'var ' + ($valid) + ' = true;';
  var arr1 = $schema;
  if (arr1) {
    var $pProperty, i1 = -1,
      l1 = arr1.length - 1;
    while (i1 < l1) {
      $pProperty = arr1[i1 += 1];
      out += ' var ' + ($matched) + ' = false; for (var ' + ($key) + ' in ' + ($data) + ') {  ';
      if ($ownProperties) {
        out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
      }
      out += ' ' + ($matched) + ' = ' + (it.usePattern($pProperty)) + '.test(' + ($key) + '); if (' + ($matched) + ') break; } ';
      var $missingPattern = it.util.escapeQuotes($pProperty);
      out += ' if (!' + ($matched) + ') { ' + ($valid) + ' = false;  var err =   '; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'patternRequired') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingPattern: \'' + ($missingPattern) + '\' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should have property matching pattern \\\'' + ($missingPattern) + '\\\'\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';
      if ($breakOnError) {
        $closingBraces += '}';
        out += ' else { ';
      }
    }
  }
  out += '' + ($closingBraces);
  return out;
}


/***/ }),

/***/ 139:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_properties(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $key = 'key' + $lvl,
    $dataNxt = $it.dataLevel = it.dataLevel + 1,
    $nextData = 'data' + $dataNxt;
  var $schemaKeys = Object.keys($schema || {}),
    $pProperties = it.schema.patternProperties || {},
    $pPropertyKeys = Object.keys($pProperties),
    $aProperties = it.schema.additionalProperties,
    $someProperties = $schemaKeys.length || $pPropertyKeys.length,
    $noAdditional = $aProperties === false,
    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,
    $removeAdditional = it.opts.removeAdditional,
    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,
    $ownProperties = it.opts.ownProperties,
    $currentBaseId = it.baseId;
  var $required = it.schema.required;
  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);
  if (it.opts.v5) {
    var $pgProperties = it.schema.patternGroups || {},
      $pgPropertyKeys = Object.keys($pgProperties);
  }
  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';
  if ($checkAdditional) {
    out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';
    if ($ownProperties) {
      out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
    }
    if ($someProperties) {
      out += ' var isAdditional' + ($lvl) + ' = !(false ';
      if ($schemaKeys.length) {
        if ($schemaKeys.length > 5) {
          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';
        } else {
          var arr1 = $schemaKeys;
          if (arr1) {
            var $propertyKey, i1 = -1,
              l1 = arr1.length - 1;
            while (i1 < l1) {
              $propertyKey = arr1[i1 += 1];
              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';
            }
          }
        }
      }
      if ($pPropertyKeys.length) {
        var arr2 = $pPropertyKeys;
        if (arr2) {
          var $pProperty, $i = -1,
            l2 = arr2.length - 1;
          while ($i < l2) {
            $pProperty = arr2[$i += 1];
            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';
          }
        }
      }
      if (it.opts.v5 && $pgPropertyKeys && $pgPropertyKeys.length) {
        var arr3 = $pgPropertyKeys;
        if (arr3) {
          var $pgProperty, $i = -1,
            l3 = arr3.length - 1;
          while ($i < l3) {
            $pgProperty = arr3[$i += 1];
            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';
          }
        }
      }
      out += ' ); if (isAdditional' + ($lvl) + ') { ';
    }
    if ($removeAdditional == 'all') {
      out += ' delete ' + ($data) + '[' + ($key) + ']; ';
    } else {
      var $currentErrorPath = it.errorPath;
      var $additionalProperty = '\' + ' + $key + ' + \'';
      if (it.opts._errorDataPathProperty) {
        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
      }
      if ($noAdditional) {
        if ($removeAdditional) {
          out += ' delete ' + ($data) + '[' + ($key) + ']; ';
        } else {
          out += ' ' + ($nextValid) + ' = false; ';
          var $currErrSchemaPath = $errSchemaPath;
          $errSchemaPath = it.errSchemaPath + '/additionalProperties';
          var $$outStack = $$outStack || [];
          $$outStack.push(out);
          out = ''; /* istanbul ignore else */
          if (it.createErrors !== false) {
            out += ' { keyword: \'' + ($errorKeyword || 'additionalProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \'' + ($additionalProperty) + '\' } ';
            if (it.opts.messages !== false) {
              out += ' , message: \'should NOT have additional properties\' ';
            }
            if (it.opts.verbose) {
              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
            }
            out += ' } ';
          } else {
            out += ' {} ';
          }
          var __err = out;
          out = $$outStack.pop();
          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
            if (it.async) {
              out += ' throw new ValidationError([' + (__err) + ']); ';
            } else {
              out += ' validate.errors = [' + (__err) + ']; return false; ';
            }
          } else {
            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
          }
          $errSchemaPath = $currErrSchemaPath;
          if ($breakOnError) {
            out += ' break; ';
          }
        }
      } else if ($additionalIsSchema) {
        if ($removeAdditional == 'failing') {
          out += ' var ' + ($errs) + ' = errors;  ';
          var $wasComposite = it.compositeRule;
          it.compositeRule = $it.compositeRule = true;
          $it.schema = $aProperties;
          $it.schemaPath = it.schemaPath + '.additionalProperties';
          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';
          it.compositeRule = $it.compositeRule = $wasComposite;
        } else {
          $it.schema = $aProperties;
          $it.schemaPath = it.schemaPath + '.additionalProperties';
          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          if ($breakOnError) {
            out += ' if (!' + ($nextValid) + ') break; ';
          }
        }
      }
      it.errorPath = $currentErrorPath;
    }
    if ($someProperties) {
      out += ' } ';
    }
    out += ' }  ';
    if ($breakOnError) {
      out += ' if (' + ($nextValid) + ') { ';
      $closingBraces += '}';
    }
  }
  var $useDefaults = it.opts.useDefaults && !it.compositeRule;
  if ($schemaKeys.length) {
    var arr4 = $schemaKeys;
    if (arr4) {
      var $propertyKey, i4 = -1,
        l4 = arr4.length - 1;
      while (i4 < l4) {
        $propertyKey = arr4[i4 += 1];
        var $sch = $schema[$propertyKey];
        if (it.util.schemaHasRules($sch, it.RULES.all)) {
          var $prop = it.util.getProperty($propertyKey),
            $passData = $data + $prop,
            $hasDefault = $useDefaults && $sch.default !== undefined;
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + $prop;
          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);
          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            $code = it.util.varReplace($code, $nextData, $passData);
            var $useData = $passData;
          } else {
            var $useData = $nextData;
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';
          }
          if ($hasDefault) {
            out += ' ' + ($code) + ' ';
          } else {
            if ($requiredHash && $requiredHash[$propertyKey]) {
              out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = false; ';
              var $currentErrorPath = it.errorPath,
                $currErrSchemaPath = $errSchemaPath,
                $missingProperty = it.util.escapeQuotes($propertyKey);
              if (it.opts._errorDataPathProperty) {
                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
              }
              $errSchemaPath = it.errSchemaPath + '/required';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'';
                  if (it.opts._errorDataPathProperty) {
                    out += 'is a required property';
                  } else {
                    out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
                  }
                  out += '\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              $errSchemaPath = $currErrSchemaPath;
              it.errorPath = $currentErrorPath;
              out += ' } else { ';
            } else {
              if ($breakOnError) {
                out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = true; } else { ';
              } else {
                out += ' if (' + ($useData) + ' !== undefined) { ';
              }
            }
            out += ' ' + ($code) + ' } ';
          }
        }
        if ($breakOnError) {
          out += ' if (' + ($nextValid) + ') { ';
          $closingBraces += '}';
        }
      }
    }
  }
  var arr5 = $pPropertyKeys;
  if (arr5) {
    var $pProperty, i5 = -1,
      l5 = arr5.length - 1;
    while (i5 < l5) {
      $pProperty = arr5[i5 += 1];
      var $sch = $pProperties[$pProperty];
      if (it.util.schemaHasRules($sch, it.RULES.all)) {
        $it.schema = $sch;
        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
        $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);
        out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';
        if ($ownProperties) {
          out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
        }
        out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';
        $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
        var $passData = $data + '[' + $key + ']';
        $it.dataPathArr[$dataNxt] = $key;
        var $code = it.validate($it);
        $it.baseId = $currentBaseId;
        if (it.util.varOccurences($code, $nextData) < 2) {
          out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
        } else {
          out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
        }
        if ($breakOnError) {
          out += ' if (!' + ($nextValid) + ') break; ';
        }
        out += ' } ';
        if ($breakOnError) {
          out += ' else ' + ($nextValid) + ' = true; ';
        }
        out += ' }  ';
        if ($breakOnError) {
          out += ' if (' + ($nextValid) + ') { ';
          $closingBraces += '}';
        }
      }
    }
  }
  if (it.opts.v5) {
    var arr6 = $pgPropertyKeys;
    if (arr6) {
      var $pgProperty, i6 = -1,
        l6 = arr6.length - 1;
      while (i6 < l6) {
        $pgProperty = arr6[i6 += 1];
        var $pgSchema = $pgProperties[$pgProperty],
          $sch = $pgSchema.schema;
        if (it.util.schemaHasRules($sch, it.RULES.all)) {
          $it.schema = $sch;
          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';
          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';
          out += ' var pgPropCount' + ($lvl) + ' = 0; for (var ' + ($key) + ' in ' + ($data) + ') {  ';
          if ($ownProperties) {
            out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
          }
          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';
          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          if ($breakOnError) {
            out += ' if (!' + ($nextValid) + ') break; ';
          }
          out += ' } ';
          if ($breakOnError) {
            out += ' else ' + ($nextValid) + ' = true; ';
          }
          out += ' }  ';
          if ($breakOnError) {
            out += ' if (' + ($nextValid) + ') { ';
            $closingBraces += '}';
          }
          var $pgMin = $pgSchema.minimum,
            $pgMax = $pgSchema.maximum;
          if ($pgMin !== undefined || $pgMax !== undefined) {
            out += ' var ' + ($valid) + ' = true; ';
            var $currErrSchemaPath = $errSchemaPath;
            if ($pgMin !== undefined) {
              var $limit = $pgMin,
                $reason = 'minimum',
                $moreOrLess = 'less';
              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';
              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';
              out += '  if (!' + ($valid) + ') {   ';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ($errorKeyword || 'patternGroups') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \'' + ($reason) + '\', limit: ' + ($limit) + ', pattern: \'' + (it.util.escapeQuotes($pgProperty)) + '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern "' + (it.util.escapeQuotes($pgProperty)) + '"\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              out += ' } ';
              if ($pgMax !== undefined) {
                out += ' else ';
              }
            }
            if ($pgMax !== undefined) {
              var $limit = $pgMax,
                $reason = 'maximum',
                $moreOrLess = 'more';
              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';
              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';
              out += '  if (!' + ($valid) + ') {   ';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ($errorKeyword || 'patternGroups') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \'' + ($reason) + '\', limit: ' + ($limit) + ', pattern: \'' + (it.util.escapeQuotes($pgProperty)) + '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern "' + (it.util.escapeQuotes($pgProperty)) + '"\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              out += ' } ';
            }
            $errSchemaPath = $currErrSchemaPath;
            if ($breakOnError) {
              out += ' if (' + ($valid) + ') { ';
              $closingBraces += '}';
            }
          }
        }
      }
    }
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ 14:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function webpackUniversalModuleDefinition(root, factory) {
   if (( false ? 'undefined' : _typeof2(exports)) === 'object' && ( false ? 'undefined' : _typeof2(module)) === 'object') module.exports = factory(__webpack_require__(83));else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(83)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof2(exports)) === 'object') exports["laxar"] = factory(require("page"));else root["laxar"] = factory(root["page"]);
})(this, function (__WEBPACK_EXTERNAL_MODULE_33__) {
   return (/******/function (modules) {
         // webpackBootstrap
         /******/ // The module cache
         /******/var installedModules = {};
         /******/
         /******/ // The require function
         /******/function __webpack_require__(moduleId) {
            /******/
            /******/ // Check if module is in cache
            /******/if (installedModules[moduleId])
               /******/return installedModules[moduleId].exports;
            /******/
            /******/ // Create a new module (and put it into the cache)
            /******/var module = installedModules[moduleId] = {
               /******/i: moduleId,
               /******/l: false,
               /******/exports: {}
               /******/ };
            /******/
            /******/ // Execute the module function
            /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/ // Flag the module as loaded
            /******/module.l = true;
            /******/
            /******/ // Return the exports of the module
            /******/return module.exports;
            /******/
         }
         /******/
         /******/
         /******/ // expose the modules object (__webpack_modules__)
         /******/__webpack_require__.m = modules;
         /******/
         /******/ // expose the module cache
         /******/__webpack_require__.c = installedModules;
         /******/
         /******/ // identity function for calling harmony imports with the correct context
         /******/__webpack_require__.i = function (value) {
            return value;
         };
         /******/
         /******/ // define getter function for harmony exports
         /******/__webpack_require__.d = function (exports, name, getter) {
            /******/if (!__webpack_require__.o(exports, name)) {
               /******/Object.defineProperty(exports, name, {
                  /******/configurable: false,
                  /******/enumerable: true,
                  /******/get: getter
                  /******/ });
               /******/
            }
            /******/
         };
         /******/
         /******/ // getDefaultExport function for compatibility with non-harmony modules
         /******/__webpack_require__.n = function (module) {
            /******/var getter = module && module.__esModule ?
            /******/function getDefault() {
               return module['default'];
            } :
            /******/function getModuleExports() {
               return module;
            };
            /******/__webpack_require__.d(getter, 'a', getter);
            /******/return getter;
            /******/
         };
         /******/
         /******/ // Object.prototype.hasOwnProperty.call
         /******/__webpack_require__.o = function (object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
         };
         /******/
         /******/ // __webpack_public_path__
         /******/__webpack_require__.p = "";
         /******/
         /******/ // Load entry module and return exports
         /******/return __webpack_require__(__webpack_require__.s = 34);
         /******/
      }(
      /************************************************************************/
      /******/[
      /* 0 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* unused harmony export codeIsUnreachable */
         /* unused harmony export state */

         var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
            return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         };

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * The *assert* module provides some simple assertion methods for type checks, truthyness tests and guards
          * invalid code paths.
          * When importing the module as `default` module, it is the {@link assert} function itself.
          *
          * When requiring `laxar`, it is available as `laxar.assert`.
          *
          * @module assert
          */

         /**
          * Constructor for an Assertion.
          *
          * @param {*} subject
          *    the object assertions are made for
          * @param {String} [optionalDetails]
          *    details that should be printed in case no specific details are given for an assertion method
          *
          * @constructor
          * @private
          */
         function Assertion(subject, optionalDetails) {
            this.subject_ = subject;
            this.details_ = optionalDetails || null;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Throws an error if the subject is `null` or `undefined`.
          *
          * @param {String} [optionalDetails]
          *    details to append to the error message
          *
          * @return {Assertion}
          *    this instance
          */
         Assertion.prototype.isNotNull = function isNotNull(optionalDetails) {
            if (this.subject_ == null) {
               fail('Expected value to be defined and not null.', optionalDetails || this.details_);
            }

            return this;
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Throws an error if the subject is not of the given type. No error is thrown for `null` or `undefined`.
          *
          * @param {Function} type
          *    the expected type of the subject
          * @param {String} [optionalDetails]
          *    details to append to the error message
          *
          * @return {Assertion}
          *    this instance
          */
         Assertion.prototype.hasType = function hasType(type, optionalDetails) {
            if (typeof this.subject_ === 'undefined' || this.subject_ === null) {
               return this;
            }

            if (typeof type !== 'function') {
               fail('type must be a constructor function. Got ' + (typeof type === 'undefined' ? 'undefined' : _typeof(type)) + '.');
            }

            if (!checkType(this.subject_, type)) {
               var actualString = functionName(this.subject_.constructor);
               var expectedString = functionName(type);

               fail('Expected value to be an instance of "' + expectedString + '" but was "' + actualString + '".', optionalDetails || this.details_);
            }

            return this;
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Throws an error if the subject is no object or the given property is not defined on it.
          *
          * @param {String} property
          *    the property that is expected for the subject
          * @param {String} [optionalDetails]
          *    details to append to the error message
          *
          * @return {Assertion}
          *    this instance
          */
         Assertion.prototype.hasProperty = function hasProperty(property, optionalDetails) {
            if (_typeof(this.subject_) !== 'object') {
               fail('value must be an object. Got ' + _typeof(this.subject_) + '.');
            }

            if (!(property in this.subject_)) {
               fail('value is missing mandatory property "' + property + '".', optionalDetails || this.details_);
            }

            return this;
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function fail(message, optionalDetails) {
            var details = '';
            if (optionalDetails) {
               var detailString = (typeof optionalDetails === 'undefined' ? 'undefined' : _typeof(optionalDetails)) === 'object' ? JSON.stringify(optionalDetails) : optionalDetails;
               details = ' Details: ' + detailString;
            }
            throw new Error('Assertion error: ' + message + details);
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var TYPE_TO_CONSTRUCTOR = {
            'string': String,
            'number': Number,
            'boolean': Boolean,
            'function': Function
         };
         function checkType(subject, type) {
            if ((typeof subject === 'undefined' ? 'undefined' : _typeof(subject)) === 'object') {
               return subject instanceof type;
            }

            var actualType = TYPE_TO_CONSTRUCTOR[typeof subject === 'undefined' ? 'undefined' : _typeof(subject)];
            return actualType === type;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var FUNCTION_NAME_MATCHER = /^function ([^(]*)\(/i;
         function functionName(func) {
            var match = FUNCTION_NAME_MATCHER.exec(func.toString().trim());
            return match[1].length ? match[1] : 'n/a';
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates and returns a new `Assertion` instance for the given `subject`.
          *
          * **Note**: this function is no member of the module, but the module itself. Thus when using `assert` via
          * laxar, `assert` is will be no simple object, but this function having the other functions as
          * properties.
          *
          * Example:
          * ```js
          * define( [ 'laxar' ], function( ax ) {
          *    ax.assert( ax.assert ).hasType( Function );
          *    ax.assert.state( typeof ax.assert.codeIsUnreachable === 'function' );
          * } );
          * ```
          *
          * @param {*} subject
          *    the object assertions are made for
          * @param {String} [optionalDetails]
          *    details that should be printed in case no specific details are given when calling an assertion method
          *
          * @return {Assertion}
          *    the assertion instance
          */
         function assert(subject, optionalDetails) {
            return new Assertion(subject, optionalDetails);
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Marks a code path as erroneous by throwing an error when reached.
          *
          * @param {String} [optionalDetails]
          *    details to append to the error message
          */
         assert.codeIsUnreachable = function codeIsUnreachable(optionalDetails) {
            fail('Code should be unreachable!', optionalDetails);
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Throws an error if the given expression is falsy.
          *
          * @param {*} expression
          *    the expression to test for truthyness
          * @param {String} [optionalDetails]
          *    details to append to the error message
          */
         assert.state = function state(expression, optionalDetails) {
            if (!expression) {
               fail('State does not hold.', optionalDetails);
            }
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /* harmony default export */__webpack_exports__["a"] = assert;
         var codeIsUnreachable = assert.codeIsUnreachable;
         var state = assert.state;

         /***/
      },
      /* 1 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";

         Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
         /* harmony export (immutable) */__webpack_exports__["options"] = options;
         /* harmony export (immutable) */__webpack_exports__["forEach"] = forEach;
         /* harmony export (immutable) */__webpack_exports__["path"] = path;
         /* harmony export (immutable) */__webpack_exports__["setPath"] = setPath;
         /* harmony export (immutable) */__webpack_exports__["deepClone"] = deepClone;
         /* harmony export (immutable) */__webpack_exports__["tabulate"] = tabulate;
         var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
            return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         };

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Utilities for dealing with objects.
          *
          * When requiring `laxar`, it is available as `laxar.object`.
          *
          * @module object
          */

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Returns all properties from `obj` with missing properties completed from `defaults`. If `obj` is `null`
          * or `undefined`, an empty object is automatically created. `obj` and `defaults` are not modified by this
          * function. This is very useful for optional map arguments, resembling some kind of configuration.
          *
          * Example:
          * ```js
          * object.options( { validate: true }, {
          *    validate: false,
          *    highlight: true
          * } );
          * // =>
          * // {
          * //    validate: true,
          * //    highlight: true
          * // }
          * ```
          *
          * @param {Object} obj
          *    the options object to use as source, may be `null` or `undefined`
          * @param {Object} defaults
          *    the defaults to take missing properties from
          *
          * @return {Object}
          *    the completed options object
          */
         function options(obj, defaults) {
            return Object.assign({}, defaults, obj);
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Iterates over the keys of an object and calls the given iterator function for each entry.
          * On each iteration the iterator function is passed the `value`, the `key` and the complete `object` as
          * arguments.
          * If `object` is an array, the native `Array.prototype.forEach` function is called.
          * In this case the keys are the indices of the array.
          *
          * Example:
          * ```
          * object.forEach( { name: Peter, age: 12 }, ( value, key ) => {
          *    console.log( `${key} = ${value}\n` );
          * });
          * // =>
          * // name = Peter
          * // age = 12
          * ```
          *
          * @param {Object} object
          *    the object to run the iterator function on
          * @param {Function} iteratorFunction
          *    the iterator function to run on each key-value pair
          */
         function forEach(object, iteratorFunction) {
            if (Array.isArray(object)) {
               object.forEach(iteratorFunction);
               return;
            }

            for (var key in object) {
               if (hasOwnProperty(object, key)) {
                  iteratorFunction(object[key], key, object);
               }
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Finds a property in a nested object structure by a given path. A path is a string of keys, separated
          * by a dot from each other, used to traverse that object and find the value of interest. An additional
          * default is returned, if otherwise the value would yield `undefined`.
          *
          * Note that `path()` must only be used in situations where all path segments are also valid
          * JavaScript identifiers, and should never be used with user-specified paths:
          *
          *  - there is no mechanism to escape '.' in path segments; a dot always separates keys,
          *  - an empty string as a path segment will abort processing and return the entire sub-object under the
          *    respective position. For historical reasons, the path interpretation differs from that performed by
          *    {@link #setPath()}.
          *
          *
          * Example:
          *
          * ```js
          * object.path( { one: { two: 3 } }, 'one.two' ); // => 3
          * object.path( { one: { two: 3 } }, 'one.three' ); // => undefined
          * object.path( { one: { two: 3 } }, 'one.three', 42 ); // => 42
          * object.path( { one: { two: 3 } }, 'one.' ); // => { two: 3 }
          * object.path( { one: { two: 3 } }, '' ); // => { one: { two: 3 } }
          * object.path( { one: { two: 3 } }, '.' ); // => { one: { two: 3 } }
          * ```
          *
          * @param {Object} obj
          *    the object to traverse
          * @param {String} thePath
          *    the path to search for
          * @param {*} [optionalDefault]
          *    the value to return instead of `undefined` if nothing is found
          *
          * @return {*}
          *    the value at the given path
          */
         function path(obj, thePath) {
            var optionalDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

            var pathArr = thePath.split('.');
            var node = obj;
            var key = pathArr.shift();

            while (key) {
               if (node && (typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object' && hasOwnProperty(node, key)) {
                  node = node[key];
                  key = pathArr.shift();
               } else {
                  return optionalDefault;
               }
            }

            return node;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Sets a property in a nested object structure at a given path to a given value. A path is a string of
          * keys, separated by a dot from each other, used to traverse that object and find the place where the
          * value should be set. Any missing subtrees along the path are created.
          *
          * Note that `setPath()` must only be used in situations where all path segments are also valid
          * JavaScript identifiers, and should never be used with user-specified paths:
          *
          *  - there is no mechanism to escape '.' in path segments; a dot will always create separate keys,
          *  - an empty string as a path segment will create an empty string key in the object graph where missing.
          *    For historical reasons, this path interpretation differs from that performed by #path (see there).
          *
          *
          * Example:
          *
          * ```js
          * object.setPath( {}, 'name.first', 'Peter' ); // => { name: { first: 'Peter' } }
          * object.setPath( {}, 'pets.1', 'Hamster' ); // => { pets: [ null, 'Hamster' ] }
          * object.setPath( {}, '', 'Hamster' ); // => { '': 'Hamster' } }
          * object.setPath( {}, '.', 'Hamster' ); // => { '': { '': 'Hamster' } } }
          * ```
          *
          * @param {Object} obj
          *    the object to modify
          * @param {String} path
          *    the path to set a value at
          * @param {*} value
          *    the value to set at the given path
          *
          * @return {*}
          *    the full object (for chaining)
          */
         function setPath(obj, path, value) {
            var node = obj;
            var pathArr = path.split('.');
            var last = pathArr.pop();

            pathArr.forEach(function (pathFragment, index) {
               if (!node[pathFragment] || _typeof(node[pathFragment]) !== 'object') {
                  var lookAheadFragment = pathArr[index + 1] || last;
                  if (lookAheadFragment.match(/^[0-9]+$/)) {
                     node[pathFragment] = [];
                     fillArrayWithNull(node[pathFragment], parseInt(lookAheadFragment, 10));
                  } else {
                     node[pathFragment] = {};
                  }
               }

               node = node[pathFragment];
            });

            if (Array.isArray(node) && last > node.length) {
               fillArrayWithNull(node, last);
            }

            node[last] = value;

            return obj;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Returns a deep clone of the given object. Note that the current implementation is intended to be used
          * for simple object literals only. There is no guarantee that cloning objects instantiated via
          * constructor function works and cyclic references will lead to endless recursion.
          *
          * @param {*} object
          *    the object to clone
          *
          * @return {*}
          *    the clone
          */
         function deepClone(object) {
            if (!object || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) !== 'object') {
               return object;
            }

            // Using plain for-loops here for performance-reasons.
            var result = void 0;
            if (Array.isArray(object)) {
               result = [];
               for (var i = 0, length = object.length; i < length; ++i) {
                  result[i] = deepClone(object[i]);
               }
            } else {
               result = {};
               for (var key in object) {
                  if (hasOwnProperty(object, key)) {
                     result[key] = deepClone(object[key]);
                  }
               }
            }

            return result;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates a lookup table from a function and a list of inputs to the function.
          *
          * @param {Function} fn
          *    The callback to apply to all inputs
          * @param {String[]|Number[]|Boolean[]} keys
          *    The keys for the lookup table, and inputs to the function.
          *
          * @return {Object}
          *    An object mapping the given keys to their values under `fn`.
          */
         function tabulate(fn, keys) {
            return keys.reduce(function (table, k) {
               table[k] = fn(k);return table;
            }, {});
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         // eslint-disable-next-line valid-jsdoc
         /**
          * Sets all entries of the given array to `null`.
          *
          * @private
          */
         function fillArrayWithNull(arr, toIndex) {
            for (var i = arr.length; i < toIndex; ++i) {
               arr[i] = null;
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var hasOwnProp = Object.prototype.hasOwnProperty;
         // eslint-disable-next-line valid-jsdoc
         /**
          * @private
          */
         function hasOwnProperty(object, property) {
            return hasOwnProp.call(object, property);
         }

         /***/
      },
      /* 2 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";

         Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
         /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "DEFAULT_FORMATTERS", function () {
            return DEFAULT_FORMATTERS;
         });
         /* harmony export (immutable) */__webpack_exports__["format"] = format;
         /* harmony export (immutable) */__webpack_exports__["createFormatter"] = createFormatter;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Utilities for dealing with strings.
          *
          * When requiring `laxar`, it is available as `laxar.string`.
          *
          * @module string
          */

         //
         var BACKSLASH = '\\';
         var OPENING_BRACKET = '[';
         var CLOSING_BRACKET = ']';
         var INTEGER_MATCHER = /^[0-9]+$/;

         /**
          * A map of all available default format specifiers to their respective formatter function.
          * The following specifiers are available:
          *
          * - `%d` / `%i`: Format the given numeric value as integer. Decimal places are removed
          * - `%f`: Format the given numeric value as floating point value. This specifier supports precision as
          *   sub-specifier (e.g. `%.2f` for 2 decimal places)
          * - `%s`: use simple string serialization using `toString`
          * - `%o`: Format complex objects using `JSON.stringify`
          *
          * @type {Object}
          * @name DEFAULT_FORMATTERS
          */
         var DEFAULT_FORMATTERS = Object.freeze({
            's': function s(input) {
               return '' + input;
            },
            'd': function d(input) {
               return input.toFixed(0);
            },
            'i': function i(input, subSpecifierString) {
               return DEFAULT_FORMATTERS.d(input, subSpecifierString);
            },
            'f': function f(input, subSpecifierString) {
               var precision = subSpecifierString.match(/^\.(\d)$/);
               if (precision) {
                  return input.toFixed(precision[1]);
               }

               return '' + input;
            },
            'o': function o(input) {
               return JSON.stringify(input);
            },
            'default': function _default(input, subSpecifierString) {
               return DEFAULT_FORMATTERS.s(input, subSpecifierString);
            }
         });

         var DEFAULT_FORMATTER = createFormatter(DEFAULT_FORMATTERS);

         ///////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Substitutes all unescaped placeholders in the given string for a given indexed or named value.
          * A placeholder is written as a pair of brackets around the key of the placeholder. An example of an
          * indexed placeholder is `[0]` and a named placeholder would look like this `[replaceMe]`. If no
          * replacement for a key exists, the placeholder will simply not be substituted.
          *
          * Some examples:
          * ```javascript
          * string.format( 'Hello [0], how do you like [1]?', [ 'Peter', 'Cheeseburgers' ] );
          * // => 'Hello Peter, how do you like Cheeseburgers?'
          * ```
          * ```javascript
          * string.format( 'Hello [name] and [partner], how do you like [0]?', [ 'Pizza' ], {
          *    name: 'Hans',
          *    partner: 'Roswita'
          * } );
          * // => 'Hello Hans and Roswita, how do you like Pizza?'
          * ```
          * If a pair of brackets should not be treated as a placeholder, the opening bracket can simply be escaped
          * by backslashes (thus to get an actual backslash in a JavaScript string literal, which is then treated as
          * an escape symbol, it needs to be written as double backslash):
          * ```javascript
          * string.format( 'A [something] should eventually only have \\[x].', {
          *    something: 'checklist'
          * } );
          * // => 'A checklist should eventually only have [x].'
          * ```
          * A placeholder key can be any character string besides `[`, `]` and `:` to keep parsing simple and fast.
          * By using `:` as separator it is possible to provide a type specifier for string serialization or other
          * additional mapping functions for the value to insert. Type specifiers always begin with an `%` and end
          * with the specifier type. Builtin specifiers and their according formatter functions are defined
          * as {@link DEFAULT_FORMATTERS}.
          *
          * When no specifier is provided, by default `%s` is assumed.
          *
          * Example:
          * ```javascript
          * string.format( 'Hello [0:%s], you owe me [1:%.2f] euros.', [ 'Peter', 12.1243 ] );
          * // => 'Hello Peter, you owe me 12.12 euros.'
          * ```
          *
          * Mapping functions should instead consist of simple strings and may not begin with a `%` character. It is
          * advised to use the same naming rules as for simple JavaScript functions. Type specifiers and mapping
          * functions are applied in the order they appear within the placeholder.
          *
          * An example, where we assume that the mapping functions `flip` and `double` where defined by the user
          * when creating the `formatString` function using {@link #createFormatter()}:
          * ```javascript
          * formatString( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );
          * // => 'Hello reteP, you owe me 24.00 euros.'
          * ```
          *
          * Note that there currently exist no builtin mapping functions.
          *
          * If a type specifier is used that doesn't exist, an exception is thrown. In contrast to that the use of
          * an unknown mapping function results in a no-op. This is on purpose to be able to use filter-like
          * functions that, in case they are defined for a formatter, transform a value as needed and in all other
          * cases simply are ignored and don't alter the value.
          *
          * @param {String} string
          *    the string to replace placeholders in
          * @param {Array} [optionalIndexedReplacements]
          *    an optional array of indexed replacements
          * @param {Object} [optionalNamedReplacements]
          *    an optional map of named replacements
          *
          * @return {String}
          *    the string with placeholders substituted for their according replacements
          */
         function format(string, optionalIndexedReplacements, optionalNamedReplacements) {
            return DEFAULT_FORMATTER(string, optionalIndexedReplacements, optionalNamedReplacements);
         }

         ///////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates a new format function having the same api as {@link #format()}. If the first argument is
          * omitted or `null`, the default formatters for type specifiers are used. Otherwise only the provided map
          * of specifiers is available to the returned format function. Each key of the map is a specifier character
          * where the `%` is omitted and the value is the formatting function. A formatting function receives the
          * value to format (i.e. serialize) and the sub-specifier (if any) as arguments. For example for the format
          * specifier `%.2f` the sub-specifier would be `.2` where for `%s` it would simply be the empty string.
          *
          * Example:
          * ```js
          * const format = string.createFormatter( {
          *    'm': function( value ) {
          *       return value.amount + ' ' + value.currency;
          *    },
          *    'p': function( value, subSpecifier ) {
          *       return Math.pow( value, parseInt( subSpecifier, 10 ) );
          *    }
          * } );
          *
          * format( 'You owe me [0:%m].', [ { amount: 12, currency: 'EUR' } ] );
          * // => 'You owe me 12 EUR.'
          *
          * format( '[0]^3 = [0:%3p]', [ 2 ] );
          * // => '2^3 = 8'
          * ```
          *
          * The second argument is completely additional to the behavior of the default {@link #format()}
          * function. Here a map from mapping function id to actual mapping function can be passed in. Whenever the
          * id of a mapping function is found within the placeholder, that mapping function is called with the
          * current value and its return value is either passed to the next mapping function or rendered
          * instead of the placeholder if there are no more mapping function ids or type specifiers within the
          * placeholder string.
          *
          * ```javascript
          * const format = string.createFormatter( null, {
          *    flip: function( value ) {
          *       return ( '' + s ).split( '' ).reverse().join( '' );
          *    },
          *    double: function( value ) {
          *       return value * 2;
          *    }
          * } );
          *
          * format( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );
          * // => 'Hello reteP, you owe me 24.00 euros.'
          * ```
          *
          * @param {Object} typeFormatters
          *    map from format specifier (single letter without leading `%`) to formatting function
          * @param {Object} [optionalValueMappers]
          *    map from mapping identifier to mapping function
          *
          * @return {Function}
          *    a function having the same api as {@link #format()}
          */
         function createFormatter() {
            var typeFormatters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FORMATTERS;
            var optionalValueMappers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            function format(string, optionalIndexedReplacements, optionalNamedReplacements) {
               if (typeof string !== 'string') {
                  return defaultTypeFormatter(typeFormatters)(string);
               }

               var indexed = Array.isArray(optionalIndexedReplacements) ? optionalIndexedReplacements : [];
               var named = {};
               if (optionalNamedReplacements) {
                  named = optionalNamedReplacements || {};
               } else if (!Array.isArray(optionalIndexedReplacements)) {
                  named = optionalIndexedReplacements || {};
               }

               var chars = string.split('');
               var output = '';
               for (var i = 0, len = chars.length; i < len; ++i) {
                  if (chars[i] === BACKSLASH) {
                     if (i + 1 === len) {
                        throw new Error('Unterminated escaping sequence at index ' + i + ' of string: "' + string + '".');
                     }

                     output += chars[++i];
                  } else if (chars[i] === OPENING_BRACKET) {
                     var closingIndex = string.indexOf(CLOSING_BRACKET, i + 1);
                     if (closingIndex === -1) {
                        throw new Error('Unterminated placeholder at index ' + i + ' of string: "' + string + '".');
                     }

                     var key = string.substring(i + 1, closingIndex);

                     output += replacePlaceholder(key, named, indexed, { string: string, index: i });

                     i = closingIndex;
                  } else {
                     output += chars[i];
                  }
               }
               return output;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function replacePlaceholder(placeholder, named, indexed, context) {
               var specifier = '';
               var subSpecifierString = '';
               var placeholderParts = placeholder.split(':');
               var key = placeholderParts[0];

               var value = void 0;
               if (INTEGER_MATCHER.test(key) && key < indexed.length) {
                  value = indexed[key];
               } else if (key in named) {
                  value = named[key];
               } else {
                  return OPENING_BRACKET + placeholder + CLOSING_BRACKET;
               }

               if (placeholderParts.length > 1) {

                  if (placeholderParts[1].charAt(0) !== '%') {
                     value = defaultTypeFormatter(typeFormatters)(value);
                  }

                  return placeholderParts.slice(1).reduce(function (value, part) {
                     if (part.indexOf('%') === 0) {
                        var specifierMatch = part.match(/^%(.*)(\w)$/);
                        specifier = specifierMatch ? specifierMatch[2] : '';
                        subSpecifierString = specifierMatch ? specifierMatch[1] : '';
                        if (specifier in typeFormatters) {
                           return typeFormatters[specifier](value, subSpecifierString);
                        }
                        var knownSpecifiers = Object.keys(typeFormatters).filter(function (_) {
                           return _ !== 'default';
                        }).map(function (_) {
                           return '%' + _;
                        }).join(', ');

                        throw new Error('Unknown format specifier "%' + specifier + '" for placeholder' + (' at index ' + context.index + ' of string: "' + context.string + '"') + (' (Known specifiers are: ' + knownSpecifiers + ').'));
                     }
                     if (part in optionalValueMappers) {
                        return optionalValueMappers[part](value);
                     }

                     return value;
                  }, value);
               }

               return defaultTypeFormatter(typeFormatters)(value);
            }

            ////////////////////////////////////////////////////////////////////////////////////////////////////////

            return format;
         }

         ///////////////////////////////////////////////////////////////////////////////////////////////////////////

         function defaultTypeFormatter(typeFormatters) {
            if ('default' in typeFormatters) {
               return typeFormatters['default'];
            }

            return DEFAULT_FORMATTERS['default'];
         }

         /***/
      },
      /* 3 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /* harmony export (immutable) */__webpack_exports__["b"] = findWidgetAreas;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * The area helper manages widget areas, their DOM representation and their nesting structure.
          *
          * It tracks widget area visibility in order to compile widgets and to attach them to their areas when
          * these become visible.
          * It does not interact with the event bus directly, but is consulted by the visibility event manager to
          * determine area nesting for visibility events.
          */

         function create(page) {

            var exports = {
               isVisible: isVisible,
               setVisibility: setVisibility,
               areasInArea: areasInArea,
               areasInWidget: areasInWidget,
               register: register,
               exists: exists,
               attachWidgets: attachWidgets
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // all initially visible widgets should be attached together, to reduce jitter and unnecessary DOM ops
            var freeToAttach = false;

            // keep the dom element for each area, to attach widgets to
            var areaToElement = {};

            // track widget adapters waiting for their area to become available so that they may attach to its DOM
            var areaToWaitingAdapters = {};

            // track the visibility status of all areas
            var knownVisibilityState = {};

            // the containing area name for each widget
            var widgetIdToArea = {};
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(page.areas, function (widgets, areaName) {
               widgets.forEach(function (widget) {
                  widgetIdToArea[widget.id] = areaName;
               });
            });

            // for each widget with children, and each widget area with nested areas, store a list of child names
            var areasInAreaMap = {};
            var areasInWidgetMap = {};
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(page.areas, function (widgetEntries, areaName) {
               var containerName = '';
               if (areaName.indexOf('.') !== -1) {
                  var widgetId = areaName.split('.')[0];
                  areasInWidgetMap[widgetId] = areasInWidgetMap[widgetId] || [];
                  areasInWidgetMap[widgetId].push(areaName);
                  containerName = widgetIdToArea[widgetId];
               }
               areasInAreaMap[containerName] = areasInAreaMap[containerName] || [];
               areasInAreaMap[containerName].push(areaName);
            });

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function isVisible(areaName) {
               return knownVisibilityState[areaName] || false;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function setVisibility(areaName, visible) {
               if (visible && freeToAttach) {
                  attachWaitingAdapters(areaName);
               }
               knownVisibilityState[areaName] = visible;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function areasInArea(containerName) {
               return areasInAreaMap[containerName];
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function areasInWidget(widgetId) {
               return areasInWidgetMap[widgetId];
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Register a widget area
             *
             * @param {String} name
             *    the area name as used in the page definition
             * @param {HTMLElement} element
             *    an HTML element representing the widget area
             *
             * @return {Function}
             *    removes the according area from the registry again
             */
            function register(name, element) {
               if (name in areaToElement) {
                  throw new Error('The area "' + name + '" is defined twice in the current layout.');
               }

               areaToElement[name] = element;
               if (freeToAttach && isVisible(name)) {
                  attachWaitingAdapters(name);
               }

               return function () {
                  delete areaToElement[name];
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function exists(name) {
               return name in areaToElement;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function attachWidgets(widgetAdapters) {
               freeToAttach = true;
               widgetAdapters.forEach(function (adapterRef) {
                  var areaName = widgetIdToArea[adapterRef.id];
                  areaToWaitingAdapters[areaName] = areaToWaitingAdapters[areaName] || [];
                  areaToWaitingAdapters[areaName].push(adapterRef);
               });
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(page.areas, function (widgets, areaName) {
                  if (isVisible(areaName)) {
                     attachWaitingAdapters(areaName);
                  }
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // eslint-disable-next-line valid-jsdoc
            /** @private */
            function attachWaitingAdapters(areaName) {
               var waitingAdapters = areaToWaitingAdapters[areaName];
               if (!waitingAdapters || !waitingAdapters.length) {
                  return;
               }

               var element = areaToElement[areaName];
               if (!element) {
                  return;
               }

               // Make sure that all assets are available before proceeding, so that DOM update happens en bloc.
               Promise.all(waitingAdapters.map(function (adapterRef) {
                  return adapterRef.templatePromise;
               })).then(function (htmlTemplates) {
                  // prepare first/last bootstrap classes for appending widgets
                  waitingAdapters.forEach(function (adapterRef, i) {
                     adapterRef.adapter.domAttachTo(element, htmlTemplates[i]);
                  });
               });

               delete areaToWaitingAdapters[areaName];
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return exports;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function findWidgetAreas(rootElement) {
            var areas = {};
            Array.from(rootElement.querySelectorAll('[ax-widget-area],[data-ax-widget-area]')).forEach(function (elem) {
               var name = elem.getAttribute('ax-widget-area') || elem.getAttribute('data-ax-widget-area');

               areas[name] = elem;
            });
            return areas;
         }

         /***/
      },
      /* 4 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* unused harmony export levels */
         /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "b", function () {
            return BLACKBOX;
         });
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /* unused harmony export createConsoleChannel */
         function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
               for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                  arr2[i] = arr[i];
               }return arr2;
            } else {
               return Array.from(arr);
            }
         }

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the Logger factory.
          *
          * To use the Log service in a widget, request the {@link widget_services#axLog axLog} injection.
          *
          * @module log
          */

         /**
          * Log levels that are available by default, sorted by increasing severity:
          *
          * - TRACE (level 100)
          * - DEBUG (level 200)
          * - INFO (level 300)
          * - WARN (level 400)
          * - ERROR (level 500)
          * - FATAL (level 600)
          *
          * @type {Object}
          * @name levels
          */
         var levels = {
            TRACE: 100,
            DEBUG: 200,
            INFO: 300,
            WARN: 400,
            ERROR: 500,
            FATAL: 600
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Pass this as an additional replacement parameter to a log-method, in order to blackbox your logging call.
          * Blackboxed callers are ignored when logging the source information (file, line).
          *
          * @type {Object}
          * @name BLACKBOX
          */
         var BLACKBOX = {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function create(configuration, optionalBrowser) {
            var startChannels = optionalBrowser ? [createConsoleChannel(optionalBrowser)] : [];
            return new Logger(configuration, startChannels);
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         // eslint-disable-next-line valid-jsdoc
         /**
          * A flexible logger.
          *
          * It is recommended to prefer this logger over `console.log` and friends, at least for any log messages that
          * might make their way into production code. For once, this logger is safe to use across browsers and allows
          * to attach additional channels for routing messages to (i.e. to send them to a server process for
          * persistence). If a browser console is available, messages will be logged to that console using the builtin
          * console channel.
          * For testing, a silent mock for this logger is used, making it simple to test the logging behavior of
          * widgets and activities, while avoiding noisy log messages in the test runner output.
          *
          * All messages produced
          *
          * @constructor
          * @private
          */
         function Logger(configuration) {
            var _this = this;

            var channels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

            this.levels = Object.assign({}, levels, configuration.get('logging.levels'));

            this.queueSize_ = 100;
            this.channels_ = channels;
            this.counter_ = 0;
            this.messageQueue_ = [];
            this.threshold_ = 0;
            this.tags_ = {};

            this.levelToName_ = function (levels) {
               var result = {};
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["forEach"])(levels, function (level, levelName) {
                  _this[levelName.toLowerCase()] = function () {
                     for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                     }

                     _this.log.apply(_this, [level].concat(args, [BLACKBOX]));
                  };
                  result[level] = levelName;
               });
               return result;
            }(this.levels);

            this.setLogThreshold(configuration.ensure('logging.threshold'));
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message. A message may contain placeholders in the form `[#]` where `#` resembles the index
          * within the list of `replacements`. `replacements` are incrementally counted starting at `0`. If the
          * log level is below the configured log threshold, the message is simply discarded.
          *
          * It is recommended not to use this method directly, but instead one of the short cut methods for the
          * according log level.
          *
          * @param {Number} level
          *    the level for this message
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.log = function (level, message) {
            for (var _len2 = arguments.length, replacements = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
               replacements[_key2 - 2] = arguments[_key2];
            }

            if (level < this.threshold_) {
               return;
            }

            var blackboxDepth = 0;
            while (replacements[replacements.length - 1] === BLACKBOX) {
               ++blackboxDepth;
               replacements.pop();
            }

            var messageObject = {
               id: this.counter_++,
               level: this.levelToName_[level],
               text: message,
               replacements: replacements,
               time: new Date(),
               tags: this.gatherTags(),
               sourceInfo: gatherSourceInformation(blackboxDepth + 1) // add 1 depth to exclude this function
            };

            this.channels_.forEach(function (channel) {
               channel(messageObject);
            });

            if (this.messageQueue_.length === this.queueSize_) {
               this.messageQueue_.shift();
            }
            this.messageQueue_.push(messageObject);
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `TRACE`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.trace = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `DEBUG`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.debug = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `INFO`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.info = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `WARN`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.warn = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `ERROR`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.error = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Logs a message in log level `FATAL`. See {@link Logger#log} for further information.
          *
          * *Important note*: This method is only available, if no custom log levels were defined via
          * configuration or custom log levels include this method as well.
          *
          * @param {String} message
          *    the message to log
          * @param {...*} replacements
          *    objects that should replace placeholders within the message
          */
         Logger.prototype.fatal = function () {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Adds a new channel to forward log messages to. A channel is called synchronously for every log message
          * and can do whatever necessary to handle the message according to its task. Note that blocking or
          * performance critical actions within a channel should always take place asynchronously to prevent from
          * blocking the application. Ideally a web worker is used for heavier background tasks.
          *
          * Each message is an object having the following properties:
          * - `id`: the unique, ascending id of the log message
          * - `level`: the log level of the message in string representation
          * - `text`: the actual message that was logged
          * - `replacements`: the raw list of replacements passed along the message
          * - `time`: JavaScript Date instance when the message was logged
          * - `tags`: A map of all log tags currently set for the logger
          * - `sourceInfo`: if supported, a map containing `file`, `line` and `char` where the logging took place
          *
          * @param {Function} channel
          *    the log channel to add
          */
         Logger.prototype.addLogChannel = function (channel) {
            this.channels_.push(channel);
            this.messageQueue_.forEach(function (entry) {
               channel(entry);
            });
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Removes a log channel and thus stops sending further messages to it.
          *
          * @param {Function} channel
          *    the log channel to remove
          */
         Logger.prototype.removeLogChannel = function (channel) {
            var channelIndex = this.channels_.indexOf(channel);
            if (channelIndex > -1) {
               this.channels_.splice(channelIndex, 1);
            }
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Adds a value for a log tag. If a tag is already known, the value is appended to the existing one using a
          * `;` as separator. Note that no formatting of the value takes place and a non-string value will just have
          * its appropriate `toString` method called.
          *
          * Log tags can be used to mark a set of log messages with a value giving further information on the
          * current logging context. For example laxar sets a tag `'INST'` with a unique-like identifier for the
          * current browser client. If then for example log messages are persisted on a server, messages belonging
          * to the same client can be accumulated.
          *
          * @param {String} tag
          *    the id of the tag to add a value for
          * @param {String} value
          *    the value to add
          */
         Logger.prototype.addTag = function (tag, value) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

            if (!this.tags_[tag]) {
               this.tags_[tag] = [value];
            } else {
               this.tags_[tag].push(value);
            }
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Sets a value for a log tag. If a tag is already known, the value is overwritten by the given one. Note
          * that no formatting of the value takes place and a non-string value will just have its appropriate
          * `toString` method called. For further information on log tags, see {@link Logger#addTag}.
          *
          * @param {String} tag
          *    the id of the tag to set a value for
          * @param {String} value
          *    the value to set
          */
         Logger.prototype.setTag = function (tag, value) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

            this.tags_[tag] = [value];
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Removes a log tag. For further information on log tags, see {@link Logger#addTag}.
          *
          * @param {String} tag
          *    the id of the tag to set a value for
          */
         Logger.prototype.removeTag = function (tag) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

            delete this.tags_[tag];
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Returns a map of all tags. If there are multiple values for the same tag, their values are concatenated
          * using a `;` as separator. For further information on log tags, see {@link Logger#addTag}.
          *
          * @return {Object}
          *    a mapping from tag to its value(s)
          */
         Logger.prototype.gatherTags = function () {
            var tags = {};
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["forEach"])(this.tags_, function (values, tag) {
               tags[tag] = values.join(';');
            });
            return tags;
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Sets the threshold for log messages. Log messages with a lower level will be discarded upon logging.
          *
          * @param {String|Number} threshold
          *    the numeric or the string value of the log level to use as threshold
          */
         Logger.prototype.setLogThreshold = function (threshold) {
            if (typeof threshold === 'string') {
               __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(threshold.toUpperCase() in this.levels, 'Unsupported log threshold "' + threshold + '".');
               this.threshold_ = this.levels[threshold.toUpperCase()];
            } else {
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(threshold).hasType(Number);
               this.threshold_ = threshold;
            }
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var EMPTY_CALL_INFORMATION = { file: '?', line: -1, char: -1 };

         function gatherSourceInformation(blackboxDepth) {
            var e = new Error();

            if (!e.stack) {
               try {
                  // IE >= 10 only generates a stack if the error object is really thrown
                  throw new Error();
               } catch (err) {
                  e = err;
               }
               if (!e.stack) {
                  return EMPTY_CALL_INFORMATION;
               }
            }

            var rows = e.stack.split(/[\n]/);
            var interpret = void 0;
            if (rows[0] === 'Error') {
               rows.shift();
               interpret = chromeStackInterpreter;
            } else if (rows[0].indexOf('@') !== -1) {
               interpret = firefoxStackInterpreter;
            } else {
               return EMPTY_CALL_INFORMATION;
            }

            var row = rows[blackboxDepth + 1]; // add 1 depth to exclude this function
            return row ? interpret(row) : EMPTY_CALL_INFORMATION;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var CHROME_AND_IE_STACK_MATCHER = /\(?([^( ]+):(\d+):(\d+)\)?$/;

         function chromeStackInterpreter(row) {
            var match = CHROME_AND_IE_STACK_MATCHER.exec(row);
            return {
               file: match ? match[1] : '?',
               line: match ? match[2] : -1,
               char: match ? match[3] : -1
            };
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var FIREFOX_STACK_MATCHER = /@(.+):(\d+)$/;

         function firefoxStackInterpreter(row) {
            var match = FIREFOX_STACK_MATCHER.exec(row);
            return {
               file: match ? match[1] : '?',
               line: match ? match[2] : -1,
               char: -1
            };
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function createConsoleChannel(browser) {

            return function log(messageObject) {
               var browserConsole = browser.console();
               if (!browserConsole) {
                  return;
               }

               var level = messageObject.level,
                   text = messageObject.text,
                   replacements = messageObject.replacements,
                   _messageObject$source = messageObject.sourceInfo,
                   file = _messageObject$source.file,
                   line = _messageObject$source.line;

               var logMethod = level.toLowerCase();
               if (!(logMethod in browserConsole) || logMethod === 'trace') {
                  // In console objects trace doesn't define a valid log level but is used to print stack traces. We
                  // thus need to change it something different.
                  logMethod = 'log';
               }

               if (!(logMethod in browserConsole)) {
                  return;
               }

               var callArgs = [level + ': '].concat(mergeTextAndReplacements(text, replacements)).concat(['(@ ' + file + ':' + line + ')']);

               browserConsole[logMethod].apply(browserConsole, _toConsumableArray(callArgs));
            };
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function mergeTextAndReplacements(text, replacements) {
            var parts = [];
            var pos = 0;
            var buffer = '';

            while (pos < text.length) {
               var character = text.charAt(pos);

               switch (character) {
                  case '\\':
                     {
                        ++pos;
                        if (pos === text.length) {
                           throw new Error('Unterminated string: "' + text + '"');
                        }

                        buffer += text.charAt(pos);
                        break;
                     }
                  case '[':
                     {
                        parts.push(buffer);
                        buffer = '';

                        var end = text.indexOf(']', pos);
                        if (end === -1) {
                           throw new Error('Unterminated replacement at character ' + pos + ': "' + text + '"');
                        }

                        var replacementIndex = parseInt(text.substring(pos + 1, end), 10);

                        parts.push(replacements[replacementIndex]);
                        pos = end;

                        break;
                     }
                  default:
                     {
                        buffer += character;
                        break;
                     }
               }

               ++pos;
            }

            if (buffer.length > 0) {
               parts.push(buffer);
            }

            return parts;
         }

         /***/
      },
      /* 5 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(1);
         /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "c", function () {
            return FLAT;
         });
         /* unused harmony export COMPACT */
         /* harmony export (immutable) */__webpack_exports__["b"] = createProvider;
         /* harmony export (immutable) */__webpack_exports__["a"] = createCollector;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /** Use to access the flattened page model, where compositions have been expanded. */
         var FLAT = 'FLAT';
         /** Use to access the compact page/composition model, where compositions have not been expanded. */
         var COMPACT = 'COMPACT';

         function createProvider(collector) {

            return {

               /** Start collecting page/composition data. */
               enable: function enable() {
                  collector.enable();
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /** Stop collecting page/composition data and clean up. */
               disable: function disable() {
                  collector.disable();
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Access the current page information.
                * Everything is returned as a copy, sothis object cannot be used to modify the host application.
                *
                * @return {Object}
                *   the current page information, with the following properties:
                *    - `pageDefinitions` {Object}
                *       both the original as well as the expanded/flattened page model for each available page
                *    - `compositionDefinitions` {Object}
                *       both the original as well as the expanded/flattened composition model for each composition of
                *       any available page
                *    - `widgetDescriptors` {Object}
                *       the widget descriptor for each widget that was referenced
                *    - `pageReference` {String}
                *       the reference for the current page, to lookup page/composition definitions
                */
               current: function current() {
                  return collector.current();
               },

               /**
                * Add a listener function to be notified whenever the page information changes.
                * As a side-effect, this also automatically enables collecting page/composition data.
                * Each listener will be delivered its own copy of the page information.
                *
                * @param {Function} _
                *    The listener to add. Will be called with the current page information whenever that changes.
                */
               addListener: function addListener(_) {
                  collector.addListener(_);
               },

               /**
                * Remove a page information listener function.
                *
                * @param {Function} _
                *    The listener to remove
                */
               removeListener: function removeListener(_) {
                  collector.removeListener(_);
               }
            };
         }

         function createCollector(configuration, log) {

            var enabled = configuration.get('tooling.enabled');

            var listeners = [];

            var currentPageInfo = {
               pageReference: null,
               pageDefinitions: {},
               compositionDefinitions: {},
               widgetDescriptors: {}
            };

            return {

               // eslint-disable-next-line valid-jsdoc
               /** Collect a widget descriptor. */
               collectWidgetDescriptor: function collectWidgetDescriptor(ref, descriptor) {
                  if (!enabled) {
                     return;
                  }
                  currentPageInfo.widgetDescriptors[ref] = descriptor;
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               // eslint-disable-next-line valid-jsdoc
               /**
                * Collect a page definition.
                * The page is deep-copied right away, and may safely be modified by the caller.
                */
               collectPageDefinition: function collectPageDefinition(ref, page, type) {
                  if (!enabled) {
                     return;
                  }
                  var definitions = currentPageInfo.pageDefinitions;
                  definitions[ref] = definitions[ref] || {
                     FLAT: null,
                     COMPACT: null
                  };
                  definitions[ref][type] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(page);
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               // eslint-disable-next-line valid-jsdoc
               /**
                * Collect a composition definition.
                * The composition is deep-copied right away, and may safely be modified by the caller.
                */
               collectCompositionDefinition: function collectCompositionDefinition(pageRef, compositionInstanceId, composition, type) {
                  if (!enabled) {
                     return;
                  }
                  var definitions = currentPageInfo.compositionDefinitions;
                  var definitionsByInstance = definitions[pageRef] = definitions[pageRef] || {};
                  definitionsByInstance[compositionInstanceId] = definitionsByInstance[compositionInstanceId] || {
                     FLAT: null,
                     COMPACT: null
                  };
                  definitionsByInstance[compositionInstanceId][type] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(composition);
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               // eslint-disable-next-line valid-jsdoc
               /**
                * Collect information about the current page, and inform all listeners.
                * Each listener will receive its own copy of the page information.
                */
               collectCurrentPage: function collectCurrentPage(ref) {
                  if (!enabled) {
                     return;
                  }
                  currentPageInfo.pageReference = ref;
                  listeners.forEach(function (listener) {
                     listener(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(currentPageInfo));
                  });
                  cleanup();
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               enable: function enable() {
                  enabled = true;
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               disable: function disable() {
                  enabled = false;
                  currentPageInfo.pageReference = null;
                  currentPageInfo.widgetDescriptors = {};
                  cleanup();
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               addListener: function addListener(listener) {
                  enabled = true;
                  listeners.push(listener);
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               removeListener: function removeListener(listener) {
                  listeners = listeners.filter(function (_) {
                     return _ !== listener;
                  });
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               current: function current() {
                  if (!enabled) {
                     log.warn('laxar page tooling: trying to access data, but collecting it was never enabled');
                  }
                  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(currentPageInfo);
               }
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function cleanup() {
               var currentRef = currentPageInfo.pageReference;
               ['pageDefinitions', 'compositionDefinitions'].forEach(function (collection) {
                  Object.keys(currentPageInfo[collection]).filter(function (ref) {
                     return ref !== currentRef;
                  }).forEach(function (ref) {
                     delete currentPageInfo[collection][ref];
                  });
               });
            }
         }

         /***/
      },
      /* 6 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";

         Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
         /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "technology", function () {
            return technology;
         });
         /* harmony export (immutable) */__webpack_exports__["bootstrap"] = bootstrap;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
               for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                  arr2[i] = arr[i];
               }return arr2;
            } else {
               return Array.from(arr);
            }
         }

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module for the plain widget adapter factory.
          * In LaxarJS _plain_ widgets are defined as widgets without dependency to a specific view library or
          * framwork, and instead would be implemented using simple DOM access and manipulation.
          *
          * A developer will never call any of the API of this module.
          * The documentation solely exists as a blueprint for custom widget adapters and to explain certain concepts.
          *
          * @module plain_adapter
          */

         var technology = 'plain';

         var noOp = function noOp() {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Initializes the adapter module and returns a factory for plain widgets.
          * Note that the plain adapter doesn't need all the provided arguments, but they are listed here for
          * documentation purposes.
          *
          * @param {Object} artifacts
          *    the artifacts available to this adapter factory
          * @param {Object} artifacts.widgets
          *    all widgets, that are implemented in the adapter's technology
          * @param {Object} artifacts.controls
          *    all controls, that are implemented in the adapter's technology
          * @param {Object} services
          *    a selection of services adapter implementations may need to fulfill their task
          * @param {AdapterUtilities} services.adapterUtilities
          *    common utilities, that may be useful to a widget adapter
          * @param {ArtifactProvider} services.artifactProvider
          *    the artifact provider instance
          * @param {Configuration} services.configuration
          *    access to the application configuration
          * @param {EventBus} services.globalEventBus
          *    the global event bus.
          *    Note that an adapter should not sent any events by itself.
          *    It may instead be necessary that the adapter makes the event bus globally available to its widgets (for
          *    example like the AngularJS 1.x adapter), or that it registers an inspector
          * @param {Heartbeat} services.heartbeat
          *    the heartbeat instance.
          *    Depending on the underlying view technology (like AngularJS 1.x) it may be important to get notified
          *    when to re-render the user interface.
          *    For that reason an adapter can register a callback at the heartbeat, that gets called after all events
          *    of the current cycle were processed
          * @param {Log} services.log
          *    the global log instance
          * @param {StorageFactory} services.storage
          *    the global storage factory api
          * @param {Tooling} services.tooling
          *    access to the tooling api
          * @param {HTMLElement} anchorElement
          *    the DOM node the laxar application is bootstrapped on.
          *    An adapter should never try to access DOM nodes that are not the `anchorElement` or any of its children,
          *    since they are not under control of this LaxarJS application.
          *
          * @return {PlainAdapterFactory}
          *    the factory for plain widget adapters
          */
         function bootstrap(artifacts, _ref) {
            var artifactProvider = _ref.artifactProvider,
                adapterUtilities = _ref.adapterUtilities;

            /**
             * A factory for plain widget adapters.
             *
             * @constructor
             * @name PlainAdapterFactory
             */
            return {
               create: create
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Creates a new adapter instance for the given widget environment.
             *
             * @param {Object} environment
             *    the environment for the widget to create and manage
             * @param {HTMLElement} environment.anchorElement
             *    the DOM node that the widget's DOM fragment should be inserted into
             * @param {String} environment.name
             *    the name of the widget to load, exactly as specified by the widget descriptor
             * @param {widget_services} environment.services
             *    the services for this widget instance
             * @param {Function} environment.provideServices
             *    a function that the adapter must call with a map of all to-be-injected services, just before
             *    creating the controller
             *
             * @return {Object}
             *    the adapter instance
             *
             * @memberof PlainAdapterFactory
             */
            function create(_ref2) {
               var widgetName = _ref2.widgetName,
                   anchorElement = _ref2.anchorElement,
                   services = _ref2.services,
                   provideServices = _ref2.provideServices;

               var onDomAvailable = null;
               var domAttached = false;

               var provider = artifactProvider.forWidget(widgetName);

               return Promise.all([provider.descriptor(), provider.module()]).then(createController, function () {
                  return adapterUtilities.unknownWidget({ technology: technology, widgetName: widgetName });
               }).then(function () {
                  return {
                     domAttachTo: domAttachTo,
                     domDetach: domDetach
                  };
               });

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function createController(_ref3) {
                  var _ref4 = _slicedToArray(_ref3, 2),
                      descriptor = _ref4[0],
                      module = _ref4[1];

                  services.axWithDom = function (callback) {
                     if (domAttached) {
                        callback(anchorElement);
                     }
                  };
                  var injections = (module.injections || []).map(function (injection) {
                     if (!(injection in services)) {
                        throw adapterUtilities.unknownInjection({ technology: technology, injection: injection, widgetName: widgetName });
                     }
                     if (injection === 'axWithDom' && descriptor.integration.type === 'activity') {
                        throw adapterUtilities.activityAccessingDom({ technology: technology, injection: injection, widgetName: widgetName });
                     }
                     return services[injection];
                  });

                  provideServices(services);

                  var _ref5 = module.create.apply(module, _toConsumableArray(injections)) || {};

                  var _ref5$onDomAvailable = _ref5.onDomAvailable;
                  onDomAvailable = _ref5$onDomAvailable === undefined ? noOp : _ref5$onDomAvailable;
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function domAttachTo(areaElement, htmlTemplate) {
                  if (htmlTemplate === null) {
                     return;
                  }
                  anchorElement.innerHTML = htmlTemplate;
                  areaElement.appendChild(anchorElement);
                  domAttached = true;
                  onDomAvailable(anchorElement);
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function domDetach() {
                  var parent = anchorElement.parentNode;
                  if (parent) {
                     parent.removeChild(anchorElement);
                  }
                  domAttached = false;
               }
            }
         }

         /***/
      },
      /* 7 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0_page__ = __webpack_require__(33);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_page___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_page__);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__configuration__ = __webpack_require__(17);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__browser__ = __webpack_require__(16);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__log__ = __webpack_require__(4);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__runtime_event_bus__ = __webpack_require__(18);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__adapter_utilities__ = __webpack_require__(14);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__artifact_provider__ = __webpack_require__(15);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_8__loaders_control_loader__ = __webpack_require__(8);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_9__loaders_css_loader__ = __webpack_require__(9);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_10__loaders_layout_loader__ = __webpack_require__(10);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_11__loaders_page_loader__ = __webpack_require__(11);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_12__loaders_theme_loader__ = __webpack_require__(12);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_13__loaders_widget_loader__ = __webpack_require__(13);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_14__storage__ = __webpack_require__(26);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_15__timer__ = __webpack_require__(27);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_16__flow_controller__ = __webpack_require__(19);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_17__flow_service__ = __webpack_require__(20);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_18__heartbeat__ = __webpack_require__(21);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_19__page_service__ = __webpack_require__(24);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_20__pagejs_router__ = __webpack_require__(25);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_21__locale_event_manager__ = __webpack_require__(23);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_22__visibility_event_manager__ = __webpack_require__(28);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_23__widget_services__ = __webpack_require__(29);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_24__tooling_tooling__ = __webpack_require__(32);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(configurationSource, assets) {

            var configurationDefaults = {
               baseHref: undefined,
               eventBusTimeoutMs: 120 * 1000,
               router: {
                  query: {
                     enabled: false
                  }
                  // 'pagejs' is not configured here:
                  // any deviation from the page.js library defaults must be set by the application
               },
               flow: {
                  entryPoint: {
                     target: 'default',
                     parameters: {}
                  }
               },
               i18n: {
                  fallback: 'en',
                  strict: false,
                  locales: {
                     'default': 'en'
                  }
               },
               logging: {
                  levels: {},
                  threshold: 'INFO'
               },
               name: 'unnamed',
               theme: 'default',
               storagePrefix: undefined,
               tooling: {
                  enabled: false
               }
            };

            var adapterUtilities = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__adapter_utilities__["a" /* create */])();

            var configuration = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__configuration__["a" /* create */])(configurationSource, configurationDefaults);

            var browser = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__browser__["a" /* create */])();
            var log = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__log__["a" /* create */])(configuration, browser);
            var collectors = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_24__tooling_tooling__["a" /* createCollectors */])(configuration, log);

            var storage = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__storage__["a" /* create */])(configuration, browser);
            var timer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_15__timer__["a" /* create */])(log, storage);

            var artifactProvider = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__artifact_provider__["a" /* create */])(assets, browser, configuration, log);

            var heartbeat = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18__heartbeat__["a" /* create */])();

            // MSIE Bug we have to wrap setTimeout to pass assertion
            var timeoutFn = function timeoutFn(f, t) {
               return setTimeout(f, t);
            };
            var globalEventBus = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__runtime_event_bus__["a" /* create */])(configuration, log, heartbeat.onNext, timeoutFn);

            var cssLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__loaders_css_loader__["a" /* create */])();
            var themeLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__loaders_theme_loader__["a" /* create */])(artifactProvider, cssLoader);
            var layoutLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__loaders_layout_loader__["a" /* create */])(artifactProvider, cssLoader);
            var pageLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__loaders_page_loader__["a" /* create */])(artifactProvider, collectors.pages);
            var controlLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__loaders_control_loader__["a" /* create */])(artifactProvider, cssLoader);
            var widgetServices = {
               forWidget: function forWidget() {
                  __WEBPACK_IMPORTED_MODULE_1__utilities_assert__["a" /* default */].codeIsUnreachable('Using widget services before they are available');
               }
            };
            var widgetLoader = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__loaders_widget_loader__["a" /* create */])(log, artifactProvider, controlLoader, cssLoader, collectors.pages, function () {
               var _widgetServices;

               return (_widgetServices = widgetServices).forWidget.apply(_widgetServices, arguments);
            });

            var localeManager = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_21__locale_event_manager__["a" /* create */])(globalEventBus, configuration);
            var visibilityManager = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_22__visibility_event_manager__["a" /* create */])(globalEventBus);
            var pageService = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_19__page_service__["a" /* create */])(globalEventBus, pageLoader, layoutLoader, widgetLoader, localeManager, visibilityManager, collectors.pages);

            var router = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_20__pagejs_router__["a" /* create */])(__WEBPACK_IMPORTED_MODULE_0_page___default.a, browser, configuration);

            var flowController = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16__flow_controller__["a" /* create */])(artifactProvider, configuration, globalEventBus, log, pageService, router, timer);
            var flowService = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_17__flow_service__["a" /* create */])(flowController);

            var toolingProviders = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_24__tooling_tooling__["b" /* createProviders */])(collectors);

            widgetServices = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_23__widget_services__["a" /* create */])(artifactProvider, configuration, controlLoader, globalEventBus, flowService, log, heartbeat, pageService, storage, toolingProviders);

            return {
               adapterUtilities: adapterUtilities,
               artifactProvider: artifactProvider,
               configuration: configuration,
               cssLoader: cssLoader,
               flowController: flowController,
               flowService: flowService,
               globalEventBus: globalEventBus,
               heartbeat: heartbeat,
               layoutLoader: layoutLoader,
               log: log,
               pageService: pageService,
               storage: storage,
               themeLoader: themeLoader,
               timer: timer,
               toolingProviders: toolingProviders,
               widgetLoader: widgetLoader
            };
         }

         /***/
      },
      /* 8 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_string__ = __webpack_require__(2);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * The control loader helps to load control assets and implementations.
          *
          * @module control_loader
          */

         function create(artifactProvider, cssLoader) {

            var notDeclaredMessage = 'Tried to load control reference [0] without declaration in widget.json.\nDetails: [1]';
            var errorInfoLink = 'https://github.com/LaxarJS/laxar/blob/master/docs/manuals/providing_controls.md#compatibility';

            var aliases = {};
            var modules = {};

            /**
             * @constructor
             * @name ControlLoader
             */
            return {
               load: load,
               provide: provide
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Provides the implementation module of the given control, for manual instantiation by a widget.
             *
             * Because the method must return synchronously, it may only be called for controls that have been
             * loaded before (using {@link #load()})!
             * For controls that are correctly listed in the `controls` section of the `widget.json`, this is ensured
             * by the widget loader.
             *
             * @param {String} controlRef
             *   a valid control reference as used in the `widget.json`
             *
             * @return {*}
             *   the module for the requested control reference
             *
             * @memberof ControlLoader
             */
            function provide(controlRef) {
               var module = modules[aliases[controlRef]];
               if (!module) {
                  var message = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_string__["format"])('axControls: ' + notDeclaredMessage, [controlRef, errorInfoLink]);
                  throw new Error(message);
               }
               return module;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Fetches the descriptor for a given control reference, and saves it as a side-effect.
             * This is part of the internal API used by the widget loader.
             *
             * This process must be completed before the descriptor or the module for a control can be provided.
             * For this reason, `load` is called by the widget-loader, using information from the `widget.json` file.
             *
             * @param {String} controlRef
             *   a valid control reference as used in the `widget.json`
             *
             * @return {Promise}
             *   a promise for the (fetched or synthesized) control descriptor
             *
             * @memberof ControlLoader
             */
            function load(controlRef) {
               var _artifactProvider$for = artifactProvider.forControl(controlRef),
                   assetUrlForTheme = _artifactProvider$for.assetUrlForTheme,
                   descriptor = _artifactProvider$for.descriptor,
                   module = _artifactProvider$for.module;

               return Promise.all([descriptor(), module()]).then(function (_ref) {
                  var _ref2 = _slicedToArray(_ref, 2),
                      descriptor = _ref2[0],
                      module = _ref2[1];

                  var name = descriptor.name;

                  aliases[controlRef] = name;
                  modules[name] = module;
                  return assetUrlForTheme(descriptor.styleSource || 'css/' + name + '.css').then(function (url) {
                     if (url) {
                        cssLoader.load(url);
                     }
                  }).then(function () {
                     return descriptor;
                  });
               });
            }
         }

         /***/
      },
      /* 9 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create() {
            var mergedCssFileLoaded = Array.from(document.getElementsByTagName('link')).some(function (link) {
               return link.hasAttribute('data-ax-merged-css');
            });

            if (mergedCssFileLoaded) {
               return {
                  load: function load() {}
               };
            }

            var loadedFiles = [];
            return {
               /**
                * If not already loaded, loads the given file into the current page by appending a `link` element to
                * the document's `head` element.
                *
                * @param {String} url
                *    the url of the css file to load. If `null`, loading is skipped
                */
               load: function load(url) {
                  if (!loadedFiles.includes(url)) {
                     var element = document.createElement('link');
                     element.type = 'text/css';
                     element.id = 'cssLoaderStyleSheet' + loadedFiles.length;
                     element.rel = 'stylesheet';
                     element.href = url;
                     document.getElementsByTagName('head')[0].appendChild(element);

                     loadedFiles.push(url);
                  }
               }
            };
         }

         /***/
      },
      /* 10 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(artifactProvider, cssLoader) {
            return {
               load: function load(layoutRef) {
                  var _artifactProvider$for = artifactProvider.forLayout(layoutRef),
                      descriptor = _artifactProvider$for.descriptor,
                      assetForTheme = _artifactProvider$for.assetForTheme,
                      assetUrlForTheme = _artifactProvider$for.assetUrlForTheme;

                  return descriptor().then(function (_ref) {
                     var name = _ref.name,
                         templateSource = _ref.templateSource,
                         styleSource = _ref.styleSource;
                     return Promise.all([assetForTheme(templateSource || name + ".html"), assetUrlForTheme(styleSource || "css/" + name + ".css"), Promise.resolve(name)]);
                  }).then(function (_ref2) {
                     var _ref3 = _slicedToArray(_ref2, 3),
                         html = _ref3[0],
                         cssUrl = _ref3[1],
                         name = _ref3[2];

                     if (cssUrl) {
                        cssLoader.load(cssUrl);
                     }
                     return { name: name, className: name + "-layout", html: html };
                  });
               }
            };
         }

         /***/
      },
      /* 11 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__tooling_pages__ = __webpack_require__(5);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates and returns a new page loader instance.
          *
          * @param {ArtifactProvider} artifactProvider
          *    an ArtifactProvider to load application assets
          * @param {PagesCollector} pagesCollector
          *    a tooling collector to consume page and composition information
          *
          * @return {PageLoader}
          *    a page loader instance
          *
          * @private
          */
         function create(artifactProvider, pagesCollector) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(artifactProvider).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(pagesCollector).isNotNull();

            return { load: load };

            /**
             * Loads a pre-assembled page definition. References to compositions, widgets and layouts have been
             * resolved at build-time. Schema-validation for the page itself and for the contained feature
             * configurations has also already been performed.
             *
             * @param {String} pageRef
             *    the page to load. Usually a path relative to the page base path, with the `.json` suffix omitted
             *
             * @return {Promise}
             *    the result promise
             *
             * @private
             */
            function load(pageRef) {
               var _artifactProvider$for = artifactProvider.forPage(pageRef),
                   definition = _artifactProvider$for.definition;

               return definition().then(function (pageDefinition) {
                  pagesCollector.collectPageDefinition(pageRef, pageDefinition, __WEBPACK_IMPORTED_MODULE_1__tooling_pages__["c" /* FLAT */]);
                  return pageDefinition;
               });
            }
         }

         /***/
      },
      /* 12 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(artifactProvider, cssLoader) {
            return {
               load: function load() {
                  var themeProvider = artifactProvider.forTheme();
                  themeProvider.descriptor(function (descriptor) {
                     return themeProvider.assetUrl(descriptor.styleSource || 'css/theme.css').then(cssLoader.load);
                  });
               }
            };
         }

         /***/
      },
      /* 13 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_string__ = __webpack_require__(2);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         var TYPE_WIDGET = 'widget';
         var TYPE_ACTIVITY = 'activity';

         var ID_SEPARATOR = '-';

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         var noOp = function noOp() {};

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Create a generic widget loader that can load widgets and activities implemented in various technologies
          * by using appropriate adapters.
          *
          * @param {Log} log
          *    log instance to use for technology compatibility warnings
          * @param {ArtifactProvider} artifactProvider
          *    an artifact provider for looking up widget descriptors and assets
          * @param {ControlLoader} controlLoader
          *    helps loading controls and their assets
          * @param {CssLoader} cssLoader
          *    helps loading widget- and control-stylesheets during development
          * @param {PagesCollector} pagesCollector
          *    used for inspection tools
          * @param {Function} servicesForWidget
          *    a factory method to create widget-specific services
          *
          * @return {WidgetLoader}
          *    a new widget loader
          */
         function create(log, artifactProvider, controlLoader, cssLoader, pagesCollector, servicesForWidget) {

            var widgetAdapters = {};

            /**
             * @name WidgetLoader
             * @constructor
             */
            return {
               load: load,

               /**
                * Register support for integration technologies.
                *
                * @param {Object} adapters
                *    a map of widget adapters by technology to be registered with this loader
                *
                * @memberof WidgetLoader
                */
               registerWidgetAdapters: function registerWidgetAdapters(adapters) {
                  Object.assign(widgetAdapters, adapters);
               }
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Load a widget using an appropriate adapter
             *
             * First, get the given widget's descriptor to validate and instantiate the widget features.
             * Then, instantiate a widget adapter matching the widget's technology. Using the adapter, create the
             * widget controller. The adapter is returned and can be used to attach the widget to the DOM, or to
             * destroy it.
             *
             * @param {Object} widgetConfiguration
             *    a widget instance configuration (as used in page definitions) to instantiate the widget from
             * @param {Object} [optionalOptions]
             *    map of additonal options
             * @param {Function} [optionalOptions.whenServicesAvailable]
             *    a callback that will be invoked just before the controller is set up. It receives an object of named,
             *    widget-specific injections as arguments allowing clients and tools such as laxar-mocks to tap into
             *   the provided services
             *
             * @return {Promise} a promise for a widget adapter, with an already instantiated controller
             *
             * @memberof WidgetLoader
             */
            function load(widgetConfiguration) {
               var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                   _ref$whenServicesAvai = _ref.whenServicesAvailable,
                   whenServicesAvailable = _ref$whenServicesAvai === undefined ? noOp : _ref$whenServicesAvai;

               var widgetArtifactProvider = artifactProvider.forWidget(widgetConfiguration.widget);

               return widgetArtifactProvider.descriptor().then(function (descriptor) {
                  // The control-descriptors must be loaded prior to controller creation.
                  // This allows the widget controller to synchronously instantiate controls.
                  return Promise.all((descriptor.controls || []).map(controlLoader.load)).then(function (controlDescriptors) {
                     controlDescriptors.forEach(checkTechnologyCompatibility(descriptor));
                     return descriptor;
                  });
               }).then(function (descriptor) {

                  pagesCollector.collectWidgetDescriptor(widgetConfiguration.widget, descriptor);

                  var _descriptor$integrati = descriptor.integration,
                      type = _descriptor$integrati.type,
                      technology = _descriptor$integrati.technology;

                  var widgetName = descriptor.name;
                  if (type !== TYPE_WIDGET && type !== TYPE_ACTIVITY) {
                     throwError(widgetConfiguration, 'Unknown integration type "' + type + '"');
                  }

                  var features = widgetConfiguration.features || {};
                  var anchorElement = document.createElement('DIV');
                  anchorElement.className = widgetName;
                  anchorElement.id = 'ax' + ID_SEPARATOR + widgetConfiguration.id;

                  var adapterFactory = widgetAdapters[technology];
                  var _adapterFactory$servi = adapterFactory.serviceDecorators,
                      serviceDecorators = _adapterFactory$servi === undefined ? function () {
                     return {};
                  } : _adapterFactory$servi;

                  var _servicesForWidget = servicesForWidget(descriptor, widgetConfiguration, features, serviceDecorators(descriptor, widgetConfiguration)),
                      services = _servicesForWidget.services,
                      releaseServices = _servicesForWidget.releaseServices;

                  var environment = {
                     anchorElement: anchorElement,
                     services: services,
                     widgetName: widgetName,
                     provideServices: whenServicesAvailable
                  };

                  return Promise.resolve(adapterFactory.create(environment)).then(function (adapter) {
                     return Object.assign({ destroy: noOp }, adapter);
                  }).then(function (adapter) {
                     return {
                        id: widgetConfiguration.id,
                        adapter: adapter,
                        destroy: function destroy() {
                           releaseServices();
                           adapter.destroy();
                        },

                        templatePromise: loadAssets(descriptor, widgetArtifactProvider)
                     };
                  });
               }, function (err) {
                  var message = 'Could not load widget "' + widgetConfiguration.widget + '": ' + err.message;
                  log.error(message);
                  throw err;
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Locates and loads the widget HTML template for this widget (if any) as well as any CSS stylesheets
             * used by this widget or its controls.
             *
             * @param {Object} widgetDescriptor
             *    a descriptor identifying the widget to load assets for
             * @param {ArtifactProvider} artifactProviderForWidget
             *    the provider with which to lookup or fetch artifact HTML and CSS
             *
             * @return {Promise}
             *    A promise that will be resolved with the contents of any HTML template for this widget, or with
             *    `null` if there is no template (for example, if this is an activity).
             *
             * @private
             */
            function loadAssets(widgetDescriptor, _ref2) {
               var assetForTheme = _ref2.assetForTheme,
                   assetUrlForTheme = _ref2.assetUrlForTheme;
               var type = widgetDescriptor.integration.type,
                   name = widgetDescriptor.name;

               if (type === TYPE_ACTIVITY) {
                  return Promise.resolve(null);
               }

               return Promise.all([assetForTheme(widgetDescriptor.templateSource || name + '.html'), assetUrlForTheme(widgetDescriptor.styleSource || 'css/' + name + '.css')]).then(function (_ref3) {
                  var _ref4 = _slicedToArray(_ref3, 2),
                      html = _ref4[0],
                      cssUrl = _ref4[1];

                  if (cssUrl) {
                     cssLoader.load(cssUrl);
                  }
                  return html;
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function checkTechnologyCompatibility(widgetDescriptor) {
               var name = widgetDescriptor.name,
                   technology = widgetDescriptor.integration.technology;

               return function (controlDescriptor) {
                  var controlTechnology = (controlDescriptor.integration || {}).technology;
                  if (controlTechnology === 'plain') {
                     // plain is always compatible
                     return;
                  }

                  if (technology !== controlTechnology) {
                     log.warn('Incompatible integration technologies: widget [0] ([1]) cannot use control [2] ([3])', name, technology, controlDescriptor.name, controlTechnology);
                  }
               };
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function throwError(widgetConfiguration, message) {
            throw new Error(__WEBPACK_IMPORTED_MODULE_0__utilities_string__["format"]('Error loading widget "[widget]" (id: "[id]"): [0]', [message], widgetConfiguration));
         }

         /***/
      },
      /* 14 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Several factory methods for creating error objects that are useful for almost any adapter.
          *
          * @module adapter_utilities
          */

         /**
          * Creates an instance of the adapter utilities.
          *
          * @return {AdapterUtilities}
          *   a collection of methods to create error messages commonly generated by widget adapters
          *
          * @private
          */
         function create() {

            /**
             * Provides access to the configuration that was passed during application bootstrapping.
             *
             * A *Configuration* instance provides convenient readonly access to the underlying LaxarJS
             * application bootstrapping configuration. The configuration values are passed to
             * {@link laxar#bootstrap()} on startup (before LaxarJS v2.x, these configuration values were read from
             * `window.laxar`). When using the LaxarJS application template, the configuration values are set in the
             * file `application/application.js` under your project's root directory.
             *
             * @name AdapterUtilities
             * @constructor
             */
            return {

               /**
                * Creates (but does not throw) an error indicating that an activity tried accessing the DOM.
                *
                * @param {String} details.technology
                *    the complaining adapter's technology
                * @param {String} details.widgetName
                *    the canonical name of the activity causing the problem
                *
                * @return {Error}
                *    the error, ready to throw
                */
               activityAccessingDom: function activityAccessingDom(_ref) {
                  var technology = _ref.technology,
                      widgetName = _ref.widgetName;

                  return new Error(technology + " adapter: Trying to access DOM in activity " + widgetName);
               },

               /**
                * Creates (but does not throw) an error indicating that a widget requested an injection that cannot be
                * provided by the adapter.
                *
                * @param {String} details.technology
                *    the complaining adapter's technology
                * @param {String} details.injection
                *    the failing injection
                * @param {String} details.widgetName
                *    the canonical name of the widget causing the problem
                *
                * @return {Error}
                *    the error, ready to throw
                */
               unknownInjection: function unknownInjection(_ref2) {
                  var technology = _ref2.technology,
                      injection = _ref2.injection,
                      widgetName = _ref2.widgetName;

                  return new Error(technology + " adapter: " + ("Trying to inject unknown service \"" + injection + " into widget \"" + widgetName + "\""));
               },

               /**
                * Creates (but does not throw) an error indicating that a widget was not registered with the current
                * adapter.
                *
                * @param {String} details.technology
                *    the complaining adapter's technology
                * @param {String} details.widgetName
                *    the canonical name of the missing widget
                *
                * @return {Error}
                *    the error, ready to throw
                */
               unknownWidget: function unknownWidget(_ref3) {
                  var technology = _ref3.technology,
                      widgetName = _ref3.widgetName;

                  return new Error(technology + " adapter: Unknown widget: " + widgetName);
               }
            };
         }

         /***/
      },
      /* 15 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         /**
         * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         var NOT_FOUND = { content: null };

         function create(artifacts, browser, configuration, log) {

            var baseHref = configuration.get('baseHref');

            var resolve = baseHref ? function (_) {
               return browser.resolve(_, baseHref);
            } : function (_) {
               return _;
            };

            var _ref = function (themeRef) {
               var themeIndex = artifacts.aliases.themes[themeRef];
               var theme = artifacts.themes[themeIndex];
               if (!theme) {
                  log.error('The configured theme ' + themeRef + ' is not available.');
                  return ['default', 'default.theme'];
               }
               return [themeRef, theme.descriptor.name];
            }(configuration.ensure('theme')),
                _ref2 = _slicedToArray(_ref, 2),
                themeRef = _ref2[0],
                themeName = _ref2[1];

            return {
               forFlow: makeProvider('flows', ['descriptor'], ['definition']),
               forTheme: makeProvider('themes', ['descriptor', 'assets']).bind(null, themeRef),
               forPage: makeProvider('pages', ['descriptor'], ['definition']),
               forLayout: makeProvider('layouts', ['descriptor', 'assets']),
               forWidget: makeProvider('widgets', ['descriptor', 'assets', 'module']),
               forControl: makeProvider('controls', ['descriptor', 'assets', 'module'])
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function makeProvider(bucket) {
               var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
               var cloneKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

               return function (ref) {
                  var api = {};
                  var index = artifacts.aliases[bucket][ref];
                  var artifactPromise = index === undefined ? Promise.reject(new Error('Artifact ' + ref + ' not found in ' + bucket)) : Promise.resolve(artifacts[bucket][index]);

                  ['definition', 'module', 'descriptor'].forEach(function (key) {
                     if (cloneKeys.includes(key)) {
                        api[key] = function () {
                           return artifactPromise.then(function (_) {
                              return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["deepClone"])(_[key]);
                           });
                        };
                     } else if (keys.includes(key)) {
                        api[key] = function () {
                           return artifactPromise.then(function (_) {
                              return _[key];
                           });
                        };
                     }
                  });

                  if (keys.includes('assets')) {
                     (function () {
                        var lookup = function lookup(name) {
                           __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(name).hasType(String).isNotNull();
                           return function (_ref3) {
                              var _ref3$assets = _ref3.assets,
                                  assets = _ref3$assets === undefined ? {} : _ref3$assets;

                              return assets[name] || NOT_FOUND;
                           };
                        };

                        var lookupForTheme = function lookupForTheme(name) {
                           __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(name).hasType(String).isNotNull();
                           return function (_ref4) {
                              var _ref4$assets = _ref4.assets,
                                  assets = _ref4$assets === undefined ? {} : _ref4$assets;

                              var themedAssets = assets[themeName];
                              if (themedAssets && themedAssets[name]) {
                                 return themedAssets[name];
                              }
                              var defaultAssets = assets['default.theme'];
                              if (defaultAssets && defaultAssets[name]) {
                                 return defaultAssets[name];
                              }
                              return NOT_FOUND;
                           };
                        };

                        var provide = function provide(_ref5) {
                           var url = _ref5.url,
                               content = _ref5.content;

                           if (content == null && url) {
                              return browser.fetch(resolve(url)).then(function (_) {
                                 return _.text();
                              });
                           }
                           return content || null;
                        };

                        var provideUrl = function provideUrl(_ref6) {
                           var url = _ref6.url;
                           return url ? resolve(url) : null;
                        };

                        api.asset = function (name) {
                           return artifactPromise.then(lookup(name)).then(provide);
                        };

                        api.assetUrl = function (name) {
                           return artifactPromise.then(lookup(name)).then(provideUrl);
                        };

                        api.assetForTheme = function (name) {
                           return artifactPromise.then(lookupForTheme(name)).then(provide);
                        };

                        api.assetUrlForTheme = function (name) {
                           return artifactPromise.then(lookupForTheme(name)).then(provideUrl);
                        };
                     })();
                  }

                  return api;
               };
            }
         }

         /***/
      },
      /* 16 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the Browser factory.
          *
          * Provides abstractions for browser APIs used internally by LaxarJS, which might need a different
          * implementation in a server-side environment, or for testing.
          * This service is internal to LaxarJS and not available to widgets and activities.
          *
          * @module browser
          */

         /**
          * Create a browser abstraction environment.
          *
          * @return {Browser}
          *    a fresh browser instance
          *
          * @private
          */
         function create() {

            // for the MSIE `resolve`-workaround, cache the temporary HTML document
            var resolveDoc = void 0;
            var resolveDocBase = void 0;

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * A brower mostly abstracts over the location-related DOM window APIs, and provides a console wrapper.
             * Since it is internal to LaxarJS, only relevant APIs are included.
             *
             * @name Browser
             * @constructor
             */
            return {
               /**
               * Calculates an absolute URL from a (relative) URL, and an optional base URL.
               *
               * If no base URL is given, the `document.baseURI` is used instead. The given base URL may also be
               * relative, in which case it is resolved against the `document.baseURI` before resolving the first URL.
               *
               * For browser environments that do not support the `new URL( url, baseUrl )` constructor for resolving
               * URLs or that do not support `document.baseURI`, fallback mechanisms are used.
               *
               * @param {String} url
               *    the URL to resolve
               * @param {String} baseUrl
               *    the base to resolve from
               *
               * @return {String}
               *    an absolute URL based on the given URL
               *
               * @type {Function}
               * @memberof Browser
               */
               resolve: selectResolver(),

               /**
                * Provides easily mocked access to `window.location`
                *
                * @return {Location}
                *    the current (window's) DOM location
                *
                * @type {Function}
                * @memberof Browser
                */
               location: function location() {
                  return window.location;
               },

               /**
                * Provides easily mocked access to `window.fetch` or a suitable polyfill:
                *
                * @param {String|Request} input
                *    the URL to fetch or the request to perform
                * @param {Object} [init]
                *    additional options, described here in more detail:
                *    https://developer.mozilla.org/en-US/docs/Web/API/Globalfetch/fetch#Parameters
                *
                * @return {Promise<Response>}
                *    the resulting promise
                *
                * @type {Function}
                * @memberof Browser
                */
               fetch: function fetch(input, init) {
                  return window.fetch(input, init);
               },

               /**
                * Provides easily mocked access to `window.console`:
                *
                * @return {Console}
                *    the browser console promise
                *
                * @type {Function}
                * @memberof Browser
                */
               console: function console() {
                  return window.console;
               }
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // perform the exception-based feature-detect only once (for performance, and to be nice to debugger users)
            function selectResolver() {
               try {
                  var href = window.location.href;

                  return new URL('', href).href === href ? resolveUsingUrl : resolveUsingLink;
               } catch (e) {
                  return resolveUsingLink;
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // Resolve using the DOM URL API (Chrome, Firefox, Safari, MS Edge)
            function resolveUsingUrl(url, baseUrl) {
               var absoluteBaseUrl = baseUrl ? abs(baseUrl) : document.baseURI || abs('.');
               return new URL(url, absoluteBaseUrl).href;

               function abs(url) {
                  return new URL(url, document.baseURI || resolveUsingLink('.'));
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // Resolve using the a-tag fallback (MSIE)
            function resolveUsingLink(url, baseUrl) {
               var absoluteBaseUrl = abs(baseUrl);
               if (!resolveDoc) {
                  resolveDoc = document.implementation.createHTMLDocument('');
                  resolveDocBase = resolveDoc.createElement('base');
                  resolveDoc.head.appendChild(resolveDocBase);
               }
               resolveDocBase.href = absoluteBaseUrl;
               return abs(url, resolveDoc);

               function abs(url) {
                  var baseDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;

                  var a = baseDocument.createElement('a');
                  // MSIE does not process empty URLs correctly (http://stackoverflow.com/a/7966835)
                  a.href = url || '#';
                  return url ? a.href : a.href.slice(0, -1);
               }
            }
         }

         /***/
      },
      /* 17 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the Configuration factory.
          *
          * To use the Configuration in a widget, request the {@link widget_services#axConfiguration axConfiguration}
          * injection. In compatibility mode with LaxarJS v1.x, it is also available under `laxar.configuration`.
          *
          * @module configuration
          */

         function create(source, defaults) {

            /**
             * Provides access to the configuration that was passed during application bootstrapping.
             *
             * A *Configuration* instance provides convenient readonly access to the underlying LaxarJS
             * application bootstrapping configuration. The configuration values are passed to
             * {@link laxar#bootstrap()} on startup (before LaxarJS v2.x, these configuration values were read from
             * `window.laxar`). When using the LaxarJS application template, the configuration values are set in the
             * file `application/application.js` under your project's root directory.
             *
             * @name Configuration
             * @constructor
             */
            return { get: get, ensure: ensure };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Returns the configured value for the specified attribute path or `undefined` in case it wasn't
             * configured. If a default value was passed as second argument this is returned instead of `undefined`.
             *
             * Services should use this to get configuration values for which there are universal fallback behaviors.
             *
             * Examples:
             * ```js
             * // ... inject `axConfiguration` as parameter `config` ...
             * config.get( 'logging.threshold' ); // -> 'INFO'
             * config.get( 'iDontExist' ); // -> undefined
             * config.get( 'iDontExist', 42 ); // -> 42
             * ```
             *
             * @param {String} key
             *    a  path (using `.` as separator) to the property in the configuration object
             * @param {*} [optionalDefault]
             *    the value to return if no value was set for `key`
             *
             * @return {*}
             *    either the configured value, `undefined` or `optionalDefault`
             *
             * @memberof Configuration
             */
            function get(key, optionalDefault) {
               var value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["path"])(source, key);
               return value !== undefined ? value : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["path"])(defaults, key, optionalDefault);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Retrieves a configuration value by key, failing if it is `undefined` or `null`.
             *
             * Services should use this to get configuration values for which no universal default or fallback exists.
             *
             * Examples:
             * ```js
             * // ... inject `axConfiguration` as parameter `config` ...
             * config.ensure( 'logging.threshold' ); // -> 'INFO'
             * config.ensure( 'iDontExist' ); // -> throws
             * ```
             *
             * @param {String} key
             *    a  path (using `.` as separator) to the property in the configuration object
             *
             * @return {*}
             *    the configured value (if `undefined` or `null`, an exception is thrown instead)
             *
             * @memberof Configuration
             */
            function ensure(key) {
               var value = get(key);
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(value).isNotNull('Configuration is missing mandatory entry: ' + key);
               return value;
            }
         }

         /***/
      },
      /* 18 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
               for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                  arr2[i] = arr[i];
               }return arr2;
            } else {
               return Array.from(arr);
            }
         }

         function _toArray(arr) {
            return Array.isArray(arr) ? arr : Array.from(arr);
         }

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the EventBus factory.
          *
          * To use the EventBus in a widget, request the {@link widget_services#axEventBus axEventBus} injection, or
          * use the `eventBus` property on the {@link widget_services#axContext axContext} injection.
          * In some cases, it may be useful to inject the global EventBus instance backing all widget instances of the
          * same bootstrapping context, by requesting the {@link widget_services#axGlobalEventBus axGlobalEventBus}
          * injection.
          *
          * @module event_bus
          */

         var WILDCARD = '*';
         var SUBSCRIBER_FIELD = '.';

         var TOPIC_SEPARATOR = '.';
         var SUB_TOPIC_SEPARATOR = '-';
         var REQUEST_MATCHER = /^([^.])([^.]*)Request(\..+)?$/;

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * @param {Object} configuration
          *    configuration for the event bus instance.
          *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.
          * @param {Object} log
          *    a logger instance for error reporting
          * @param {Function} nextTick
          *    a next tick function like `process.nextTick`, `setImmediate` or AngularJS' `$timeout`
          * @param {Function} timeoutFunction
          *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`
          * @param {Function} [errorHandler]
          *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.
          *
          * @constructor
          * @private
          */
         function EventBus(configuration, log, nextTick, timeoutFunction) {
            var errorHandler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : createLogErrorHandler(log);

            this.nextTick_ = function (f) {
               return nextTick(f);
            };
            this.timeoutFunction_ = function (f, ms) {
               return timeoutFunction(f, ms);
            };
            this.timeoutMs_ = configuration.ensure('eventBusTimeoutMs');
            this.errorHandler_ = errorHandler;

            this.cycleCounter_ = 0;
            this.eventQueue_ = [];
            this.subscriberTree_ = {};

            this.waitingPromiseResolves_ = [];
            this.currentCycle_ = -1;
            this.inspectors_ = [];
            this.log_ = log;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Adds an inspector, that gets notified when certain actions within the event bus take place. Currently
          * these actions may occur:
          *
          * - `subscribe`: a new subscriber registered for an event
          * - `publish`: an event is published but not yet delivered
          * - `deliver`: an event is actually delivered to a subscriber
          *
          * An inspector receives a map with the following properties:
          *
          * - `action`: one of the actions from above
          * - `source`: the origin of the `action`
          * - `target`: the name of the event subscriber (`deliver` action only)
          * - `event`: the full name of the event or the subscribed event (`subscribe` action only)
          * - `eventObject`: the published event item (`publish` action only)
          * - `subscribedTo`: the event, possibly with omissions, the subscriber subscribed to (`deliver` action only)
          * - `cycleId`: the id of the event cycle
          *
          * The function returned by this method can be called to remove the inspector again and prevent it from
          * being called for future event bus actions.
          *
          * @param {Function} inspector
          *    the inspector function to add
          *
          * @return {Function}
          *    a function to remove the inspector
          */
         EventBus.prototype.addInspector = function (inspector) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(inspector).hasType(Function).isNotNull();

            this.inspectors_.push(inspector);
            return function () {
               var index = this.inspectors_.indexOf(inspector);
               if (index !== -1) {
                  this.inspectors_.splice(index, 1);
               }
            }.bind(this);
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Subscribes to an event by name. An event name consists of so called *topics*, where each topic is
          * separated from another by dots (`.`). If a topic is omitted, this is treated as a wildcard. Note that
          * two dots in the middle or one dot at the beginning of an event name must remain, whereas a dot at the
          * end may be omitted. As such every event name has an intrinsic wildcard at its end. For example these are
          * all valid event names:
          *
          * - `some.event`: matches `some.event`, `some.event.again`
          * - `.event`: matches `some.event`, `any.event`, `any.event.again`
          * - `some..event`: matches `some.fancy.event`, `some.special.event`
          *
          * Additionally *subtopics* are supported. Subtopics are fragments of a topic, separated from another by
          * simple dashes (`-`). Here only suffixes of subtopics may be omitted when subscribing. Thus subscribing
          * to `some.event` would match an event published with name `some.event-again` or even
          * `some.event-another.again`.
          *
          * **The subscriber function**
          *
          * When an event is delivered, the subscriber function receives two arguments:
          * The first one is the event object as it was published. If `optionalOptions.clone` yields `true` this is a
          * simple deep copy of the object (note that only properties passing a JSON-(de)serialization remain). If
          * `false` the object is frozen using `Object.freeze` recursively.
          *
          * The second one is a meta object with these properties:
          *
          * - `name`: The name of the event as it actually was published (i.e. without wildcards).
          * - `cycleId`: The id of the cycle the event was published (and delivered) in
          * - `sender`: The id of the event sender, may be `null`.
          * - `initiator`: The id of the initiator of the cycle. Currently not implemented, thus always `null`.
          * - `options`: The options that were passed to `publish` or `publishAndGatherReplies` respectively.
          *
          * @param {String} eventName
          *    the name of the event to subscribe to
          * @param {Function} subscriber
          *    a function to call whenever an event matching `eventName` is published
          * @param {Object} [optionalOptions]
          *    additional options for the subscribe action
          * @param {String} [optionalOptions.subscriber=null]
          *    the id of the subscriber. Default is `null`
          * @param {Boolean} [optionalOptions.clone=true]
          *    if `false` the event will be send frozen to the subscriber, otherwise it will receive a deep copy.
          *    Default is `true`
          *
          * @return {Function}
          *    a function that when called unsubscribes from this subscription again
          */
         EventBus.prototype.subscribe = function (eventName, subscriber, optionalOptions) {
            var _this = this;

            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(subscriber).hasType(Function).isNotNull();

            var options = __WEBPACK_IMPORTED_MODULE_1__utilities_object__["options"](optionalOptions, {
               subscriber: null,
               clone: true
            });
            var subscriberItem = {
               name: eventName,
               subscriber: subscriber,
               subscriberName: options.subscriber,
               subscriptionWeight: calculateSubscriptionWeight(eventName),
               options: options
            };

            var eventNameParts = eventName.split(TOPIC_SEPARATOR);
            var node = eventNameParts.reduce(function (node, eventNamePart) {
               var bucketName = eventNamePart || WILDCARD;
               if (!(bucketName in node)) {
                  node[bucketName] = {};
               }
               return node[bucketName];
            }, this.subscriberTree_);

            if (!(SUBSCRIBER_FIELD in node)) {
               node[SUBSCRIBER_FIELD] = [];
            }
            node[SUBSCRIBER_FIELD].push(subscriberItem);

            notifyInspectors(this, {
               action: 'subscribe',
               source: options.subscriber,
               target: '-',
               event: eventName,
               cycleId: this.currentCycle_
            });

            return function () {
               unsubscribeRecursively(_this, _this.subscriberTree_, eventNameParts, subscriber);
            };
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Asynchronously publishes an event on the event bus. The returned promise will be enqueued as soon as this
          * event is delivered and, if during delivery a new event was enqueued, resolved after that new event was
          * delivered. If no new event is published during delivery of this event, the promise is instantly resolved.
          * To make this a bit clearer, lets assume we publish and thus enqueue an event at time `t`. It then will
          * be delivered at time `t+1`. At that precise moment the promise is enqueued to be resolved soon. We then
          * distinguish between two cases:
          *
          * - At time `t+1` no subscriber publishes (i.e. enqueues) an event: Thus there is no event in the same
          *   cycle and the promise is also resolved at time `t+1`.
          * - At least one subscriber publishes an event at time `t+1`: The promise is then scheduled to be resolved
          *   as soon as this event is delivered at time `t+2`.
          *
          * The implication of this is the following:
          *
          * We have two collaborators, A and B. A listens to event b and B listens to event a.
          * Whenever A publishes a and B than instantly (i.e. in the same event cycle of the JavaScript runtime
          * where its subscriber function was called) *responds* by publishing b, b arrives at the subscriber
          * function of A, before the promise of A's publish action is resolved.
          * It is hence possible to observe possible effects of an event sent by oneself, under the conditions
          * mentioned above. Practically this is used internally for the implementation of
          * {@link #EventBus.publishAndGatherReplies()}.
          *
          * @param {String} eventName
          *    the name of the event to publish
          * @param {Object} [optionalEvent]
          *    the event to publish
          * @param {Object} [optionalOptions]
          *    additional options for the publish action
          * @param {String} [optionalOptions.sender=null]
          *    the id of the event sender. Default is `null`
          * @param {Boolean} [optionalOptions.deliverToSender=true]
          *    if `false` the event will not be send to subscribers whose subscriber name matches
          *    `optionalOptions.sender`, else all subscribers will receive the event. Default is `true`
          *
          * @return {Promise}
           *   the delivery promise
          */
         EventBus.prototype.publish = function (eventName) {
            var _this2 = this;

            var optionalEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var optionalOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();

            var event = JSON.parse(JSON.stringify(optionalEvent));
            var options = Object.assign({ deliverToSender: true, sender: null }, optionalOptions);

            return new Promise(function (resolve) {
               var eventItem = {
                  meta: {
                     name: eventName,
                     cycleId: _this2.currentCycle_ > -1 ? _this2.currentCycle_ : _this2.cycleCounter_++,
                     sender: options.sender,
                     initiator: null,
                     options: options
                  },
                  event: event,
                  resolvePublish: resolve
               };
               enqueueEvent(_this2, eventItem);

               notifyInspectors(_this2, {
                  action: 'publish',
                  source: options.sender,
                  target: '-',
                  event: eventName,
                  eventObject: event,
                  cycleId: eventItem.meta.cycleId
               });
            });
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Publishes an event that follows the *request-will-did pattern* and awaits all replies. This pattern has
          * evolved over time and is of great use when handling the asynchronous nature of event bus events.
          *
          * Certain rules need to be fulfilled: First the initiator needs to call this method with an event whose
          * name has the suffix `Request`, e.g. `takeActionRequest`. All collaborators that want to react to this
          * event then either do so in the same event cycle by sending a `didTakeAction` event or announce that they
          * will do something asynchronously by publishing a `willTakeAction` event. In the latter case they need to
          * broadcast the fulfillment of their action some time later by sending a `didTakeAction` event. Note that for
          * both events the same sender name needs to be given. Otherwise they cannot be mapped and the event bus
          * doesn't know if all asynchronous replies were already received.
          *
          * Additionally a timer is started using either the globally configured `pendingDidTimeout` ms value or the
          * value provided as option to this method. If that timer expires before all `did*` events to all given
          * `will*` events were received, the error handler is called to handle the incident and the promise is
          * rejected with all responses received up to now.
          *
          * @param {String} eventName
          *    the name of the event to publish
          * @param {Object} [optionalEvent]
          *    the event to publish
          * @param {Object} [optionalOptions]
          *    additional options for the publish action
          * @param {String} [optionalOptions.sender=null]
          *    the id of the event sender. Default is `null`
          * @param {Number} [optionalOptions.pendingDidTimeout]
          *    the timeout in milliseconds for pending did* events. Default is the timeout option used when the
          *    event bus instance was created
          *
          * @return {Promise}
          *   the delivery promise. It receives a list of all collected `did*` events and according meta information
          */
         EventBus.prototype.publishAndGatherReplies = function (eventName, optionalEvent, optionalOptions) {
            var _this3 = this;

            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();

            var matches = REQUEST_MATCHER.exec(eventName);
            __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(!!matches, 'Expected eventName to end with "Request" but got ' + eventName);

            var options = Object.assign({ pendingDidTimeout: this.timeoutMs_ }, optionalOptions);

            var eventNameSuffix = matches[1].toUpperCase() + matches[2];
            if (matches[3]) {
               eventNameSuffix += matches[3];
            }
            var deferred = {};
            deferred.promise = new Promise(function (resolve, reject) {
               deferred.resolve = resolve;
               deferred.reject = reject;
            });
            var willWaitingForDid = [];
            var givenDidResponses = [];
            var cycleFinished = false;

            var unsubscribeWillCollector = this.subscribe('will' + eventNameSuffix, function (event, meta) {
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(meta.sender).hasType(String).isNotNull('A response with will to a request-event must contain a sender.');

               willWaitingForDid.push(meta.sender);
            }, { subscriber: options.sender });

            var unsubscribeDidCollector = this.subscribe('did' + eventNameSuffix, function (event, meta) {
               givenDidResponses.push({ event: event, meta: meta });
               var senderIndex = void 0;
               do {
                  senderIndex = willWaitingForDid.indexOf(meta.sender);
                  if (senderIndex !== -1) {
                     willWaitingForDid.splice(senderIndex, 1);
                  }
               } while (senderIndex !== -1);

               if (willWaitingForDid.length === 0 && cycleFinished) {
                  finish();
               }
            }, { subscriber: options.sender });

            var timeoutRef = this.timeoutFunction_(function () {
               if (willWaitingForDid.length > 0) {
                  var message = 'Timeout while waiting for pending did' + eventNameSuffix + ' on ' + eventName + '.';
                  _this3.errorHandler_(message, {
                     'Sender': options.sender,
                     'After ms timeout': options.pendingDidTimeout,
                     'Responses missing from': willWaitingForDid.join(', ')
                  });
                  finish(true);
               }
            }, options.pendingDidTimeout);

            this.publish(eventName, optionalEvent, options).then(function () {
               unsubscribeWillCollector();
               if (willWaitingForDid.length === 0) {
                  // either there was no will or all did responses were already given in the same cycle as the will
                  finish();
                  return;
               }
               cycleFinished = true;
            });

            function finish(wasCanceled) {
               clearTimeout(timeoutRef);
               unsubscribeDidCollector();
               (wasCanceled ? deferred.reject : deferred.resolve)(givenDidResponses);
            }

            return deferred.promise;
         };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function enqueueEvent(self, eventItem) {
            if (self.eventQueue_.length === 0) {
               self.nextTick_(function () {
                  var queuedEvents = self.eventQueue_;

                  self.eventQueue_ = [];

                  processWaitingPublishPromises(self, processQueue(self, queuedEvents));
               });
            }
            self.eventQueue_.push(eventItem);
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function processQueue(self, queuedEvents) {
            return queuedEvents.map(function (eventItem) {
               var meta = eventItem.meta;
               self.currentCycle_ = meta.cycleId;

               var subscribers = findSubscribers(self, meta.name);
               if (subscribers.length === 0) {
                  self.currentCycle_ = -1;
                  return eventItem.resolvePublish;
               }

               var serializedEvent = null;
               if (subscribers.length > 1) {
                  serializedEvent = JSON.stringify(eventItem.event);
               }

               var senderName = meta.sender;
               var options = meta.options;

               subscribers.forEach(function (subscriberItem) {
                  var subscriberName = subscriberItem.subscriberName;
                  if (!options.deliverToSender && senderName && senderName === subscriberName) {
                     return;
                  }

                  try {
                     var event = void 0;
                     if (subscriberItem.options.clone) {
                        event = serializedEvent ? JSON.parse(serializedEvent) : eventItem.event;
                     } else {
                        event = eventItem.event;
                     }
                     subscriberItem.subscriber(event, meta);
                  } catch (e) {
                     var message = 'error while calling subscriber "' + subscriberName + '"' + (' for event ' + meta.name) + (' published by "' + senderName + '" (subscribed to: ' + subscriberItem.name + ')');
                     self.errorHandler_(message, {
                        'Exception': e,
                        'Published event': eventItem.event,
                        'Event meta information': meta,
                        'Caused by Subscriber': subscriberItem
                     });
                  }

                  notifyInspectors(self, {
                     action: 'deliver',
                     source: senderName,
                     target: subscriberName,
                     event: meta.name,
                     eventObject: eventItem.event,
                     subscribedTo: subscriberItem.name,
                     cycleId: meta.cycleId
                  });
               });

               self.currentCycle_ = -1;

               return eventItem.resolvePublish;
            });
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function processWaitingPublishPromises(self, newPromiseResolves) {
            var waitingResolves = self.waitingPromiseResolves_;
            self.waitingPromiseResolves_ = newPromiseResolves;

            waitingResolves.forEach(function (resolve) {
               return resolve();
            });

            if (self.eventQueue_.length === 0) {
               // nothing was queued by any subscriber. The publishers can instantly be notified of delivery.
               newPromiseResolves.forEach(function (resolve) {
                  return resolve();
               });
               self.waitingPromiseResolves_ = [];
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function unsubscribeRecursively(self, node, parts, subscriber) {
            if (parts.length === 0 && Array.isArray(node[SUBSCRIBER_FIELD])) {
               var subscribers = node[SUBSCRIBER_FIELD];
               for (var i = subscribers.length - 1; i >= 0; --i) {
                  if (subscribers[i].subscriber === subscriber) {
                     notifyInspectors(self, {
                        action: 'unsubscribe',
                        source: subscribers[i].subscriberName,
                        target: '-',
                        event: subscribers[i].name,
                        cycleId: self.currentCycle_
                     });
                     subscribers.splice(i, 1);
                  }
               }
            }

            var _parts = _toArray(parts),
                part = _parts[0],
                rest = _parts.slice(1);

            var searchPart = part || WILDCARD;
            if (searchPart in node) {
               unsubscribeRecursively(self, node[searchPart], rest, subscriber);
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function findSubscribers(self, eventName) {
            var subscribers = [];
            var parts = eventName.split(TOPIC_SEPARATOR);
            var node = self.subscriberTree_;

            findSubscribersRecursively(node, parts, subscribers);
            subscribers.sort(function (a, b) {
               var aWeight = a.subscriptionWeight;
               var bWeight = b.subscriptionWeight;
               if (aWeight[0] === bWeight[0]) {
                  return bWeight[1] - aWeight[1];
               }

               return bWeight[0] - aWeight[0];
            });

            return subscribers;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function findSubscribersRecursively(node, parts, subscribers) {
            if (Array.isArray(node[SUBSCRIBER_FIELD])) {
               subscribers.push.apply(subscribers, _toConsumableArray(node[SUBSCRIBER_FIELD]));
            }

            if (parts.length === 0) {
               return;
            }

            var _parts2 = _toArray(parts),
                part = _parts2[0],
                remainder = _parts2.slice(1);

            if (part.indexOf(SUB_TOPIC_SEPARATOR) !== -1) {
               var index = part.length;
               var currentPart = part;
               do {
                  currentPart = currentPart.substring(0, index);
                  if (currentPart in node) {
                     findSubscribersRecursively(node[currentPart], remainder, subscribers);
                  }
                  index = currentPart.lastIndexOf(SUB_TOPIC_SEPARATOR);
               } while (index !== -1);
            } else if (part in node) {
               findSubscribersRecursively(node[part], remainder, subscribers);
            }

            if (WILDCARD in node) {
               findSubscribersRecursively(node[WILDCARD], remainder, subscribers);
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function calculateSubscriptionWeight(eventName) {
            var parts = eventName.split(TOPIC_SEPARATOR);
            var weight = [0, 0];
            parts.forEach(function (part) {
               if (part.length > 0) {
                  weight[0]++;
                  weight[1] += part.split(SUB_TOPIC_SEPARATOR).length - 1;
               }
            });
            return weight;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function notifyInspectors(self, infoObject) {
            self.inspectors_.forEach(function (inspector) {
               inspector(infoObject);
            });
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function createLogErrorHandler(log) {
            return function (message, optionalErrorInformation) {
               var sensitiveData = ['Published event'];

               log.error('EventBus: ' + message);

               if (optionalErrorInformation) {
                  __WEBPACK_IMPORTED_MODULE_1__utilities_object__["forEach"](optionalErrorInformation, function (info, title) {
                     var formatString = '   - [0]: [1:%o]';
                     if (sensitiveData.indexOf(title) !== -1) {
                        formatString = '   - [0]: [1:%o:anonymize]';
                     }

                     log.error(formatString, title, info);

                     if (info instanceof Error && info.stack) {
                        log.error('   - Stacktrace: ' + info.stack);
                     }
                  });
               }
            };
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates and returns a new event bus instance using the given configuration.
          *
          * @param {Object} configuration
          *    configuration for the event bus instance.
          *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.
          * @param {Object} log
          *    a logger to use for error reporting
          * @param {Function} nextTick
          *    a next tick function like `process.nextTick` or AngularJS' `$timeout`
          * @param {Function} timeoutFunction
          *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`
          * @param {Function} [errorHandler]
          *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.
          *
          * @return {EventBus}
          *    an event bus instance
          *
          * @private
          */
         function create(configuration, log, nextTick, timeoutFunction, errorHandler) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(configuration.ensure).hasType(Function).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(log.error).hasType(Function).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(nextTick).hasType(Function).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(timeoutFunction).hasType(Function).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(errorHandler).hasType(Function);

            return new EventBus(configuration, log, nextTick, timeoutFunction, errorHandler);
         }

         /***/
      },
      /* 19 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* unused harmony export TARGET_SELF */
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the FlowController factory.
          *
          * This service is internal to LaxarJS and not available to widgets and activities.
          *
          * @module flow_controller
          * @private
          */

         var SESSION_KEY_TIMER = 'navigationTimer';
         var DEFAULT_PLACE = '';

         var TARGET_SELF = '_self';

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates and returns a new flow controller from its dependencies.
          *
          * @param {ArtifactProvider} artifactProvider
          *    an artifact provider, needed to fetch the flow definition
          * @param {Configuration} configuration
          *    a configuration instance, to determine the name of the flow to load
          * @param {EventBus} eventBus
          *    an event bus instance, used to subscribe to navigateRequest events, and to publish will/did-responses
          * @param {Logger} log
          *    a logger that is used for reporting flow validation and navigation problems
          * @param {PageService} pageService
          *    the page service to use for actual page transitions (setup, teardown) during navigation
          * @param {Router} router
          *    router to register places with, and to use for URL construction
          * @param {Timer} timer
          *    timer to use for measuring page transitions
          *
          * @return {FlowController}
          *    a flow controller instance
          */
         function create(artifactProvider, configuration, eventBus, log, pageService, router, timer) {

            var COLLABORATOR_ID = 'AxFlowController';
            var availablePlaces = {};

            var activeParameters = {};
            var activePlace = void 0;
            var navigationInProgress = false;
            var requestedTarget = null;

            eventBus.subscribe('navigateRequest', function (_ref) {
               var target = _ref.target,
                   data = _ref.data;

               if (navigationInProgress) {
                  return;
               }
               requestedTarget = target;
               navigateToTarget(target, Object.assign({}, activeParameters, data));
            }, { subscriber: COLLABORATOR_ID });

            /**
             * A flow controller can load a flow definition, setup routes, and allows to navigate between places. The
             * flow controller handles router-initiated navigation as well as `navigateRequest` events and triggers
             * instantiation/destruction of the associated pages.
             *
             * @name FlowController
             * @constructor
             */
            return {
               constructAbsoluteUrl: constructAbsoluteUrl,
               loadFlow: loadFlow
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Starts loading the configured flow definition and configures the router.
             *
             * @return {Promise}
             *    a promise that is resolved when all routes have been registered
             */
            function loadFlow() {
               var flowName = configuration.ensure('flow.name');
               return artifactProvider.forFlow(flowName).definition().then(function (flow) {
                  return router.registerRoutes(assembleRoutes(flow), createFallbackHandler(flow));
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Get the place definition for a given target or place. If the provided identifier is a target of the
             * current place, the definition of the referenced place is returned. Otherwise, the current place is
             * returned.
             *
             * @param {String} targetOrPlaceId
             *    a string identifying the target or place to obtain a definition for
             * @param {Object} place
             *    the corresponding place definition
             *
             * @return {Object}
             *    a place definition with `targets` and `patterns` as specified in the flow definition, plus `id`
             */
            function placeForTarget(targetOrPlaceId) {
               var place = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : activePlace;

               var placeId = place ? place.targets[targetOrPlaceId] : null;
               if (placeId == null) {
                  placeId = targetOrPlaceId;
               }
               __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(placeId in availablePlaces, 'Unknown target or place "' + targetOrPlaceId + '". Current place: "' + place.id + '"');
               return availablePlaces[placeId];
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Constructs an absolute URL to the given target or place using the given parameters. If a target is
             * given as first argument, it is resolved using the currently active place.
             *
             * @param {String} targetOrPlace
             *    the target or place ID to construct a URL for
             * @param {Object} [optionalParameters]
             *    optional map of place parameters. Missing parameters are filled base on the parameters that were
             *    passed to the currently active place
             *
             * @return {String}
             *    the generated absolute URL
             *
             * @memberof FlowService
             */
            function constructAbsoluteUrl(targetOrPlace, optionalParameters) {
               var place = placeForTarget(targetOrPlace);
               return router.constructAbsoluteUrl(place.patterns, withoutRedundantParameters(place, optionalParameters));
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function navigateToTarget(targetOrPlaceId, parameters, redirectFrom) {
               var place = placeForTarget(targetOrPlaceId, redirectFrom);
               router.navigateTo(place.patterns, withoutRedundantParameters(place, parameters), !!redirectFrom);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function handleRouteChange(place, routerParameters) {
               var parameters = Object.assign({}, place.defaultParameters, routerParameters);
               if (activePlace && place.id === activePlace.id && equals(parameters, activeParameters)) {
                  navigationInProgress = false;
                  log.trace('Canceling navigation to "' + place.id + '". Already there with same parameters.');
                  return Promise.resolve();
               }
               if (navigationInProgress) {
                  log.trace('Canceling navigation to "' + place.id + '". Navigation already in progress.');
                  return Promise.resolve();
               }
               navigationInProgress = true;

               var fromPlace = activePlace ? activePlace.targets[TARGET_SELF] : '';
               var navigationTimer = timer.started({
                  label: 'navigation (' + fromPlace + ' -> ' + place.targets[TARGET_SELF] + ')',
                  persistenceKey: SESSION_KEY_TIMER
               });

               var event = {
                  target: requestedTarget || place.id,
                  place: place.id,
                  data: parameters
               };
               requestedTarget = null;

               var options = { sender: COLLABORATOR_ID };
               return eventBus.publish('willNavigate.' + event.target, event, options).then(function () {
                  if (activePlace && place.id === activePlace.id) {
                     activeParameters = parameters;
                     return Promise.resolve();
                  }

                  return pageService.controller().tearDownPage().then(function () {
                     log.setTag('PLCE', place.id);
                     activeParameters = parameters;
                     activePlace = place;
                     return pageService.controller().setupPage(place.page);
                  });
               }).then(function () {
                  navigationInProgress = false;
                  navigationTimer.stopAndLog('didNavigate');
                  return eventBus.publish('didNavigate.' + event.target, event, options);
               }).catch(function (err) {
                  log.error('Failed to navigate to place "' + place.id + '". Error: [0]\n', err.stack);
                  return Promise.reject(err);
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createFallbackHandler(flow) {
               var redirectOn = flow.redirectOn,
                   places = flow.places;

               return function (path) {
                  log.warn('Received request for unknown route "' + path + '".');
                  if (redirectOn.unknownPlace in places) {
                     log.trace('- Redirecting to error place ("' + redirectOn.unknownPlace + '").');
                     handleRouteChange(places[redirectOn.unknownPlace], {});
                  } else if (DEFAULT_PLACE in places) {
                     log.trace('- Redirecting to default place ("' + DEFAULT_PLACE + '").');
                     handleRouteChange(places[DEFAULT_PLACE], {});
                  } else {
                     log.trace('- Got no unknownPlace redirect and no default place. Doing nothing.');
                  }
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function assembleRoutes(_ref2) {
               var places = _ref2.places;

               var routeMap = {};
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["forEach"])(places, function (place, placeId) {
                  place.id = placeId;
                  place.patterns = place.patterns || ['/' + placeId];
                  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["setPath"])(place, 'targets.' + TARGET_SELF, place.id);

                  var id = place.id,
                      patterns = place.patterns,
                      page = place.page,
                      redirectTo = place.redirectTo;

                  availablePlaces[id] = place;

                  if (redirectTo) {
                     patterns.forEach(function (pattern) {
                        routeMap[pattern] = function (parameters) {
                           navigateToTarget(redirectTo, parameters, place);
                        };
                     });
                     return;
                  }

                  if (!page) {
                     log.error('flow: invalid empty place: ' + id);
                     return;
                  }

                  patterns.forEach(function (pattern) {
                     routeMap[pattern] = function (parameters) {
                        handleRouteChange(place, parameters);
                     };
                  });
               });
               return routeMap;
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function withoutRedundantParameters(place, parameters) {
            var _place$defaultParamet = place.defaultParameters,
                defaultParameters = _place$defaultParamet === undefined ? {} : _place$defaultParamet;

            var remainingParameters = {};
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["forEach"])(parameters, function (value, key) {
               if (!(key in defaultParameters) || defaultParameters[key] !== value) {
                  remainingParameters[key] = value;
               }
            });
            return remainingParameters;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function equals(a, b) {
            var aKeys = Object.keys(a);
            var bKeys = Object.keys(b);
            return aKeys.length === bKeys.length && aKeys.every(function (key) {
               return key in b && a[key] === b[key];
            });
         }

         /***/
      },
      /* 20 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the FlowService factory.
          *
          * To access the FlowService in a widget, request the {@link widget_services#axFlowService axFlowService}
          * injection.
          *
          * @module flow_service
          */

         /**
          * Creates a flow service  backed by the given flow controller.
          *
          * @param {FlowController} flowController
          *    a flow controller, needed to respect default parameter values when generating URLs
          *
          * @return {FlowService}
          *    a flow service instance
          *
          * @private
          */
         function create(flowController) {

            /**
             * Allows widgets to create valid URLs without knowledge about the current place, its routing patterns, or
             * about the actual routing implementation.
             *
             * @name FlowService
             * @constructor
             */
            return {
               constructAbsoluteUrl: constructAbsoluteUrl
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Constructs an absolute URL to the given target or place using the given parameters. If a target is
             * given as first argument, it is resolved using the currently active place.
             *
             * @param {String} targetOrPlace
             *    the target or place ID to construct a URL for
             * @param {Object} [optionalParameters]
             *    optional map of place parameters. Missing parameters are filled base on the parameters that were
             *    passed to the currently active place
             *
             * @return {String}
             *    the generated absolute URL
             *
             * @memberof FlowService
             */
            function constructAbsoluteUrl(targetOrPlace) {
               var optionalParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

               return flowController.constructAbsoluteUrl(targetOrPlace, optionalParameters);
            }
         }

         /***/
      },
      /* 21 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Module providing the Heartbeat factory.
          *
          * To use the Heartbeat service in a widget, request the {@link widget_services#axHeartbeat axHeartbeat}
          * injection.
          *
          * @module heartbeat
          */

         /**
          * Creates a heartbeat backed by the given scheduler.
          *
          * @param {Function} [customNextTick]
          *    a function that takes a callback, and will asynchronously execute that callback as soon as possible,
          *    but asynchronously (that is, after the calling execution stack has finished running).
          *    If omitted, the callback is scheduled using `Promise.resolve().then( ... )`.
          * @param {Function} [customTimeout]
          *    an optional replacement for `window.setTimeout`, used to run coalesced callbacks in a second stage
          *    after the immediately scheduled operation
          *
          * @return {FlowService}
          *    a flow service instance
          *
          * @private
          */
         function create(customNextTick, customTimeout) {

            var nextTick = customNextTick || function (f) {
               Promise.resolve().then(f);
            };
            var timeout = customTimeout || function (f) {
               setTimeout(f, 0);
            };

            var heartbeatListeners = [];
            var nextQueue = [];
            var beforeQueue = [];
            var afterQueue = [];

            var beatRequested = false;

            /**
             * Scheduler for tasks that possibly synchronously trigger creation of new tasks, that need some common
             * work to be done before or after all of these tasks (and all tasks scheduled in the meantime) are
             * finished.
             *
             * An example would be model-manipulating operations in an application using AngularJS, that need to run
             * `$rootScope.$apply` after all operations are done, but only *once*.
             *
             * @name Heartbeat
             * @constructor
             */
            return {
               registerHeartbeatListener: registerHeartbeatListener,
               onBeforeNext: onBeforeNext,
               onNext: onNext,
               onAfterNext: onAfterNext
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Registers a listener, that is called whenever a heartbeat occurs.
             * It is called after the before and next queues were processed, but before working off the after queue has
             * started.
             * In contrast to the `on*` methods, listeners are not removed after a tick, but will be called again each
             * time a heartbeat occurs.
             * Instead this method returns a function to manually remove the listener again.
             *
             * @param  {Function} listener
             *    the listener to register
             *
             * @return {Function}
             *    a function to remove the listener again
             *
             * @memberof Heartbeat
             */
            function registerHeartbeatListener(listener) {
               heartbeatListeners.push(listener);

               return function () {
                  var index = void 0;
                  while ((index = heartbeatListeners.indexOf(listener)) !== -1) {
                     heartbeatListeners.splice(index, 1);
                  }
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Schedules a function for the next heartbeat.
             * If no heartbeat was triggered yet, it will be requested now.
             *
             * @param {Function} func
             *    a function to schedule for the next tick
             *
             * @memberof Heartbeat
             */
            function onNext(func) {
               if (!beatRequested) {
                  beatRequested = true;
                  nextTick(function () {
                     while (beforeQueue.length) {
                        beforeQueue.shift()();
                     }
                     while (nextQueue.length) {
                        nextQueue.shift()();
                     }
                     heartbeatListeners.forEach(function (listener) {
                        return listener();
                     });
                     if (afterQueue.length) {
                        // run after-queue once all directly resolvable promises are through.
                        timeout(function () {
                           // Ensure that no further event bus deliveries were scheduled
                           if (!beatRequested) {
                              while (afterQueue.length) {
                                 afterQueue.shift()();
                              }
                           }
                        });
                     }
                     beatRequested = false;
                  });
               }
               nextQueue.push(func);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Schedules a function to be called before the next heartbeat occurs.
             * Note that `func` may never be called, if there is no next heartbeat since calling this function won't
             * trigger a new heartbeat.
             *
             * @param {Function} func
             *    a function to call before the next heartbeat
             *
             * @memberof Heartbeat
             */
            function onBeforeNext(func) {
               beforeQueue.push(func);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Schedules a function to be called after the next heartbeat occured.
             * Note that `func` may never be called, if there is no next heartbeat since calling this function won't
             * trigger a new heartbeat.
             *
             * @param {Function} func
             *    a function to call after the next heartbeat
             *
             * @memberof Heartbeat
             */
            function onAfterNext(func) {
               afterQueue.push(func);
            }
         }

         /***/
      },
      /* 22 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__area_helper__ = __webpack_require__(3);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(areaHelper, className, widget) {

            var exports = {
               createController: createController,
               domAttachTo: domAttachTo,
               domDetach: domDetach,
               destroy: destroy
            };
            var layoutNode = void 0;
            var deregister = function deregister() {};

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createController() {}
            // noop


            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function domAttachTo(areaElement, htmlTemplate) {
               if (layoutNode) {
                  areaElement.appendChild(layoutNode);
                  return;
               }

               layoutNode = document.createElement('div');
               layoutNode.id = widget.id;
               layoutNode.className = className;
               layoutNode.innerHTML = htmlTemplate;

               var areas = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__area_helper__["b" /* findWidgetAreas */])(layoutNode);
               var deregisterFuncs = Object.keys(areas).map(function (areaName) {
                  return areaHelper.register(widget.id + '.' + areaName, areas[areaName]);
               });
               deregister = function deregister() {
                  return deregisterFuncs.forEach(function (func) {
                     return func();
                  });
               };

               areaElement.appendChild(layoutNode);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function domDetach() {
               if (layoutNode.parentNode) {
                  layoutNode.parentNode.removeChild(layoutNode);
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function destroy() {
               deregister();
               layoutNode = null;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return exports;
         }

         /***/
      },
      /* 23 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         var senderOptions = { sender: 'AxPageController' };
         var subscriberOptions = { subscriber: 'AxPageController' };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * The LocaleManager initializes the locale(s) and implements changes to them.
          *
          * Before publishing the state of all configured locales, it listens to change requests, allowing
          * widgets and activities (such as a LocaleSwitcherWidget) to influence the state of locales before
          * the navigation is complete.
          */

         function create(eventBus, configuration) {

            var exports = {
               initialize: initialize,
               subscribe: subscribe,
               unsubscribe: unsubscribe
            };

            var configLocales = configuration.ensure('i18n.locales');
            var i18n = void 0;
            var initialized = void 0;
            var unsubscribeFromEventBus = function unsubscribeFromEventBus() {};

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function publish(locale) {
               var event = { locale: locale, languageTag: i18n[locale] };
               return eventBus.publish('didChangeLocale.' + locale, event, senderOptions);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function initialize() {
               initialized = true;
               return Promise.all(Object.keys(configLocales).map(publish));
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function unsubscribe() {
               unsubscribeFromEventBus();
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function subscribe() {
               i18n = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(configLocales);
               initialized = false;

               unsubscribeFromEventBus = eventBus.subscribe('changeLocaleRequest', function (event) {
                  i18n[event.locale] = event.languageTag;
                  if (initialized) {
                     publish(event.locale);
                  }
               }, subscriberOptions);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return exports;
         }

         /***/
      },
      /* 24 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__area_helper__ = __webpack_require__(3);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__layout_widget_adapter__ = __webpack_require__(22);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
               for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                  arr2[i] = arr[i];
               }return arr2;
            } else {
               return Array.from(arr);
            }
         }

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(eventBus, pageLoader, layoutLoader, widgetLoader, localeManager, visibilityManager, pagesCollector) {

            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventBus).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(pageLoader).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(layoutLoader).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(widgetLoader).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(localeManager).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(visibilityManager).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(pagesCollector).isNotNull();

            var pageController = void 0;

            var pageServiceApi = {
               createControllerFor: function createControllerFor(pageElement) {
                  __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(!pageController, 'Cannot create a page controller more than once.');
                  __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(pageElement instanceof HTMLElement, 'A page controller can only be created for a valid DOM element.');

                  pageController = createPageController(pageElement);
                  return pageController;
               },
               controller: function controller() {
                  return pageController;
               }
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createPageController(pageElement) {

               var _areaHelper = null;
               var api = {
                  setupPage: setupPage,
                  tearDownPage: tearDownPage,
                  areaHelper: function areaHelper() {
                     return _areaHelper;
                  }
               };

               /** Delay between sending didLifeCycle and attaching widget templates. */
               var WIDGET_ATTACH_DELAY_MS = 5;
               var COLLABORATOR_ID = 'AxPageController';
               var LIFECYCLE_EVENT = { lifecycleId: 'default' };
               var EVENT_OPTIONS = { sender: COLLABORATOR_ID };
               var DEFAULT_AREAS = [{ name: 'activities', hidden: true }, { name: 'popups' }, { name: 'popovers' }];

               var activeWidgetAdapterWrappers = [];
               var cleanUpLayout = function cleanUpLayout() {};

               pageElement.innerHTML = '';

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function setupPage(pageName) {
                  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(pageName).hasType(String).isNotNull();

                  return pageLoader.load(pageName).then(function (page) {
                     _areaHelper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__area_helper__["a" /* create */])(page);
                     visibilityManager.setAreaHelper(_areaHelper);

                     var layoutPromise = layoutLoader.load(page.layout).then(function (layoutInfo) {
                        cleanUpLayout = renderLayout(pageElement, _areaHelper, layoutInfo);
                     });

                     localeManager.subscribe();
                     var layoutWidget = function layoutWidget(widget) {
                        return layoutWidgetAdapterFor(_areaHelper, widget);
                     };

                     // instantiate controllers wrapped by widget adapters
                     var widgetPromises = widgetsForPage(page).map(function (widget) {
                        return 'layout' in widget ? layoutWidget(widget) : widgetLoader.load(widget);
                     });

                     return Promise.all([].concat(_toConsumableArray(widgetPromises), [layoutPromise])).then(function (results) {
                        return results.slice(0, -1);
                     });
                  }).then(function (widgetAdapterWrappers) {
                     pagesCollector.collectCurrentPage(pageName);
                     activeWidgetAdapterWrappers = widgetAdapterWrappers;
                  }).then(localeManager.initialize).then(function () {
                     return eventBus.publishAndGatherReplies('beginLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS);
                  }).then(visibilityManager.initialize)
                  // Give the widgets (a little) time to settle on the event bus before $digesting and painting:
                  .then(function () {
                     return delay(WIDGET_ATTACH_DELAY_MS);
                  }).then(function () {
                     return _areaHelper.attachWidgets(activeWidgetAdapterWrappers);
                  });
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function tearDownPage() {
                  visibilityManager.unsubscribe();
                  localeManager.unsubscribe();

                  return eventBus.publishAndGatherReplies('endLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS).then(function () {
                     activeWidgetAdapterWrappers.forEach(function (wrapper) {
                        return wrapper.destroy();
                     });
                     activeWidgetAdapterWrappers = [];
                     cleanUpLayout();
                     cleanUpLayout = function cleanUpLayout() {};
                  });
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function widgetsForPage(page) {
                  return Object.keys(page.areas).reduce(function (widgets, areaName) {
                     var areaWidgets = page.areas[areaName];
                     return areaWidgets.reduce(function (widgets, widget) {
                        widget.area = areaName;
                        return [].concat(_toConsumableArray(widgets), [widget]);
                     }, widgets);
                  }, []);
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function layoutWidgetAdapterFor(areaHelper, widget) {
                  return layoutLoader.load(widget.layout).then(function (_ref) {
                     var className = _ref.className,
                         html = _ref.html;

                     var adapter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__layout_widget_adapter__["a" /* create */])(areaHelper, className, {
                        area: widget.area,
                        id: widget.id,
                        path: widget.layout
                     });

                     return {
                        id: widget.id,
                        adapter: adapter,
                        destroy: adapter.destroy,
                        templatePromise: Promise.resolve(html)
                     };
                  });
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function renderLayout(pageElement, areaHelper, layoutInfo) {
                  addClass(pageElement, layoutInfo.className);
                  pageElement.innerHTML = layoutInfo.html;

                  var areas = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__area_helper__["b" /* findWidgetAreas */])(pageElement);
                  var deregisterFuncs = Object.keys(areas).map(function (areaName) {
                     return areaHelper.register(areaName, areas[areaName]);
                  });

                  DEFAULT_AREAS.forEach(function (area) {
                     if (areaHelper.exists(area.name)) {
                        return;
                     }

                     var node = document.createElement('div');
                     // We only set the attribute here for debugging purposes
                     node.setAttribute('ax-widget-area', area.name);
                     if (area.hidden) {
                        node.style.display = 'none';
                     }
                     deregisterFuncs.push(areaHelper.register(area.name, node));
                     pageElement.appendChild(node);
                  });

                  return function () {
                     deregisterFuncs.forEach(function (func) {
                        return func();
                     });
                     removeClass(pageElement, layoutInfo.className);
                  };
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return pageServiceApi;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function addClass(element, cssClass) {
            if (element.classList) {
               element.classList.add(cssClass);
               return;
            }
            element.className += ' ' + cssClass;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function removeClass(element, cssClass) {
            if (element.classList) {
               element.classList.remove(cssClass);
               return;
            }
            element.className = element.className.split(' ').map(function (c) {
               return c.trim();
            }).filter(function (c) {
               return c !== cssClass;
            }).join(' ');
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function delay(ms) {
            return new Promise(function (resolve) {
               return setTimeout(resolve, ms);
            });
         }

         /***/
      },
      /* 25 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         var _slicedToArray = function () {
            function sliceIterator(arr, i) {
               var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
                  for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                     _arr.push(_s.value);if (i && _arr.length === i) break;
                  }
               } catch (err) {
                  _d = true;_e = err;
               } finally {
                  try {
                     if (!_n && _i["return"]) _i["return"]();
                  } finally {
                     if (_d) throw _e;
                  }
               }return _arr;
            }return function (arr, i) {
               if (Array.isArray(arr)) {
                  return arr;
               } else if (Symbol.iterator in Object(arr)) {
                  return sliceIterator(arr, i);
               } else {
                  throw new TypeError("Invalid attempt to destructure non-iterable instance");
               }
            };
         }();

         var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
            return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         };

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Module providing the page.js router factory.
          *
          * @module pagejs_router
          */

         var ROUTE_PARAM_MATCHER = /\/:([^/?(]+)(\(\.\*\)|\?)?/g;
         var TRAILING_SEGMENTS_MATCHER = /\/(_\/)*_?$/;

         /**
          * Creates and returns a new page.js router instance from its dependencies.
          *
          * @param {Object} pagejs
          *    the pagejs router module (or a compatible mock)
          * @param {Browser} browser
          *    the browser, used to determine the document base href
          * @param {Configuration} configuration
          *    the configuration instance, used to lookup router configuration as described above
          *
          * @return {PagejsRouter}
          *    a router instance that will route as soon as `registerRoutes` is invoked
          *
          * @private
          */
         function create(pagejs, browser, configuration) {

            var hashbang = configuration.get('router.pagejs.hashbang', false);
            var queryEnabled = configuration.ensure('router.query.enabled');

            var base = configuration.get('router.base') || fallbackBase(hashbang);
            var origin = originFromLocation(browser.location());
            var absoluteBase = browser.resolve(base, origin);

            /**
             * Router implementation based on [page.js](https://visionmedia.github.io/page.js/).
             *
             * This router allows to register flow patterns in page.js syntax so that their handler is activated when
             * the corresponding URL is entered in the browser. While that alone does not add much to the
             * functionality built into page.js, this router also allows to construct URLs based on a pattern and
             * corresponding substitution parameters. Finally, users can trigger navigation directly.
             *
             * Note that the router supports various configuration options:
             *
             *  - `router.pagejs`: configuration object that is directly passed to page.js (such as `click`,
             *    `popstate`, `dispatch`, `hashbang`). The application is responsible for specifying the required
             *    options, as LaxarJS does not touch the page.js defaults otherwise. Consult the page.js documentation
             *    for more information
             *  - `router.query.enabled`: if `true`, query parameters are automatically transformed into additional
             *    place parameters and vice versa. The default is `false`
             *  - `router.base`: The base path under which to perform routing. If omitted, the document base href is
             *    used
             *
             * Note that this router encodes/decodes certain parameters in a way that is different from page.js:
             *
             *  - when the value `null` is encoded into a URL path segment, it is encoded as `_`
             *  - the value `/` is double-encoded
             *
             * @name PagejsRouter
             * @constructor
             */
            return {
               registerRoutes: registerRoutes,
               navigateTo: navigateTo,
               constructAbsoluteUrl: constructAbsoluteUrl
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Register all routes defined in the given route map, as well as a fallback route that should be used
             * when none of the other routes match. Also causes the initial route to be triggered.
             *
             * @param {Object.<String, Function>} routeMap
             *    a map of routing patterns in page.js syntax to the corresponding handler functions. When invoked,
             *    the handler functions will receive the decoded parameter values for their pattern and (if configured)
             *    from the query string, as a map from string parameter name to string value
             * @param {Function} fallbackHandler
             *    a handler that is invoked when none of the configured routes match. It receives the failed path as
             *    a string argument
             *
             * @memberof PagejsRouter
             */
            function registerRoutes(routeMap, fallbackHandler) {
               pagejs.base(base);
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(routeMap, function (handler, pattern) {
                  pagejs(pattern, function (context) {
                     handler(collectParameters(pattern, context));
                  });
               });
               pagejs('*', function (context) {
                  fallbackHandler(context.path);
               });
               pagejs.start(configuration.get('router.pagejs', {}));
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Change the browser location to a different routable URL, from pattern and parameters. This is also
             * called reverse-routing.
             *
             * @param {String[]} patterns
             *    a list of patterns to choose from. This allows the router to pick the "best" pattern, such as the
             *    pattern containing the largest number of given parameters. This router always picks the first pattern
             *    for now.
             * @param {Object} parameters
             *    parameter values to substitute into the pattern to generate a URL
             * @param {Boolean} [replaceHistory=true]
             *    if `true`, the current history entry is replaced with the new one, otherwise a new entry is pushed.
             *    Useful to express redirects
             *
             * @memberof PagejsRouter
             */
            function navigateTo(patterns, parameters) {
               var replaceHistory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

               var path = constructPath(patterns, parameters);
               (replaceHistory ? pagejs.redirect : pagejs.show)(path);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Create a routable URL, from pattern and parameters. This allows to create link-hrefs without repeating
             * URL patterns throughout the code base.
             *
             * @param {Array<String>} patterns
             *    a list of patterns to choose from. This allows the router to pick the "best" pattern, such as the
             *    pattern containing the largest number of given parameters. This router always picks the first pattern
             *    for now.
             * @param {Object} parameters
             *    parameter values to substitute into the pattern to generate a URL
             * @param {Object} parameterDefaults
             *    only applicable if query strings are enabled by configuration: before a parameter is encoded into the
             *    query string, it is checked against the default. Only values that are different from their default
             *    are kept
             *
             * @return {String} the resulting URL, including schema and host
             *
             * @memberof PagejsRouter
             */
            function constructAbsoluteUrl(patterns, parameters, parameterDefaults) {
               var routingPath = constructPath(patterns, parameters, parameterDefaults);
               return hashbang ? absoluteBase + '#!' + routingPath : '' + absoluteBase + routingPath;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function constructPath(patterns, parameters) {
               var bestPattern = patterns[0];
               var path = bestPattern.replace(ROUTE_PARAM_MATCHER, function ($0, $param, $modifier) {
                  var replacement = encodeSegment(parameters[$param], $modifier === '(.*)');
                  delete parameters[$param];
                  return '/' + replacement;
               }).replace(TRAILING_SEGMENTS_MATCHER, '/');

               if (queryEnabled) {
                  var _ret = function () {
                     var query = [];
                     __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(parameters, function (value, parameterName) {
                        var encodedKey = encodeURIComponent(parameterName);
                        if (value === true) {
                           query.push(encodedKey);
                           return;
                        }
                        if (value === false || value == null) {
                           return;
                        }
                        query.push(encodedKey + '=' + encodeURIComponent(value));
                     });

                     if (query.length) {
                        return {
                           v: path + '?' + query.join('&')
                        };
                     }
                  }();

                  if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
               }

               return path;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function collectParameters(pattern, context) {
               var _context$querystring = context.querystring,
                   querystring = _context$querystring === undefined ? '' : _context$querystring,
                   _context$params = context.params,
                   params = _context$params === undefined ? {} : _context$params;

               var parameters = {};
               if (queryEnabled && querystring.length) {
                  querystring.split('&').map(function (_) {
                     return _.split('=').map(decodeURIComponent);
                  }).forEach(function (_ref) {
                     var _ref2 = _slicedToArray(_ref, 2),
                         key = _ref2[0],
                         value = _ref2[1];

                     parameters[key] = value !== undefined ? value : true;
                  });
               }
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["forEach"])(params, function (value, key) {
                  var isMultiSegment = pattern.indexOf('/:' + key + '(.*)') !== -1;
                  parameters[key] = decodeSegment(value, isMultiSegment);
               });
               return parameters;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Encode a parameter value for use as path segment(s) in routing.
             *
             * Usually, values are simply URL-encoded, but there are special cases:
             *
             *  - `null` and `undefined` are encoded as '_',
             *  - other non-string values are converted to strings before URL encoding,
             *  - slashes ('/') are double-encoded to '%252F', so that page.js ignores them during route matching,
             *  - underscore ('_') is double-encoded to '%255F', to avoid confusion with '_' (null).
             *
             * When decoded, for use in didNavigate events, the original values will be restored, except for:
             *  - non-string input values, which will always be decoded into strings,
             *  - `undefined` values which will be decoded to `null`.
             *
             * @param {*} value
             *   the parameter to encode
             * @param {Boolean} [isMultiSegment=false]
             *   determines if encoded value may contain slashes (true) or if slashes are double-encoded so that the
             *   parameter can always be matched by a single path segment (false)
             * @return {String}
             *   the encoded value, for use as a path segment in URLs
             *
             * @private
             */
            function encodeSegment(value, isMultiSegment) {
               if (value == null) {
                  return '_';
               }
               var urlSegments = encodeURIComponent(value).replace(/_/g, '%255F');
               return isMultiSegment ? urlSegments : urlSegments.replace(/%2F/g, '%252F');
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Decodes a place parameter value from a path segment, to restore it for use in will/didNavigate events.
             *
             * Usually, this reverses the application of {#encodeSegment} after the browser has decoded a URL, except:
             *  - path-segments based on non-string input values, which will always be decoded into strings,
             *  - path-segments based on `undefined` values which will be decoded to `null`.
             *
             * Note that while the browser has already performed URL-decoding, this function replaces `%2F` into `/`
             * and `%5F` to `_`, to be compatible with the double-encoding performaed by {#encodeSegment}.
             *
             * @param {String} value
             *   the encoded parameter segment to decode
             * @param {Boolean} [isMultiSegment=false]
             *   determines if url-encoded slashes in the value were part of the original input (true) or if slashes
             *   in the given value were double-encoded by {#encodeSegment} and need additional decoding (false)
             * @return {String}
             *   the decoded value, for use as a path segment in URLs
             *
             * @private
             */
            function decodeSegment(value, isMultiSegment) {
               if (value === '_' || value == null) {
                  return null;
               }
               var segments = value.replace(/%5F/g, '_');
               return isMultiSegment ? segments : segments.replace(/%2F/g, '/');
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function fallbackBase(hashbang) {
               if (hashbang) {
                  return browser.location().pathname;
               }
               // relies on the HTML `base` element being present
               var documentBase = browser.resolve('.').replace(/\/$/, '');
               return documentBase;
            }
         }

         function originFromLocation(_ref3) {
            var protocol = _ref3.protocol,
                hostname = _ref3.hostname,
                port = _ref3.port;

            return protocol + '://' + hostname + (port ? ':' + port : '');
         }

         /***/
      },
      /* 26 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Module providing the StorageApi factory.
          *
          * Widgets and activities can access their StorageApi instance by requesting the injection
          * {@link widget_services#axStorage axStorage}, or use
          * {@link widget_services#axGlobalStorage axGlobalStorage} for shared items.
          *
          * As such, in most cases only the {@link StorageApi} documentation is relevant.
          *
          * @module storage
          */

         var SESSION = 'sessionStorage';
         var LOCAL = 'localStorage';

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * @param {Object} backend
          *    the K/V store, probably only accepting string values
          * @param {String} namespace
          *    prefix for all keys for namespacing purposes
          *
          * @return {StorageApi}
          *    a storage wrapper to the given backend with `getItem`, `setItem` and `removeItem` methods
          *
          * @private
          */
         function createStorage(backend, namespace) {

            /**
             * Provides a convenient API over the browser's `window.localStorage` and `window.sessionStorage` objects.
             * If a browser doesn't support [web storage](http://www.w3.org/TR/webstorage/), a warning is logged to the
             * `console` (if available) and a non-persistent in-memory store will be used instead. Note that this can
             * for example also happen when using Mozilla Firefox with cookies disabled and as such isn't limited to
             * older browsers.
             *
             * Additionally, in contrast to plain *web storage* access, non-string values will be automatically passed
             * through JSON (de-) serialization on storage or retrieval. All keys will be prepended with a combination
             * of a fixed (`ax.`) and an application-specific namespace (configured using `storagePrefix` with fallback
             * to `name`) to avoid naming clashes with other (LaxarJS) web applications running on the same host and
             * port. All {@link StorageApi} accessor methods should be called without any namespace as it is
             * prepended automatically.
             *
             * @name StorageApi
             * @constructor
             */
            return {
               getItem: getItem,
               setItem: setItem,
               removeItem: removeItem
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Retrieves a `value` by `key` from the store. JSON deserialization will automatically be applied.
             *
             * @param {String} key
             *    the key of the item to retrieve (without namespace prefix)
             *
             * @return {*}
             *    the value or `null` if it doesn't exist in the store
             *
             * @memberof StorageApi
             */
            function getItem(key) {
               var item = backend.getItem(namespace + '.' + key);
               return item && JSON.parse(item);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Sets a `value` for a `key`. The value must be JSON serializable. An existing value will be overwritten.
             *
             * @param {String} key
             *    the key of the item to set (without namespace prefix)
             * @param {*} value
             *    the new value to set
             *
             * @memberof StorageApi
             */
            function setItem(key, value) {
               var nsKey = namespace + '.' + key;
               if (value === undefined) {
                  backend.removeItem(nsKey);
               } else {
                  backend.setItem(nsKey, JSON.stringify(value));
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Removes the value associated with `key` from the store.
             *
             * @param {String} key
             *    the key of the item to remove (without namespace prefix)
             *
             * @memberof StorageApi
             */
            function removeItem(key) {
               backend.removeItem(namespace + '.' + key);
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function getOrFakeBackend(browser, webStorageName) {
            var browserConsole = browser.console();
            var store = window[webStorageName];
            if (store.setItem && store.getItem && store.removeItem) {
               try {
                  var testKey = 'ax_.storage.test';
                  // In iOS Safari Private Browsing, this will fail:
                  store.setItem(testKey, 1);
                  store.removeItem(testKey);
                  return store;
               } catch (e) {
                  // setItem failed: must use fake storage
               }
            }

            if (browserConsole) {
               var method = 'warn' in browserConsole ? 'warn' : 'log';
               browserConsole[method]('window.' + webStorageName + ' not available: Using non-persistent polyfill. \n' + 'Try disabling private browsing or enabling cookies.');
            }

            var backend = {};
            return {
               getItem: function getItem(key) {
                  return backend[key] || null;
               },
               setItem: function setItem(key, val) {
                  backend[key] = val;
               },
               removeItem: function removeItem(key) {
                  if (key in backend) {
                     delete backend[key];
                  }
               }
            };
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function applicationPrefix(configuration) {
            return configuration.get('storagePrefix', configuration.ensure('name'));
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates a new storage factory. In most cases this module will be called without arguments,
          * but having the ability to provide them is useful e.g. for mocking purposes within tests.
          * If the arguments are omitted, an attempt is made to access the native browser WebStorage api.
          * If that fails, storage is only mocked by an in memory map (thus actually unavailable).
          *
          * Developers are free to use polyfills to support cases where local- or session-storage may not be
          * available. Just make sure to initialize the polyfills before this module.
          *
          * @param {Object} configuration
          *    a configuration service instance, to determine a storage prefix based on the configured name
          * @param {Object} browser
          *    the browser api adapter
          * @param {Object} [localStorageBackend]
          *    the backend for local storage. Default is `window.localStorage`
          * @param {Object} [sessionStorageBackend]
          *    the backend for session storage. Default is `window.sessionStorage`
          *
          * @return {StorageFactory}
          *    a new storage factory
          *
          * @private
          */
         function create(configuration, browser, localStorageBackend, sessionStorageBackend) {

            var localBackend = localStorageBackend || getOrFakeBackend(browser, LOCAL);
            var sessionBackend = sessionStorageBackend || getOrFakeBackend(browser, SESSION);
            var prefix = 'ax.' + applicationPrefix(configuration) + '.';

            /**
             * The API returned by the module's `create` function.
             *
             * @name StorageFactory
             * @constructor
             */
            return {

               /**
                * Returns a local storage object for a specific local namespace.
                *
                * @param {String} namespace
                *    the namespace to prepend to keys
                *
                * @return {StorageApi}
                *    the local storage object
                *
                * @memberof StorageFactory
                */
               getLocalStorage: function getLocalStorage(namespace) {
                  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(namespace).hasType(String).isNotNull();

                  return createStorage(localBackend, prefix + namespace);
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Returns a session storage object for a specific local namespace.
                *
                * @param {String} namespace
                *    the namespace to prepend to keys
                *
                * @return {StorageApi}
                *    the session storage object
                *
                * @memberof StorageFactory
                */
               getSessionStorage: function getSessionStorage(namespace) {
                  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(namespace).hasType(String).isNotNull();

                  return createStorage(sessionBackend, prefix + namespace);
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Returns the local storage object for application scoped keys. This is equivalent to
                * `storage.getLocalStorage( 'app' )`.
                *
                * @return {StorageApi}
                *    the application local storage object
                *
                * @memberof StorageFactory
                */
               getApplicationLocalStorage: function getApplicationLocalStorage() {
                  return createStorage(localBackend, prefix + 'app');
               },

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Returns the session storage object for application scoped keys. This is equivalent to
                * `storage.getSessionStorage( 'app' )`.
                *
                * @return {StorageApi}
                *    the application session storage object
                *
                * @memberof StorageFactory
                */
               getApplicationSessionStorage: function getApplicationSessionStorage() {
                  return createStorage(sessionBackend, prefix + 'app');
               }
            };
         }

         /***/
      },
      /* 27 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(1);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         function create(log) {

            var api = {
               started: started
            };

            var idCounter = 0;

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function started(optionalOptions) {
               var timer = new Timer(optionalOptions);
               timer.start();
               return timer;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function Timer(optionalOptions) {
               this.options_ = Object.assign({
                  label: 'timer' + idCounter++
               }, optionalOptions);
               this.startTime_ = null;
               this.stopTime_ = null;
               this.splitTimes_ = [];
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            Timer.prototype.getData = function () {
               return {
                  label: this.options_.label,
                  startTime: this.startTime_,
                  stopTime: this.stopTime_,
                  splitTimes: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["deepClone"])(this.splitTimes_)
               };
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            Timer.prototype.start = function () {
               this.startTime_ = Date.now();
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            Timer.prototype.splitTime = function (optionalLabel) {
               this.splitTimes_.push({
                  time: Date.now(),
                  label: optionalLabel || 'split' + this.splitTimes_.length
               });
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            Timer.prototype.stop = function () {
               this.stopTime_ = Date.now();
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            Timer.prototype.stopAndLog = function (optionalLabel) {
               this.stop();

               var startTime = this.startTime_;
               var endTime = Date.now();
               var label = optionalLabel || 'Timer Stopped';
               this.splitTimes_.push({ label: label, time: endTime });

               var message = [];
               message.push('Timer "', this.options_.label, '": ');
               message.push('start at ', new Date(startTime).toISOString(), ' (client), ');
               message.push(label, ' after ', (endTime - startTime).toFixed(0), 'ms ');
               message.push('(checkpoints: ');
               var intervals = [];
               this.splitTimes_.reduce(function (from, data) {
                  intervals.push('"' + data.label + '"=' + (data.time - from).toFixed(0) + 'ms');
                  return data.time;
               }, startTime);
               message.push(intervals.join(', '), ')');
               log.info(message.join(''));
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return api;
         }

         /***/
      },
      /* 28 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         var senderOptions = { sender: 'AxPageController', deliverToSender: false };
         var subscriberOptions = { subscriber: 'AxPageController' };

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * The visibility event manager initializes and coordinates events for widget area visibility.
          *
          * It subscribes to all visibility changes and propagates them to nested widget areas
          * (if applicable). It is not concerned with the resulting DOM-visibility of individual controls:
          * the `axVisibilityService` takes care of that.
          *
          * @param {EventBus} eventBus
          *    an event bus instance
          * @return {Object}
          *    a function to trigger initialization of the manager and initial widget visibility
          */
         function create(eventBus) {

            var exports = {
               initialize: initialize,
               setAreaHelper: setAreaHelper,
               unsubscribe: unsubscribe
            };

            var areaHelper = void 0;
            var unsubscribeFromAreaVisibilityRequest = function unsubscribeFromAreaVisibilityRequest() {};
            var unsubscribeFromWidgetVisibilityRequest = function unsubscribeFromWidgetVisibilityRequest() {};
            var ROOT = '';

            function setAreaHelper(_) {
               areaHelper = _;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function initialize() {
               // broadcast visibility changes in individual widgets to their nested areas
               unsubscribeFromWidgetVisibilityRequest = eventBus.subscribe('changeWidgetVisibilityRequest', function (event) {
                  var affectedAreas = areaHelper.areasInWidget(event.widget);
                  var will = ['willChangeWidgetVisibility', event.widget, event.visible].join('.');
                  var did = ['didChangeWidgetVisibility', event.widget, event.visible].join('.');

                  eventBus.publish(will, event, senderOptions);

                  Promise.all((affectedAreas || []).map(event.visible ? show : hide)).then(function () {
                     return eventBus.publish(did, event, senderOptions);
                  });
               }, subscriberOptions);

               // broadcast visibility changes in widget areas to their nested areas
               unsubscribeFromAreaVisibilityRequest = eventBus.subscribe('changeAreaVisibilityRequest', function (event) {
                  return initiateAreaChange(event.area, event.visible);
               }, subscriberOptions);

               return implementAreaChange(ROOT, true);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function show(area) {
               return requestAreaChange(area, true);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function hide(area) {
               return requestAreaChange(area, false);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * First, publish a `changeAreaVisibilityRequest` to ask if some widget would like to manage the
             * given area's visibility.
             * If no widget responds, self-issue a will/did-response to notify interested widgets in the area
             * of their new visibility status.
             * In either case, manage the propagation to nested areas and inform the area helper so that it
             * may compile and attach the templates of any newly visible widgets.
             *
             * @param {String} area
             *    the area whose visibility to update
             * @param {Boolean} visible
             *    the new visibility state of the given area, to the best knowledge of the client
             * @return {Promise}
             *    promise that is resolved after the change request is completed
             */
            function requestAreaChange(area, visible) {
               var request = ['changeAreaVisibilityRequest', area].join('.');
               var event = { area: area, visible: visible };
               return eventBus.publishAndGatherReplies(request, event, senderOptions).then(function (responses) {
                  if (responses.length === 0) {
                     // no one took responsibility, so the event manager determines visibility by area nesting
                     return initiateAreaChange(area, visible);
                  }
                  // assume the first 'did'-response to be authoritative:
                  var response = responses[0];
                  return implementAreaChange(area, response.event.visible);
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            // eslint-disable-next-line valid-jsdoc
            /**
             * Set the new visibility state for the given area, then issue requests for the child areas.
             * Inform the area helper so that it may compile and attach the templates of any newly visible
             * widgets.
             */
            function initiateAreaChange(area, visible) {
               var will = ['willChangeAreaVisibility', area, visible].join('.');
               var event = { area: area, visible: visible };
               return eventBus.publish(will, event, senderOptions).then(function () {
                  return implementAreaChange(area, visible);
               }).then(function () {
                  var did = ['didChangeAreaVisibility', area, visible].join('.');
                  return eventBus.publish(did, event, senderOptions);
               });
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function implementAreaChange(ofArea, areaVisible) {
               areaHelper.setVisibility(ofArea, areaVisible);
               var children = areaHelper.areasInArea(ofArea);
               if (!children) {
                  return Promise.resolve();
               }

               return Promise.all(children.map(areaVisible ? show : hide));
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function unsubscribe() {
               unsubscribeFromWidgetVisibilityRequest();
               unsubscribeFromAreaVisibilityRequest();
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            return exports;
         }

         /***/
      },
      /* 29 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__runtime_log__ = __webpack_require__(4);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__widget_services_i18n__ = __webpack_require__(30);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__widget_services_visibility__ = __webpack_require__(31);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Factory for the services that are available to the controller of a widget, regardless of the underlying
          * view framework.
          *
          * @module widget_services
          */

         var INVALID_ID_MATCHER = /[^A-Za-z0-9_.-]/g;
         var ID_SEPARATOR = '-';

         function create(artifactProvider, configuration, controlLoader, globalEventBus, flowService, log, heartbeat, pageService, storage, toolingProviders) {

            var i18nOptions = configuration.ensure('i18n');

            return {
               forWidget: function forWidget(specification, widgetConfiguration, features) {
                  var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
                  var widgetId = widgetConfiguration.id;
                  var widgetName = specification.name;

                  var instances = {
                     /**
                      * Area helper service instance.
                      *
                      * @type {AxAreaHelper}
                      */
                     axAreaHelper: null,

                     /**
                      * widget asset accessor instance.
                      *
                      * @type {AxAssets}
                      */
                     axAssets: null,

                     /**
                      * Interface to the configuration the application was bootstrapped with.
                      *
                      * @type {Configuration}
                      */
                     axConfiguration: null,

                     /**
                      * Context information and tiny service collection.
                      *
                      * @type {AxContext}
                      */
                     axContext: null,

                     /**
                      * The control loader api to provide access to control modules used by a widget.
                      *
                      * @type {ControlLoader}
                      */
                     axControls: null,

                     /**
                      * Event bus instance specifically enriched for a widget instance.
                      *
                      * @type {AxEventBus}
                      */
                     axEventBus: null,

                     /**
                      * The features the widget was configured with.
                      * Its structure depends solely on the schema defined in the widget's descriptor file
                      * (`widget.json`)
                      *
                      * @type {Object}
                      */
                     axFeatures: null,

                     /**
                      * Injection for the flow service.
                      *
                      * @type {FlowService}
                      */
                     axFlowService: null,

                     /**
                      * The global event bus instance of the application.
                      * {@link axEventBus} should always be prefered over this, since for example unsubscribing from
                      * event subscriptions on widget destruction needs be done manually and can lead to severe memory
                      * leaks if omitted.
                      * One valid use case could be an activity, that has permanent knowledge about the application's
                      * state and lifetime, and for example adds an inspector to the event bus.
                      *
                      * @type {EventBus}
                      */
                     axGlobalEventBus: null,

                     /**
                      * The global logger instance.
                      *
                      * @type {Logger}
                      */
                     axGlobalLog: null,

                     /**
                      * The global storage factory.
                      *
                      * @type {StorageFactory}
                      */
                     axGlobalStorage: null,

                     /**
                      * The heartbeat instance.
                      *
                      * @type {Heartbeat}
                      */
                     axHeartbeat: null,

                     /**
                      * I18n api specifically for the widget instance.
                      *
                      * @type {AxI18n}
                      */
                     axI18n: null,

                     /**
                      * A function that generates page wide unique ids based on ids that are unique within the scope
                      * of a widget.
                      *
                      * A common use case is the connection of a `label` HTML element and an `input` element via `for`
                      * and `id` attributes.
                      * For such cases ids should **always** be generated using this service.
                      *
                      * Example:
                      * ```js
                      * widgetDom.querySelector( 'label' ).setAttribute( 'for', axId( 'myField' ) );
                      * widgetDom.querySelector( 'input' ).setAttribute( 'id', axId( 'myField' ) );
                      * ```
                      *
                      * @param {String} localUniqueId
                      *    an identifier that is unique within a widget
                      *
                      * @return {String}
                      *    an identifier that is unique for the current page
                      *
                      * @type {Function}
                      */
                     axId: null,

                     /**
                      * The widget logger instance.
                      * This is basically the same as the {@link #axGlobalLog}, but adds the name of the widget as
                      * prefix and its id as suffix to every log message.
                      *
                      * @type {Logger}
                      */
                     axLog: null,

                     /**
                      * Ready to use storage apis for a widget.
                      * All keys are namespaced by the widget id to limit visibility to this specific instance.
                      *
                      * @type {AxStorage}
                      */
                     axStorage: null,

                     /**
                      * Access to the tooling provider API.
                      * TODO Fix the type (and document toolingProviders)
                      *
                      * @type {*}
                      */
                     axTooling: null,

                     /**
                      * Visibility services for a widget instance.
                      * @type {AxVisibility}
                      */
                     axVisibility: null
                  };

                  var services = Object.assign({}, instances);
                  var releaseHandlers = [];

                  registerServiceFactory('axAreaHelper', function () {
                     return createAreaHelperForWidget(widgetId);
                  }, function () {
                     instances.axAreaHelper.release();
                  });
                  registerServiceFactory('axAssets', function () {
                     return createAssetsServiceForWidget(widgetName);
                  });
                  registerService('axConfiguration', configuration);
                  registerServiceFactory('axContext', function () {
                     return createContextForWidget(widgetConfiguration, widgetId, services);
                  });
                  registerService('axControls', controlLoader);
                  registerServiceFactory('axEventBus', function () {
                     return createEventBusForWidget(services.axGlobalEventBus, widgetName, widgetId);
                  }, function () {
                     instances.axEventBus.release();
                  });
                  registerService('axFeatures', features);
                  registerService('axFlowService', flowService);
                  registerService('axGlobalEventBus', globalEventBus);
                  registerService('axGlobalLog', log);
                  registerService('axGlobalStorage', storage);
                  registerService('axHeartbeat', heartbeat);

                  registerServiceFactory('axI18n', function () {
                     return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__widget_services_i18n__["a" /* create */])(services.axContext, i18nOptions);
                  });
                  registerServiceFactory('axId', function () {
                     return createIdGeneratorForWidget(widgetId);
                  });
                  registerServiceFactory('axLog', function () {
                     return createLoggerForWidget(log, widgetName, widgetId);
                  });
                  registerServiceFactory('axStorage', function () {
                     return createStorageForWidget(storage, widgetId);
                  });
                  registerServiceFactory('axVisibility', function () {
                     return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__widget_services_visibility__["a" /* create */])(services.axContext, services.axAreaHelper);
                  });
                  registerService('axTooling', toolingProviders);

                  return {
                     services: services,
                     releaseServices: function releaseServices() {
                        releaseHandlers.forEach(function (f) {
                           f();
                        });
                     }
                  };

                  /////////////////////////////////////////////////////////////////////////////////////////////////////

                  function registerService(name, instance) {
                     var decorate = decorators[name];
                     instances[name] = services[name] = decorate ? decorate(instance) : instance;
                  }

                  /////////////////////////////////////////////////////////////////////////////////////////////////////

                  function registerServiceFactory(name, factory, optionalRelease) {
                     Object.defineProperty(services, name, {
                        get: function get() {
                           if (!instances[name]) {
                              var decorate = decorators[name];
                              var instance = factory();
                              instances[name] = decorate ? decorate(instance) : instance;
                              if (optionalRelease) {
                                 releaseHandlers.push(optionalRelease);
                              }
                           }
                           return instances[name];
                        }
                     });
                  }
               }
            };

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createContextForWidget(widgetConfiguration, widgetId, services) {

               /**
                * This object encapsulates widget context information and provides access to the most important widget
                * specific service instances.
                * Most commonly this is used when working with
                * [LaxarJS Patterns](https://github.com/LaxarJS/laxar-patterns).
                *
                * @name AxContext
                * @constructor
                */
               return {

                  /**
                   * The event bus instance of the widget. This is the same as {@link #axEventBus}.
                   *
                   * @type {AxEventBus}
                   * @memberof AxContext
                   */
                  eventBus: services.axEventBus,

                  /**
                   * The configured features of the widget. This is the same as {@link #axFeatures}.
                   *
                   * @type {Object}
                   * @memberof AxContext
                   */
                  features: services.axFeatures,

                  /**
                   * The unique id generator function. This is the same as {@link #axId}.
                   *
                   * @type {Function}
                   * @memberof AxContext
                   */
                  id: services.axId,

                  /**
                   * The widget local log instance. This is the same as {@link #axLog}.
                   *
                   * @type {AxLog}
                   * @memberof AxContext
                   */
                  log: services.axLog,

                  /**
                   * Some information regarding the widget instance.
                   *
                   * The following fields are available:
                   * - `area`: full name of the area the widget is located in
                   * - `id`: the unique id of the widget on the page
                   * - `path`: path of the widget that was used to reference it in the according page or composition.
                   *    This is not the actual path on the file system, but most probably an alias known by the used
                   *    module loader.
                   *
                   * @type {Object}
                   * @memberof AxContext
                   */
                  widget: {
                     area: widgetConfiguration.area,
                     id: widgetId,
                     path: widgetConfiguration.widget
                  }
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createAreaHelperForWidget(widgetId) {
               var deregisterFuncs = [];

               /**
                * @name AxAreaHelper
                * @constructor
                */
               return {

                  /**
                   * Query if a given widget area is currently visible by accessing the underlying area status through
                   * the page controller. Can be used to determine the current visibility state of an area without
                   * having to constantly observe visibility events.
                   *
                   * @param {String} fullAreaName
                   *    the global name of the area
                   *
                   * @return {Boolean}
                   *    the current visibility state of the given area
                   */
                  isVisible: function isVisible(fullAreaName) {
                     return pageService.controller().areaHelper().isVisible(fullAreaName);
                  },

                  /**
                   * Looks up the global name of a widget area within a widget, as generated by LaxarJS.
                   * This is the reverse of {@link #AxAreaHelper.localName()}.
                   *
                   * @param {String} localAreaName
                   *    the widget-local name of the area
                   *
                   * @return {String}
                   *    the globally valid name of the area
                   *
                   * @memberof AxAreaHelper
                   */
                  fullName: function fullName(localAreaName) {
                     __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(localAreaName || null).hasType(String).isNotNull();
                     return qualify(localAreaName);
                  },

                  /**
                   * Returns the local part of a global area name.
                   * This is the reverse of {@link #AxAreaHelper.fullName()}.
                   *
                   * @param {String} fullAreaName
                   *    the global name of the area
                   *
                   * @return {String}
                   *    the name of the area as it is known to the widget
                   *
                   * @memberof AxAreaHelper
                   */
                  localName: function localName(fullAreaName) {
                     __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(fullAreaName).hasType(String).isNotNull();
                     return unqualify(fullAreaName);
                  },

                  /**
                   * Registers a DOM element as area of a widget with the area helper.
                   *
                   * @param {String} localAreaName
                   *    the widget-local name of the area
                   * @param {HTMLElement} element
                   *    the element to register as widget area
                   *
                   * @memberof AxAreaHelper
                   */
                  register: function register(localAreaName, element) {
                     __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(localAreaName).hasType(String).isNotNull();
                     __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(element).hasType(Object).isNotNull();
                     var areaHelper = pageService.controller().areaHelper();
                     deregisterFuncs.push(areaHelper.register(qualify(localAreaName), element));
                  },
                  release: function release() {
                     deregisterFuncs.forEach(function (_) {
                        _();
                     });
                  }
               };

               function qualify(localAreaName) {
                  return widgetId + '.' + localAreaName;
               }

               function unqualify(fullAreaName) {
                  return fullAreaName.slice(widgetId.length + 1);
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createAssetsServiceForWidget(widgetName) {
               var widgetArtifacts = artifactProvider.forWidget(widgetName);

               /**
                * _Note:_ This service is a function with the {@link #AxAssets.url()}, {@link #AxAssets.forTheme()} and
                * {@link #AxAssets.urlForTheme()} functions as properties.
                *
                * Resolves an asset located directly in the widget folder or a subfolder of it.
                * Valid assets are all non-binary files like JSON or text files.
                * For binary files there exists the {@link #AxAssets.url} function.
                *
                * Example:
                * ```
                * function Controller( axAssets ) {
                *    axAssets( 'data.json' ).then( fileContent => { ... } );
                * }
                * ```
                *
                * @param {String} name
                *    name of the asset to resolve
                *
                * @return {Promise}
                *    promise for the asset
                *
                * @name AxAssets
                */
               var assetService = function assetService(name) {
                  return widgetArtifacts.asset(name);
               };

               /**
                * Resolves the absolute url to the given asset located directly in the widget folder or a subfolder of
                * it.
                * This can then be safely used in e.g. `video` or `img` tags.
                *
                * Example:
                * ```
                * function Controller( axAssets ) {
                *    axAssets.url( 'tux.jpg' ).then( url => { img.src = url; } );
                * }
                * ```
                *
                * @param  {String} name
                *    name of the asset the url should be returned of
                *
                * @return {Promise}
                *    promise for the url
                *
                * @memberof AxAssets
                */
               assetService.url = function (name) {
                  return widgetArtifacts.assetUrl(name);
               };

               /**
                * Resolves an asset from one of the `*.theme` subfolders of the widget.
                * The folder from which the asset is taken, depends on the selected theme and the availability of the
                * file within that theme (See
                * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for
                * further information on theme asset lookup).
                * Valid assets are all non-binary files like JSON or text files.
                * For binary files there exists the {@link #AxAssets.urlForTheme} function.
                *
                * Example:
                * ```
                * function Controller( axAssets ) {
                *    axAssets.forTheme( 'some-template.html' ).then( template => { ... } );
                * }
                * ```
                *
                * @param {String} name
                *    name of the asset to resolve
                *
                * @return {Promise}
                *    promise for the asset
                *
                * @memberof AxAssets
                */
               assetService.forTheme = function (name) {
                  return widgetArtifacts.assetForTheme(name);
               };

               /**
                * Resolves the absolute url to the given asset from one of the `*.theme` subfolders of the widget.
                * This can then be safely used in e.g. `video` or `img` tags.
                * The folder from which the asset is taken, depends on the selected theme and the availability of the
                * file within that theme (See
                * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for
                * further information on theme asset lookup).
                *
                * Example:
                * ```
                * function Controller( axAssets ) {
                *    axAssets.urlForTheme( 'icon.jpg' ).then( url => { img.src = url; } );
                * }
                * ```
                *
                * @param  {String} name
                *    name of the asset the url should be returned of
                *
                * @return {Promise}
                *    promise for the url
                *
                * @memberof AxAssets
                */
               assetService.urlForTheme = function (name) {
                  return widgetArtifacts.assetUrlForTheme(name);
               };
               return assetService;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createLoggerForWidget(logger, widgetName, widgetId) {
               var newLogger = Object.create(logger);
               newLogger.log = function (level, message) {
                  for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                     rest[_key - 2] = arguments[_key];
                  }

                  return logger.log.apply(logger, [level, enrich(message)].concat(rest, [__WEBPACK_IMPORTED_MODULE_1__runtime_log__["b" /* BLACKBOX */]]));
               };
               Object.keys(logger.levels).map(function (_) {
                  return _.toLowerCase();
               }).forEach(function (method) {
                  newLogger[method] = function (message) {
                     for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                        rest[_key2 - 1] = arguments[_key2];
                     }

                     return logger[method].apply(logger, [enrich(message)].concat(rest, [__WEBPACK_IMPORTED_MODULE_1__runtime_log__["b" /* BLACKBOX */]]));
                  };
               });
               return newLogger;

               function enrich(message) {
                  return widgetName + ': ' + message + ' (widget-id: ' + widgetId + ')';
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createStorageForWidget(storage, widgetId) {
               var namespace = 'widget-' + widgetId;

               /**
                * Ready to use storage API for a single widget instance.
                * All keys are namespaced by the widget id to limit visibility to this specific instance.
                *
                * @name AxStorage
                * @constructor
                */
               return {
                  /**
                   * An instance of the storage api using the persistent `window.localStorage`.
                   *
                   * @type {StorageApi}
                   * @memberof AxStorage
                   */
                  local: storage.getLocalStorage(namespace),

                  /**
                   * An instance of the storage api using the non-persistent `window.sessionStorage`.
                   *
                   * @type {StorageApi}
                   * @memberof AxStorage
                   */
                  session: storage.getSessionStorage(namespace)
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createIdGeneratorForWidget(widgetId) {
               var charCodeOfA = 'a'.charCodeAt(0);
               function fixLetter(l) {
                  // We map invalid characters deterministically to valid lower case letters. Thereby a collision of
                  // two IDs with different invalid characters at the same positions is less likely to occur.
                  return String.fromCharCode(charCodeOfA + l.charCodeAt(0) % 26);
               }

               var prefix = 'ax' + ID_SEPARATOR + widgetId.replace(INVALID_ID_MATCHER, fixLetter) + ID_SEPARATOR;
               return function (localId) {
                  return prefix + ('' + localId).replace(INVALID_ID_MATCHER, fixLetter);
               };
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function createEventBusForWidget(eventBus, widgetName, widgetId) {

               var collaboratorId = 'widget.' + widgetName + '#' + widgetId;
               var inspectorRemoveFunctions = [];
               var unsubscribeFunctions = [];

               /**
                * This is an extension of the global {@link event_bus#EventBus EventBus} by widget specific information
                * and tasks.
                * For example a combination of the widget's name and its id is always used as subscriber and sender
                * id.
                * Hence for example {@link event_bus#EventBus.publishAndGatherReplies EventBus.publishAndGatherReplies}
                * works without passing in any options.
                *
                * Additionally all subscriptions of a widget are removed as soon as the widget itself is destroyed.
                * So in practice a widget will receive no further events after the `endLifecycleRequest` event
                * processing has finished.
                *
                * The documentation for the events bus api can be found {@linkplain event_bus here}.
                *
                * @name AxEventBus
                * @constructor
                */
               return {
                  addInspector: function addInspector(inspector) {
                     return makeAutoRemovable(inspectorRemoveFunctions, eventBus.addInspector(inspector));
                  },
                  unsubscribe: function unsubscribe(subscriber) {
                     return eventBus.unsubscribe(subscriber);
                  },
                  subscribe: function subscribe(eventName, subscriber, optionalOptions) {
                     var options = Object.assign({}, optionalOptions, { subscriber: collaboratorId });
                     var unsubscribe = eventBus.subscribe(eventName, subscriber, options);

                     return makeAutoRemovable(unsubscribeFunctions, unsubscribe);
                  },
                  publish: function publish(eventName, optionalEvent, optionalOptions) {
                     var options = Object.assign({}, optionalOptions, { sender: collaboratorId });
                     return eventBus.publish(eventName, optionalEvent, options);
                  },
                  publishAndGatherReplies: function publishAndGatherReplies(eventName, optionalEvent, optionalOptions) {
                     var options = Object.assign({}, optionalOptions, { sender: collaboratorId });
                     return eventBus.publishAndGatherReplies(eventName, optionalEvent, options);
                  },
                  release: function release() {
                     purgeAutoRemoveRegistries(inspectorRemoveFunctions, unsubscribeFunctions);
                  }
               };

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function makeAutoRemovable(registry, removeFunction) {
                  registry.push(removeFunction);
                  return function () {
                     removeFunction();
                     var index = registry.indexOf(removeFunction);
                     if (index !== -1) {
                        registry.splice(index, 1);
                     }
                  };
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function purgeAutoRemoveRegistries() {
                  for (var _len3 = arguments.length, registries = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                     registries[_key3] = arguments[_key3];
                  }

                  registries.forEach(function (registry) {
                     registry.forEach(function (_) {
                        _();
                     });
                     registry.length = 0;
                  });
               }
            }
         }

         /***/
      },
      /* 30 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(1);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__utilities_string__ = __webpack_require__(2);
         /* harmony export (immutable) */__webpack_exports__["a"] = create;
         var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
            return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
         };

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Factory for i18n widget service instances.
          *
          * @module widget_services_i18n
          */

         var noDeliveryToSender = { deliverToSender: false };

         var primitives = {
            string: true,
            number: true,
            boolean: true
         };

         var normalize = memoize(function (languageTag) {
            return languageTag.toLowerCase().replace(/[_]/g, '-');
         });

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Creates a widget-specific helper for `didChangeLocale` events.
          *
          * The helper automatically observes the any changes to the locale that was configured under the `i18n`
          * feature, and can be asked for localization based on that locale. It also allows to `track` the current
          * language tag for all observed locale topics under the object `i18n.tags`. This object can be used to set
          * up value bindings and/or watchers so that other components may react to locale-changes in a data-driven
          * way.
          *
          * The i18n helper is an {@link AxI18nHandler} for the feauture "i18n" by default, but allows to create
          * handlers for other feature-paths using the `forFeature` method.
          * Using `release`, it is possible to free the eventBus subscription held by an i18n helper instance and by
          * all feature-handlers created by it.
          *
          * @param {AxContext} context
          *    the widget context/scope that the handler should work with. It uses the `eventBus` property there
          *    with which it can do the event handling
          * @param {Object} [optionalOptions]
          *    the fallback language tag to use when no localization is available for a locale's current language tag
          * @param {String} [optionalOptions.fallback]
          *    the fallback language tag to use when no localization is available for a locale's current language tag
          * @param {Boolean} [optionalOptions.strict]
          *    if `true`, localizations are only used if the language tags exactly match the current locale's tag
          *    (after normalizing case and dash/underscore). If `false` (default), specific requests can be satisfied
          *    by general localizations (e.g. a translation for 'en' may be used when missing 'en_GB' was requested).
          *
          * @return {AxI18n}
          *    an i18n instance
          */
         function create(context) {
            var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var features = context.features,
                eventBus = context.eventBus;
            var _optionalOptions$fall = optionalOptions.fallback,
                fallback = _optionalOptions$fall === undefined ? 'en' : _optionalOptions$fall,
                _optionalOptions$stri = optionalOptions.strict,
                strict = _optionalOptions$stri === undefined ? false : _optionalOptions$stri;

            var handlers = {};
            var tags = {};
            var callbacks = {};

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            var release = eventBus.subscribe('didChangeLocale', handleLocaleChange);

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * An i18n instance allows to create {@link #AxI18nHandler} instances for any feature, but is itself also
             * an i18n handler for the feature `i18n`.
             * So if the widget using the {@link widget_services#axI18n axI18n} injection uses the recommended
             * name `i18n` for the localization feature, use this directly with the i18n handler API.
             *
             * @constructor
             * @name AxI18n
             */
            return Object.assign({
               forFeature: forFeature,
               release: release
            }, forFeature('i18n'));

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Creates and returns an i18n handler for the loclization configuration under the given
             * [feature path](../glossary#feature-path).
             * The configuration value is expected to be an object with the key `locale` that is configured with the
             * locale to use in the widget instance.
             *
             * @param {String} featurePath
             *    the feature path localization configuration can be found at
             *
             * @return {AxI18nHandler}
             *    the i18n handler for the given feature path
             *
             * @memberof AxI18n
             */
            function forFeature(featurePath) {
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(featurePath).hasType(String).isNotNull();
               if (handlers[featurePath]) {
                  return handlers[featurePath];
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * @constructor
                * @name AxI18nHandler
                */
               var api = {
                  format: format,
                  languageTag: languageTag,

                  /**
                   * Localize the given internationalized object using the given languageTag.
                   *
                   * If i18n is configured to be _strict_, the currently active language tag is used to lookup a
                   * translation.
                   * If nothing is found, the `languageTag` argument is tried.
                   * If still nothing is found, `undefined` is returned.
                   *
                   * In the case _strict_ is set to `false`, the behavior is the same as in _strict_ mode if an exact
                   * localization is available.
                   * If not, the language tag is successively generalized by stripping off the rightmost sub-tags
                   * until a localization is found.
                   * Eventually, a fallback (default: 'en') is used.
                   * This behavior is especially useful for controls (such as a datepicker), where we cannot
                   * anticipate all required language tags, as they may be app-specific.
                   *
                   * @param {*} i18nValue
                   *    a possibly internationalized value:
                   *    - when passing a primitive value, it is returned as-is
                   *    - when passing an object, the languageTag is used as a key within that object
                   * @param {*} [optionalFallbackValue]
                   *    a value to use if no localization is available for the given language tag
                   * @param {String} [languageTag]
                   *    a language tag to override the current locale tag. Only available in _strict_ mode
                   *
                   * @return {*}
                   *    the localized value if found, the fallback (or `undefined`) otherwise
                   *
                   * @memberof AxI18nHandler
                   * @name localize
                   */
                  localize: strict ? localizeStrict : localizeRelaxed,
                  track: track,
                  update: update,
                  whenLocaleChanged: whenLocaleChanged
               };
               handlers[featurePath] = api;
               var locale = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["path"])(features, featurePath + '.locale');
               __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(locale).hasType(String).isNotNull('axI18n: missing feature-configuration \'' + featurePath + '.locale\' (widget: ' + context.widget.id + ')');
               return api;

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Updates the language tag for the configured locale by emitting the according `changeLocaleRequest`
                * event.
                *
                * @param {String} languageTag
                *    the language tag to propagate
                *
                * @return {Promise}
                *    the promise of the event cycle
                *
                * @memberof AxI18nHandler
                */
               function update(languageTag) {
                  return eventBus.publishAndGatherReplies('changeLocaleRequest.' + locale, {
                     locale: locale,
                     languageTag: languageTag
                  }, noDeliveryToSender).then(function () {
                     tags[locale] = languageTag;
                  });
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Returns the language tag set for the configured locale.
                * If no tag is available, `undefined` is returned.
                *
                * @return {String}
                *    the active language tag or `undefined`
                *
                * @memberof AxI18nHandler
                */
               function languageTag() {
                  return tags[locale];
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * References the current i18n state as an object under the given property of the context.
                *
                * If this method is not used, changes to the locale are still observed by the handler, but not
                * tracked on the context object. Use this to react to locale-changes in a data-driven fashion, for
                * example by using an AngularJS watcher.
                *
                * By default, the i18n state is stored under the feature path used to create this i18n handler ("i18n"
                * for the default handler provided by the "axI18n" widget service injection).
                *
                * The tracking structure stored under the property is an object that has two properties:
                *
                *   - `locale` is the constant locale topic that was configured for the tracked feature
                *   - `tags` is an object mapping all locale names to their normalized current language tag
                *
                * Note that tracked language tags are *normalized*, i.e. converted to lowercase with underscores (`_`)
                * replaced by dashes (`-`).
                *
                * @param {*} [property=featurePath]
                *    name of the context property to store the state under, defaults to the feature path
                *
                * @memberof AxI18nHandler
                */
               function track() {
                  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : featurePath;

                  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["setPath"])(context, property, { locale: locale, tags: tags });
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Format an i18n value, by first localizing it and then applying substitutions.
                *
                * These are equivalent:
                * - `string.format( axI18n.localize( i18nValue ), numericArgs, namedArgs )`
                * - `axI18n.format( i18nValue, numericArgs, namedArgs )`.
                *
                * @param {String} i18nValue
                *    the value to localize and then format
                * @param {Array} [optionalIndexedReplacements]
                *    replacements for any numeric placeholders in the localized value
                * @param {Object} [optionalNamedReplacements]
                *    replacements for any named placeholders in the localized value
                *
                * @return {String}
                *    the formatted string after localization
                *
                * @memberof AxI18nHandler
                */
               function format(i18nValue, optionalIndexedReplacements, optionalNamedReplacements) {
                  var formatString = api.localize(i18nValue);
                  return formatString && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities_string__["format"])(formatString, optionalIndexedReplacements, optionalNamedReplacements);
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               /**
                * Registers a callback that is called whenever the new valid locale was received via event.
                *
                * @param {Function} callback
                *    the function to call on locale change
                *
                * @memberof AxI18nHandler
                */
               function whenLocaleChanged(callback) {
                  callbacks[locale] = callbacks[locale] || [];
                  callbacks[locale].push(callback);
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function localizeRelaxed(i18nValue, optionalFallbackValue) {
                  if (!i18nValue || primitives[typeof i18nValue === 'undefined' ? 'undefined' : _typeof(i18nValue)]) {
                     // value is not internationalized
                     return i18nValue;
                  }

                  var tag = tags[locale];
                  var tagParts = tag ? tag.replace(/-/g, '_').split('_') : [];
                  while (tagParts.length > 0) {
                     var currentLocaleTag = tagParts.join('-');
                     var value = localizeStrict(i18nValue, undefined, currentLocaleTag);
                     if (value !== undefined) {
                        return value;
                     }
                     tagParts.pop();
                  }

                  return fallback ? localizeStrict(i18nValue, optionalFallbackValue, fallback) : optionalFallbackValue;
               }

               ////////////////////////////////////////////////////////////////////////////////////////////////////////

               function localizeStrict(i18nValue, optionalFallbackValue) {
                  var languageTag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : tags[locale];

                  if (!i18nValue || primitives[typeof i18nValue === 'undefined' ? 'undefined' : _typeof(i18nValue)]) {
                     // Value is not i18n
                     return i18nValue;
                  }
                  if (!languageTag) {
                     return optionalFallbackValue;
                  }

                  // Try one direct lookup before scanning the input keys,
                  // assuming that language-tags are written in consistent style.
                  var value = i18nValue[languageTag];
                  if (value !== undefined) {
                     return value;
                  }

                  var lookupKey = normalize(languageTag);
                  var availableTags = Object.keys(i18nValue);
                  var n = availableTags.length;
                  for (var i = 0; i < n; ++i) {
                     var t = availableTags[i];
                     if (normalize(t) === lookupKey) {
                        return i18nValue[t];
                     }
                  }

                  return optionalFallbackValue;
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function handleLocaleChange(_ref) {
               var locale = _ref.locale,
                   languageTag = _ref.languageTag;

               var newTag = normalize(languageTag);
               if (newTag === tags[locale]) {
                  return;
               }
               tags[locale] = newTag;
               callbacks[locale] = callbacks[locale] || [];
               callbacks[locale].forEach(function (f) {
                  f(languageTag);
               });
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function memoize(f) {
            var cache = {};
            return function (key) {
               var value = cache[key];
               if (value === undefined) {
                  value = f(key);
                  cache[key] = value;
               }
               return value;
            };
         }

         /***/
      },
      /* 31 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony export (immutable) */
         __webpack_exports__["a"] = create;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * Factory for i18n widget service instances.
          *
          * @module widget_services_visibility
          */

         // <-- temporary guard until https://github.com/LaxarJS/laxar-dox/issues/21 is fixed
         var noDeliveryToSender = { deliverToSender: false };
         var noOp = function noOp() {};

         /**
          * Creates a widget-specific helper for `didChangeAreaVisibility` events.
          *
          * @param {AxContext} context
          *    the widget context/scope that the handler should work with. It uses the `eventBus` property there
          *    with which it can do the event handling. The visibility handler will set the boolean context property
          *    `isVisible` which can be used to determine the visibility state of the entire widget, e.g. for use in
          *    templates.
          *
          * @param {AxAreaHelper} areaHelper
          *    an area helper to qualify/unqualify names for this widget's areas
          *
          * @return {AxVisibility}
          *    a visibility handler instance
          */
         function create(context, areaHelper) {

            /**
             * @constructor
             * @name AxVisibility
             */
            var api = {
               /**
                * Query the current visibility state.
                *
                * @return {Boolean}
                *    this current visibility status as determined through eventBus events
                *
                * @memberof AxVisibility
                */
               isVisible: function isVisible() {
                  return areaHelper.isVisible(context.widget.area);
               },
               onChange: onChange,
               onHide: onHide,
               onShow: onShow,
               release: release,
               track: track,
               unsubscribe: unsubscribe,
               updateAreaVisibility: updateAreaVisibility,
               updateWidgetVisibility: updateWidgetVisibility
            };

            var isVisible = api.isVisible();

            var eventBus = context.eventBus;

            // state used for tracking the widget visibility

            var trackingProperty = void 0;
            var showListeners = [];
            var hideListeners = [];
            var unsubscribeToChanges = noOp;

            // state used for setting the visibility of the widget and its areas
            var visibilityByArea = {};
            var overrideByArea = {};
            var unsubscribeToAreaRequests = noOp;

            return api;

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Registers a callback to be run when this widget becomes hidden.
             *
             * @param {Function} callback
             *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating
             *    the new visibility state (`false`). The callback will *not* be invoked for the start value (`false`).
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function onHide(callback) {
               hideListeners.push(callback);
               updateChangeSubscription();
               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Registers a callback to be run when this widget becomes visbile.
             *
             * @param {Function} callback
             *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating
             *    the new visibility state (`true`).
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function onShow(callback) {
               showListeners.push(callback);
               updateChangeSubscription();
               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Registers a callback for changes to this widget's visibility.
             *
             * @param {Function} callback
             *    a callback to be invoked whenever the widget visibility changes, with a boolean argument indicating
             *    the new visibility state. The callback will *not* be invoked for the start value (`false`).
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function onChange(callback) {
               showListeners.push(callback);
               hideListeners.push(callback);
               updateChangeSubscription();
               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Starts tracking visibility as a property on the context.
             *
             * Calling this repeatedly with different property names will stop previous properties from receiving
             * further updates, but will not remove previously set tracking properties from the context object.
             *
             * @param {String} property
             *    the name of the context property to maintain
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function track() {
               var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'isVisible';

               trackingProperty = property;
               if (property !== null) {
                  context[property] = isVisible;
               }
               updateChangeSubscription();
               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Triggers a visibility change to the given area. The visibility of the area and its nested areas is
             * re-evaluated over the event bus. Use this to implement e.g. tabbing/accordion/expander widgets.
             *
             * @param {Object} visibilityByLocalArea
             *   A mapping of local area names (without the widget ID) to their new visibility state (Boolean).
             *   Areas that are omitted here are left as is. Areas that have not been set at all just assume the
             *   visibility state of the containing area.
             * @param {Object} [optionalOptions]
             *   Additional options
             * @param {Object} [optionalOptions.overrideContainer]
             *   Allows the specified areas to become visible even if the widget's container area is not visible.
             *
             * @return {Promise}
             *    a promise that is resolved (without a value) when the visibility change was applied
             *
             * @memberof AxVisibility
             */
            function updateAreaVisibility(visibilityByLocalArea) {
               var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
               var _optionalOptions$over = optionalOptions.overrideContainer,
                   overrideContainer = _optionalOptions$over === undefined ? false : _optionalOptions$over;

               if (unsubscribeToAreaRequests === noOp) {
                  var requestEvent = 'changeAreaVisibilityRequest.' + context.widget.id;
                  unsubscribeToAreaRequests = eventBus.subscribe(requestEvent, responder(isAreaVisible));
               }

               var promises = Object.keys(visibilityByLocalArea).map(function (name) {
                  var oldVisible = visibilityByArea[name];
                  var oldOverride = overrideByArea[name];
                  var visible = visibilityByArea[name] = visibilityByLocalArea[name];
                  if (overrideContainer) {
                     overrideByArea[name] = overrideContainer;
                  } else if (oldOverride) {
                     delete overrideByArea[name];
                  }
                  if (oldVisible !== visible || oldOverride !== overrideByArea[name]) {
                     var area = areaHelper.fullName(name);
                     var eventName = 'changeAreaVisibilityRequest.' + area + '.' + visible;
                     return eventBus.publishAndGatherReplies(eventName, { area: area, visible: visible }, noDeliveryToSender);
                  }
                  return Promise.resolve();
               });

               return Promise.all(promises).then(noOp);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /* @private helper for updateAreaVisibility */
            function isAreaVisible(localAreaName, containerVisible) {
               var areaVisible = visibilityByArea[localAreaName];
               if (areaVisible === undefined) {
                  return containerVisible;
               }
               return areaVisible && (containerVisible || overrideByArea[localAreaName]);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Triggers a visibility change the widget itself and all its areas, always overriding its container
             * visibility with the given value.
             * This simplifies implementing popup/popover/layer widgets, which always live in an invisible container
             * area, but need to show/hide all their owned areas.
             *
             * To control the visibility of individual areas, use #updateAreaVisibility
             *
             * @param {Boolean} visible
             *   The new visibility state of the widget.
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function updateWidgetVisibility(visible) {
               var widget = context.widget.id;
               var eventName = 'changeWidgetVisibilityRequest.' + widget + '.' + visible;
               return eventBus.publishAndGatherReplies(eventName, { widget: widget, visible: visible }, noDeliveryToSender);
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            /**
             * Remove the given callback (registered through one or more of the on... methods) from any subscriptions.
             *
             * @param {Function} callback
             *    a callback that was previously registered using any of the `on...` methods.
             *    It will be removed from all registrations. Passing an unknown callback has no effect.
             *
             * @return {AxVisibility}
             *    this instance for chaining
             *
             * @memberof AxVisibility
             */
            function unsubscribe(callback) {
               [showListeners, hideListeners].forEach(remove);

               function remove(array) {
                  var index = array.indexOf(callback);
                  if (index === -1) {
                     return;
                  }
                  array.splice(index, 1);
                  remove(array);
               }
               return api;
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function release() {
               unsubscribeToAreaRequests();
               unsubscribeToChanges();
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function updateChangeSubscription() {
               var needsSubscription = trackingProperty || showListeners.length + hideListeners.length;
               if (needsSubscription && unsubscribeToChanges === noOp) {
                  unsubscribeToChanges = eventBus.subscribe('didChangeAreaVisibility.' + context.widget.area, function (_ref) {
                     var visible = _ref.visible;

                     if (visible === isVisible) {
                        return;
                     }
                     isVisible = visible;
                     if (trackingProperty) {
                        context[trackingProperty] = visible;
                     }
                     (visible ? showListeners : hideListeners).forEach(function (f) {
                        return f(visible);
                     });
                  });
               } else if (unsubscribeToChanges && !needsSubscription) {
                  unsubscribeToChanges();
                  unsubscribeToChanges = noOp;
               }
            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////

            function responder(callback) {
               return function (_ref2) {
                  var area = _ref2.area,
                      containerVisible = _ref2.visible;

                  var visible = callback(areaHelper.localName(area), containerVisible);
                  if (visible === true || visible === false) {
                     var didEvent = 'didChangeAreaVisibility.' + area + '.' + visible;
                     eventBus.publish(didEvent, { area: area, visible: visible }, noDeliveryToSender);
                  }
               };
            }
         }

         /***/
      },
      /* 32 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";
         /* harmony import */
         var __WEBPACK_IMPORTED_MODULE_0__pages__ = __webpack_require__(5);
         /* harmony export (immutable) */__webpack_exports__["a"] = createCollectors;
         /* harmony export (immutable) */__webpack_exports__["b"] = createProviders;
         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */
         /**
          * Accepts and keeps laxarjs application data from various laxarjs services, and makes it available to
          * development tools.
          *
          * This module has an internal API (the `collectors`-service), and an external API (the `providers` service).
          * The collectors service is fed data by the other laxarjs services, while the provider allows external
          * listeners to subscribe to that data's changes, or to retrieve snapshots of it.
          */

         // eslint-disable-next-line valid-jsdoc
         /** Collects inspection data from laxarjs services */
         function createCollectors(configuration, log) {
            return {
               pages: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__pages__["a" /* createCollector */])(configuration, log)
            };
         }

         // eslint-disable-next-line valid-jsdoc
         /** Exposes inspection data from laxarjs services to development tools */
         function createProviders(collectors) {
            return {
               pages: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__pages__["b" /* createProvider */])(collectors.pages)
            };
         }

         /***/
      },
      /* 33 */
      /***/function (module, exports) {

         module.exports = __WEBPACK_EXTERNAL_MODULE_33__;

         /***/
      },
      /* 34 */
      /***/function (module, __webpack_exports__, __webpack_require__) {

         "use strict";

         Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__ = __webpack_require__(0);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__lib_utilities_object__ = __webpack_require__(1);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__lib_utilities_string__ = __webpack_require__(2);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__lib_runtime_services__ = __webpack_require__(7);
         /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__lib_runtime_plain_adapter__ = __webpack_require__(6);
         /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "assert", function () {
            return __WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__["a"];
         });
         /* harmony reexport (module object) */__webpack_require__.d(__webpack_exports__, "object", function () {
            return __WEBPACK_IMPORTED_MODULE_1__lib_utilities_object__;
         });
         /* harmony reexport (module object) */__webpack_require__.d(__webpack_exports__, "string", function () {
            return __WEBPACK_IMPORTED_MODULE_2__lib_utilities_string__;
         });
         /* harmony reexport (module object) */__webpack_require__.d(__webpack_exports__, "plainAdapter", function () {
            return __WEBPACK_IMPORTED_MODULE_4__lib_runtime_plain_adapter__;
         });
         /* harmony export (immutable) */__webpack_exports__["bootstrap"] = bootstrap;
         /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "instances", function () {
            return instances;
         });
         function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
               for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                  arr2[i] = arr[i];
               }return arr2;
            } else {
               return Array.from(arr);
            }
         }

         /**
          * Copyright 2016 aixigo AG
          * Released under the MIT license.
          * http://laxarjs.org/license
          */

         /**
          * The API entry point for boostrapping LaxarJS applications.
          * Also, provides a couple of utilities to deal with assertions, objects and strings.
          *
          * @module laxar
          */

         // Get a reference to the global object of the JS environment.
         // See http://stackoverflow.com/a/6930376 for details
         var global = void 0;
         try {
            // eslint-disable-next-line no-new-func, no-eval
            global = Function('return this')() || (1, eval)('this');
         } catch (_) {
            // if it forbids eval, it's probably a browser
            global = window;
         }

         /**
          * Bootstraps AngularJS on the provided `anchorElement` and sets up the LaxarJS runtime.
          *
          * @param {HTMLElement} anchorElement
          *    the element to insert the page in
          * @param {Object} [optionalOptions]
          *    optional options for bootstrapping
          * @param {Array} optionalOptions.widgetAdapters
          *    widget adapters that are used in this application
          * @param {Object} optionalOptions.configuration
          *    configuration for the laxar application. See http://laxarjs.org/docs/laxar-latest/manuals/configuration/
          *    for further information on available properties
          * @param {Object} optionalOptions.artifacts
          *    an artifact listing for the application, generated by the utilized built tool (e.g. webpack)
          *
          * @memberof laxar
          */
         function bootstrap(anchorElement) {
            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref$widgetAdapters = _ref.widgetAdapters,
                widgetAdapters = _ref$widgetAdapters === undefined ? [] : _ref$widgetAdapters,
                _ref$configuration = _ref.configuration,
                configuration = _ref$configuration === undefined ? {} : _ref$configuration,
                _ref$artifacts = _ref.artifacts,
                artifacts = _ref$artifacts === undefined ? {} : _ref$artifacts;

            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__["a" /* default */])(anchorElement).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__["a" /* default */])(widgetAdapters).hasType(Array).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__["a" /* default */])(artifacts).hasType(Object).isNotNull();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__lib_utilities_assert__["a" /* default */])(configuration).hasType(Object).isNotNull();

            var services = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__lib_runtime_services__["a" /* create */])(configuration, artifacts);

            var log = services.log,
                themeLoader = services.themeLoader,
                widgetLoader = services.widgetLoader;

            themeLoader.load();

            var adapterServices = {
               adapterUtilities: services.adapterUtilities,
               artifactProvider: services.artifactProvider,
               configuration: services.configuration,
               flowService: services.flowService,
               globalEventBus: services.globalEventBus,
               heartbeat: services.heartbeat,
               log: log,
               storage: services.storage,
               tooling: services.toolingProviders,
               // TODO (https://github.com/LaxarJS/laxar/issues/363 and https://github.com/LaxarJS/laxar/issues/397)
               // Fixing the latter issue broke laxar-mocks, since it could no longer access the widget loader.
               // To temporarily fix this, we re-add the widget loader to the exposed services.
               // Nevertheless on the medium /short term we want to be able to load single widgets into the page
               // (the first issue above) and use the api that will be created for this in laxar-mocks.
               widgetLoader: widgetLoader
            };
            var adapterModules = [__WEBPACK_IMPORTED_MODULE_4__lib_runtime_plain_adapter__].concat(_toConsumableArray(widgetAdapters));
            var adapters = bootstrapWidgetAdapters(anchorElement, adapterServices, adapterModules, artifacts);
            widgetLoader.registerWidgetAdapters(adapters);

            announceInstance(services);

            var flowName = services.configuration.get('flow.name');
            if (!flowName) {
               log.trace('LaxarJS Bootstrap complete: No `flow.name` configured.');
               return;
            }

            whenDocumentReady(function () {
               log.trace('LaxarJS loading Flow: ' + flowName);
               services.pageService.createControllerFor(anchorElement);
               services.flowController.loadFlow().then(function () {
                  log.trace('Flow loaded');
               }, function (err) {
                  log.fatal('LaxarJS failed to load flow.');
                  log.fatal('Error [0].\nStack: [1]', err, err && err.stack);
               });
            });
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function whenDocumentReady(callback) {
            if (document.readyState === 'complete') {
               callback();
            } else {
               document.addEventListener('DOMContentLoaded', callback);
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function bootstrapWidgetAdapters(anchorElement, services, adapterModules, artifacts) {
            var log = services.log;

            var adapterModulesByTechnology = {};
            var artifactsByTechnology = {};

            adapterModules.forEach(function (module) {
               adapterModulesByTechnology[module.technology] = module;
               artifactsByTechnology[module.technology] = { widgets: [], controls: [] };
            });

            ['widgets', 'controls'].forEach(function (type) {
               artifacts[type].forEach(function (artifact) {
                  var technology = artifact.descriptor.integration.technology;

                  if (!adapterModulesByTechnology[technology]) {
                     var name = artifact.descriptor.name;

                     log.fatal('Unknown widget technology: [0], required by [1] "[2]"', technology, type, name);
                     return;
                  }
                  artifactsByTechnology[technology][type].push(artifact);
               });
            });

            var adaptersByTechnology = {};
            Object.keys(adapterModulesByTechnology).forEach(function (technology) {
               var adapterModule = adapterModulesByTechnology[technology];
               var artifacts = artifactsByTechnology[technology];
               adaptersByTechnology[technology] = adapterModule.bootstrap(artifacts, services, anchorElement);
            });
            return adaptersByTechnology;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         function announceInstance(services) {
            var configuration = services.configuration,
                log = services.log,
                storage = services.storage;

            if (configuration.get('tooling.enabled')) {
               instances()[configuration.get('name', 'unnamed')] = services;
            }

            var idGenerator = configuration.get('logging.instanceId', simpleId);
            if (idGenerator === false) {
               return;
            }

            var instanceIdStorageKey = 'axLogTags.INST';
            var store = storage.getApplicationSessionStorage();
            var instanceId = store.getItem(instanceIdStorageKey);
            if (!instanceId) {
               instanceId = idGenerator();
               store.setItem(instanceIdStorageKey, instanceId);
            }
            log.addTag('INST', instanceId);

            function simpleId() {
               return '' + Date.now() + Math.floor(Math.random() * 100);
            }
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////

         /**
          * Provide tooling access to LaxarJS services.
          *
          * Each laxar#bootstrap call creates a new set of services such as a logger, global event bus etc. For tools
          * like the laxar-developer-tools-widget, it may be necessary to access these services for a given instance,
          * or for all instances.
          *
          * @param {String} [optionalName]
          *   The configuration name of a LaxarJS instance to inspect.
          *   May be omitted to access all application instances by name.
          *
          * @return {Object}
          *   The tooling services for a specified instance, or for all instances that have tooling enabled.
          *
          * @memberof laxar
          */
         function instances(optionalName) {
            var instances = global.laxarInstances = global.laxarInstances || {};
            return optionalName ? instances[optionalName] : instances;
         }

         //////////////////////////////////////////////////////////////////////////////////////////////////////////////


         /***/
      }])
   );
});
//# sourceMappingURL=laxar.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42)(module)))

/***/ }),

/***/ 140:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_ref(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $async, $refCode;
  if ($schema == '#' || $schema == '#/') {
    if (it.isRoot) {
      $async = it.async;
      $refCode = 'validate';
    } else {
      $async = it.root.schema.$async === true;
      $refCode = 'root.refVal[0]';
    }
  } else {
    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);
    if ($refVal === undefined) {
      var $message = 'can\'t resolve reference ' + $schema + ' from id ' + it.baseId;
      if (it.opts.missingRefs == 'fail') {
        console.log($message);
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || '$ref') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'can\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        if ($breakOnError) {
          out += ' if (false) { ';
        }
      } else if (it.opts.missingRefs == 'ignore') {
        console.log($message);
        if ($breakOnError) {
          out += ' if (true) { ';
        }
      } else {
        var $error = new Error($message);
        $error.missingRef = it.resolve.url(it.baseId, $schema);
        $error.missingSchema = it.resolve.normalizeId(it.resolve.fullPath($error.missingRef));
        throw $error;
      }
    } else if ($refVal.inline) {
      var $it = it.util.copy(it);
      $it.level++;
      var $nextValid = 'valid' + $it.level;
      $it.schema = $refVal.schema;
      $it.schemaPath = '';
      $it.errSchemaPath = $schema;
      var $code = it.validate($it).replace(/validate\.schema/g, $refVal.code);
      out += ' ' + ($code) + ' ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
      }
    } else {
      $async = $refVal.$async === true;
      $refCode = $refVal.code;
    }
  }
  if ($refCode) {
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    if (it.opts.passContext) {
      out += ' ' + ($refCode) + '.call(this, ';
    } else {
      out += ' ' + ($refCode) + '( ';
    }
    out += ' ' + ($data) + ', (dataPath || \'\')';
    if (it.errorPath != '""') {
      out += ' + ' + (it.errorPath);
    }
    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';
    var __callValidate = out;
    out = $$outStack.pop();
    if ($async) {
      if (!it.async) throw new Error('async schema referenced by sync schema');
      out += ' try { ';
      if ($breakOnError) {
        out += 'var ' + ($valid) + ' =';
      }
      out += ' ' + (it.yieldAwait) + ' ' + (__callValidate) + '; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } ';
      if ($breakOnError) {
        out += ' if (' + ($valid) + ') { ';
      }
    } else {
      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';
      if ($breakOnError) {
        out += ' else { ';
      }
    }
  }
  return out;
}


/***/ }),

/***/ 141:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_required(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $vSchema = 'schema' + $lvl;
  if (!$isData) {
    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {
      var $required = [];
      var arr1 = $schema;
      if (arr1) {
        var $property, i1 = -1,
          l1 = arr1.length - 1;
        while (i1 < l1) {
          $property = arr1[i1 += 1];
          var $propertySch = it.schema.properties[$property];
          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {
            $required[$required.length] = $property;
          }
        }
      }
    } else {
      var $required = $schema;
    }
  }
  if ($isData || $required.length) {
    var $currentErrorPath = it.errorPath,
      $loopRequired = $isData || $required.length >= it.opts.loopRequired;
    if ($breakOnError) {
      out += ' var missing' + ($lvl) + '; ';
      if ($loopRequired) {
        if (!$isData) {
          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
        }
        var $i = 'i' + $lvl,
          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
        }
        out += ' var ' + ($valid) + ' = true; ';
        if ($isData) {
          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
        }
        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined; if (!' + ($valid) + ') break; } ';
        if ($isData) {
          out += '  }  ';
        }
        out += '  if (!' + ($valid) + ') {   ';
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        out += ' } else { ';
      } else {
        out += ' if ( ';
        var arr2 = $required;
        if (arr2) {
          var _$property, $i = -1,
            l2 = arr2.length - 1;
          while ($i < l2) {
            _$property = arr2[$i += 1];
            if ($i) {
              out += ' || ';
            }
            var $prop = it.util.getProperty(_$property);
            out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
          }
        }
        out += ') {  ';
        var $propertyPath = 'missing' + $lvl,
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
        }
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        out += ' } else { ';
      }
    } else {
      if ($loopRequired) {
        if (!$isData) {
          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
        }
        var $i = 'i' + $lvl,
          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
        }
        if ($isData) {
          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */
          if (it.createErrors !== false) {
            out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
            if (it.opts.messages !== false) {
              out += ' , message: \'';
              if (it.opts._errorDataPathProperty) {
                out += 'is a required property';
              } else {
                out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
              }
              out += '\' ';
            }
            if (it.opts.verbose) {
              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
            }
            out += ' } ';
          } else {
            out += ' {} ';
          }
          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';
        }
        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined) {  var err =   '; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';
        if ($isData) {
          out += '  }  ';
        }
      } else {
        var arr3 = $required;
        if (arr3) {
          var $reqProperty, i3 = -1,
            l3 = arr3.length - 1;
          while (i3 < l3) {
            $reqProperty = arr3[i3 += 1];
            var $prop = it.util.getProperty($reqProperty),
              $missingProperty = it.util.escapeQuotes($reqProperty);
            if (it.opts._errorDataPathProperty) {
              it.errorPath = it.util.getPath($currentErrorPath, $reqProperty, it.opts.jsonPointers);
            }
            out += ' if (' + ($data) + ($prop) + ' === undefined) {  var err =   '; /* istanbul ignore else */
            if (it.createErrors !== false) {
              out += ' { keyword: \'' + ($errorKeyword || 'required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
              if (it.opts.messages !== false) {
                out += ' , message: \'';
                if (it.opts._errorDataPathProperty) {
                  out += 'is a required property';
                } else {
                  out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
                }
                out += '\' ';
              }
              if (it.opts.verbose) {
                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
              }
              out += ' } ';
            } else {
              out += ' {} ';
            }
            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
          }
        }
      }
    }
    it.errorPath = $currentErrorPath;
  } else if ($breakOnError) {
    out += ' if (true) {';
  }
  return out;
}


/***/ }),

/***/ 142:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_switch(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $ifPassed = 'ifPassed' + it.level,
    $currentBaseId = $it.baseId,
    $shouldContinue;
  out += 'var ' + ($ifPassed) + ';';
  var arr1 = $schema;
  if (arr1) {
    var $sch, $caseIndex = -1,
      l1 = arr1.length - 1;
    while ($caseIndex < l1) {
      $sch = arr1[$caseIndex += 1];
      if ($caseIndex && !$shouldContinue) {
        out += ' if (!' + ($ifPassed) + ') { ';
        $closingBraces += '}';
      }
      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {
        out += ' var ' + ($errs) + ' = errors;   ';
        var $wasComposite = it.compositeRule;
        it.compositeRule = $it.compositeRule = true;
        $it.createErrors = false;
        $it.schema = $sch.if;
        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';
        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
        $it.createErrors = true;
        it.compositeRule = $it.compositeRule = $wasComposite;
        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';
        if (typeof $sch.then == 'boolean') {
          if ($sch.then === false) {
            var $$outStack = $$outStack || [];
            $$outStack.push(out);
            out = ''; /* istanbul ignore else */
            if (it.createErrors !== false) {
              out += ' { keyword: \'' + ($errorKeyword || 'switch') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';
              if (it.opts.messages !== false) {
                out += ' , message: \'should pass "switch" keyword validation\' ';
              }
              if (it.opts.verbose) {
                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
              }
              out += ' } ';
            } else {
              out += ' {} ';
            }
            var __err = out;
            out = $$outStack.pop();
            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
              if (it.async) {
                out += ' throw new ValidationError([' + (__err) + ']); ';
              } else {
                out += ' validate.errors = [' + (__err) + ']; return false; ';
              }
            } else {
              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
            }
          }
          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';
        } else {
          $it.schema = $sch.then;
          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';
          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';
          out += '  ' + (it.validate($it)) + ' ';
          $it.baseId = $currentBaseId;
        }
        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';
      } else {
        out += ' ' + ($ifPassed) + ' = true;  ';
        if (typeof $sch.then == 'boolean') {
          if ($sch.then === false) {
            var $$outStack = $$outStack || [];
            $$outStack.push(out);
            out = ''; /* istanbul ignore else */
            if (it.createErrors !== false) {
              out += ' { keyword: \'' + ($errorKeyword || 'switch') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';
              if (it.opts.messages !== false) {
                out += ' , message: \'should pass "switch" keyword validation\' ';
              }
              if (it.opts.verbose) {
                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
              }
              out += ' } ';
            } else {
              out += ' {} ';
            }
            var __err = out;
            out = $$outStack.pop();
            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
              if (it.async) {
                out += ' throw new ValidationError([' + (__err) + ']); ';
              } else {
                out += ' validate.errors = [' + (__err) + ']; return false; ';
              }
            } else {
              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
            }
          }
          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';
        } else {
          $it.schema = $sch.then;
          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';
          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';
          out += '  ' + (it.validate($it)) + ' ';
          $it.baseId = $currentBaseId;
        }
      }
      $shouldContinue = $sch.continue
    }
  }
  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + '; ';
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ 143:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_uniqueItems(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  if (($schema || $isData) && it.opts.uniqueItems !== false) {
    if ($isData) {
      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'boolean\') ' + ($valid) + ' = false; else { ';
    }
    out += ' var ' + ($valid) + ' = true; if (' + ($data) + '.length > 1) { var i = ' + ($data) + '.length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } } ';
    if ($isData) {
      out += '  }  ';
    }
    out += ' if (!' + ($valid) + ') {   ';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'uniqueItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT have duplicate items (items ## \' + j + \' and \' + i + \' are identical)\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema:  ';
        if ($isData) {
          out += 'validate.schema' + ($schemaPath);
        } else {
          out += '' + ($schema);
        }
        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } ';
    if ($breakOnError) {
      out += ' else { ';
    }
  } else {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  }
  return out;
}


/***/ }),

/***/ 144:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var IDENTIFIER = /^[a-z_$][a-z0-9_$\-]*$/i;
var customRuleCode = __webpack_require__(129);

module.exports = {
  add: addKeyword,
  get: getKeyword,
  remove: removeKeyword
};

/**
 * Define custom keyword
 * @this  Ajv
 * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).
 * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.
 */
function addKeyword(keyword, definition) {
  /* jshint validthis: true */
  /* eslint no-shadow: 0 */
  var RULES = this.RULES;

  if (RULES.keywords[keyword])
    throw new Error('Keyword ' + keyword + ' is already defined');

  if (!IDENTIFIER.test(keyword))
    throw new Error('Keyword ' + keyword + ' is not a valid identifier');

  if (definition) {
    if (definition.macro && definition.valid !== undefined)
      throw new Error('"valid" option cannot be used with macro keywords');

    var dataType = definition.type;
    if (Array.isArray(dataType)) {
      var i, len = dataType.length;
      for (i=0; i<len; i++) checkDataType(dataType[i]);
      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);
    } else {
      if (dataType) checkDataType(dataType);
      _addRule(keyword, dataType, definition);
    }

    var $data = definition.$data === true && this._opts.v5;
    if ($data && !definition.validate)
      throw new Error('$data support: "validate" function is not defined');

    var metaSchema = definition.metaSchema;
    if (metaSchema) {
      if ($data) {
        metaSchema = {
          anyOf: [
            metaSchema,
            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data' }
          ]
        };
      }
      definition.validateSchema = this.compile(metaSchema, true);
    }
  }

  RULES.keywords[keyword] = RULES.all[keyword] = true;


  function _addRule(keyword, dataType, definition) {
    var ruleGroup;
    for (var i=0; i<RULES.length; i++) {
      var rg = RULES[i];
      if (rg.type == dataType) {
        ruleGroup = rg;
        break;
      }
    }

    if (!ruleGroup) {
      ruleGroup = { type: dataType, rules: [] };
      RULES.push(ruleGroup);
    }

    var rule = {
      keyword: keyword,
      definition: definition,
      custom: true,
      code: customRuleCode
    };
    ruleGroup.rules.push(rule);
    RULES.custom[keyword] = rule;
  }


  function checkDataType(dataType) {
    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);
  }
}


/**
 * Get keyword
 * @this  Ajv
 * @param {String} keyword pre-defined or custom keyword.
 * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.
 */
function getKeyword(keyword) {
  /* jshint validthis: true */
  var rule = this.RULES.custom[keyword];
  return rule ? rule.definition : this.RULES.keywords[keyword] || false;
}


/**
 * Remove keyword
 * @this  Ajv
 * @param {String} keyword pre-defined or custom keyword.
 */
function removeKeyword(keyword) {
  /* jshint validthis: true */
  var RULES = this.RULES;
  delete RULES.keywords[keyword];
  delete RULES.all[keyword];
  delete RULES.custom[keyword];
  for (var i=0; i<RULES.length; i++) {
    var rules = RULES[i].rules;
    for (var j=0; j<rules.length; j++) {
      if (rules[j].keyword == keyword) {
        rules.splice(j, 1);
        break;
      }
    }
  }
}


/***/ }),

/***/ 145:
/***/ (function(module, exports) {

module.exports = {
	"id": "http://json-schema.org/draft-04/schema#",
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Core schema meta-schema",
	"definitions": {
		"schemaArray": {
			"type": "array",
			"minItems": 1,
			"items": {
				"$ref": "#"
			}
		},
		"positiveInteger": {
			"type": "integer",
			"minimum": 0
		},
		"positiveIntegerDefault0": {
			"allOf": [
				{
					"$ref": "#/definitions/positiveInteger"
				},
				{
					"default": 0
				}
			]
		},
		"simpleTypes": {
			"enum": [
				"array",
				"boolean",
				"integer",
				"null",
				"number",
				"object",
				"string"
			]
		},
		"stringArray": {
			"type": "array",
			"items": {
				"type": "string"
			},
			"minItems": 1,
			"uniqueItems": true
		}
	},
	"type": "object",
	"properties": {
		"id": {
			"type": "string",
			"format": "uri"
		},
		"$schema": {
			"type": "string",
			"format": "uri"
		},
		"title": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"default": {},
		"multipleOf": {
			"type": "number",
			"minimum": 0,
			"exclusiveMinimum": true
		},
		"maximum": {
			"type": "number"
		},
		"exclusiveMaximum": {
			"type": "boolean",
			"default": false
		},
		"minimum": {
			"type": "number"
		},
		"exclusiveMinimum": {
			"type": "boolean",
			"default": false
		},
		"maxLength": {
			"$ref": "#/definitions/positiveInteger"
		},
		"minLength": {
			"$ref": "#/definitions/positiveIntegerDefault0"
		},
		"pattern": {
			"type": "string",
			"format": "regex"
		},
		"additionalItems": {
			"anyOf": [
				{
					"type": "boolean"
				},
				{
					"$ref": "#"
				}
			],
			"default": {}
		},
		"items": {
			"anyOf": [
				{
					"$ref": "#"
				},
				{
					"$ref": "#/definitions/schemaArray"
				}
			],
			"default": {}
		},
		"maxItems": {
			"$ref": "#/definitions/positiveInteger"
		},
		"minItems": {
			"$ref": "#/definitions/positiveIntegerDefault0"
		},
		"uniqueItems": {
			"type": "boolean",
			"default": false
		},
		"maxProperties": {
			"$ref": "#/definitions/positiveInteger"
		},
		"minProperties": {
			"$ref": "#/definitions/positiveIntegerDefault0"
		},
		"required": {
			"$ref": "#/definitions/stringArray"
		},
		"additionalProperties": {
			"anyOf": [
				{
					"type": "boolean"
				},
				{
					"$ref": "#"
				}
			],
			"default": {}
		},
		"definitions": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"properties": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"patternProperties": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"dependencies": {
			"type": "object",
			"additionalProperties": {
				"anyOf": [
					{
						"$ref": "#"
					},
					{
						"$ref": "#/definitions/stringArray"
					}
				]
			}
		},
		"enum": {
			"type": "array",
			"minItems": 1,
			"uniqueItems": true
		},
		"type": {
			"anyOf": [
				{
					"$ref": "#/definitions/simpleTypes"
				},
				{
					"type": "array",
					"items": {
						"$ref": "#/definitions/simpleTypes"
					},
					"minItems": 1,
					"uniqueItems": true
				}
			]
		},
		"allOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"anyOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"oneOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"not": {
			"$ref": "#"
		}
	},
	"dependencies": {
		"exclusiveMaximum": [
			"maximum"
		],
		"exclusiveMinimum": [
			"minimum"
		]
	},
	"default": {}
};

/***/ }),

/***/ 146:
/***/ (function(module, exports) {

module.exports = {
	"id": "https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#",
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Core schema meta-schema (v5 proposals)",
	"definitions": {
		"schemaArray": {
			"type": "array",
			"minItems": 1,
			"items": {
				"$ref": "#"
			}
		},
		"positiveInteger": {
			"type": "integer",
			"minimum": 0
		},
		"positiveIntegerDefault0": {
			"allOf": [
				{
					"$ref": "#/definitions/positiveInteger"
				},
				{
					"default": 0
				}
			]
		},
		"simpleTypes": {
			"enum": [
				"array",
				"boolean",
				"integer",
				"null",
				"number",
				"object",
				"string"
			]
		},
		"stringArray": {
			"type": "array",
			"items": {
				"type": "string"
			},
			"minItems": 1,
			"uniqueItems": true
		},
		"$data": {
			"type": "object",
			"required": [
				"$data"
			],
			"properties": {
				"$data": {
					"type": "string",
					"anyOf": [
						{
							"format": "relative-json-pointer"
						},
						{
							"format": "json-pointer"
						}
					]
				}
			},
			"additionalProperties": false
		}
	},
	"type": "object",
	"properties": {
		"id": {
			"type": "string",
			"format": "uri"
		},
		"$schema": {
			"type": "string",
			"format": "uri"
		},
		"title": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"default": {},
		"multipleOf": {
			"anyOf": [
				{
					"type": "number",
					"minimum": 0,
					"exclusiveMinimum": true
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"maximum": {
			"anyOf": [
				{
					"type": "number"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"exclusiveMaximum": {
			"anyOf": [
				{
					"type": "boolean",
					"default": false
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"minimum": {
			"anyOf": [
				{
					"type": "number"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"exclusiveMinimum": {
			"anyOf": [
				{
					"type": "boolean",
					"default": false
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"maxLength": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveInteger"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"minLength": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveIntegerDefault0"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"pattern": {
			"anyOf": [
				{
					"type": "string",
					"format": "regex"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"additionalItems": {
			"anyOf": [
				{
					"type": "boolean"
				},
				{
					"$ref": "#"
				},
				{
					"$ref": "#/definitions/$data"
				}
			],
			"default": {}
		},
		"items": {
			"anyOf": [
				{
					"$ref": "#"
				},
				{
					"$ref": "#/definitions/schemaArray"
				}
			],
			"default": {}
		},
		"maxItems": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveInteger"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"minItems": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveIntegerDefault0"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"uniqueItems": {
			"anyOf": [
				{
					"type": "boolean",
					"default": false
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"maxProperties": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveInteger"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"minProperties": {
			"anyOf": [
				{
					"$ref": "#/definitions/positiveIntegerDefault0"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"required": {
			"anyOf": [
				{
					"$ref": "#/definitions/stringArray"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"additionalProperties": {
			"anyOf": [
				{
					"type": "boolean"
				},
				{
					"$ref": "#"
				},
				{
					"$ref": "#/definitions/$data"
				}
			],
			"default": {}
		},
		"definitions": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"properties": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"patternProperties": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#"
			},
			"default": {}
		},
		"dependencies": {
			"type": "object",
			"additionalProperties": {
				"anyOf": [
					{
						"$ref": "#"
					},
					{
						"$ref": "#/definitions/stringArray"
					}
				]
			}
		},
		"enum": {
			"anyOf": [
				{
					"type": "array",
					"minItems": 1,
					"uniqueItems": true
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"type": {
			"anyOf": [
				{
					"$ref": "#/definitions/simpleTypes"
				},
				{
					"type": "array",
					"items": {
						"$ref": "#/definitions/simpleTypes"
					},
					"minItems": 1,
					"uniqueItems": true
				}
			]
		},
		"allOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"anyOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"oneOf": {
			"$ref": "#/definitions/schemaArray"
		},
		"not": {
			"$ref": "#"
		},
		"format": {
			"anyOf": [
				{
					"type": "string"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"formatMaximum": {
			"anyOf": [
				{
					"type": "string"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"formatMinimum": {
			"anyOf": [
				{
					"type": "string"
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"formatExclusiveMaximum": {
			"anyOf": [
				{
					"type": "boolean",
					"default": false
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"formatExclusiveMinimum": {
			"anyOf": [
				{
					"type": "boolean",
					"default": false
				},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"constant": {
			"anyOf": [
				{},
				{
					"$ref": "#/definitions/$data"
				}
			]
		},
		"contains": {
			"$ref": "#"
		},
		"patternGroups": {
			"type": "object",
			"additionalProperties": {
				"type": "object",
				"required": [
					"schema"
				],
				"properties": {
					"maximum": {
						"anyOf": [
							{
								"$ref": "#/definitions/positiveInteger"
							},
							{
								"$ref": "#/definitions/$data"
							}
						]
					},
					"minimum": {
						"anyOf": [
							{
								"$ref": "#/definitions/positiveIntegerDefault0"
							},
							{
								"$ref": "#/definitions/$data"
							}
						]
					},
					"schema": {
						"$ref": "#"
					}
				},
				"additionalProperties": false
			},
			"default": {}
		},
		"switch": {
			"type": "array",
			"items": {
				"required": [
					"then"
				],
				"properties": {
					"if": {
						"$ref": "#"
					},
					"then": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"$ref": "#"
							}
						]
					},
					"continue": {
						"type": "boolean"
					}
				},
				"additionalProperties": false,
				"dependencies": {
					"continue": [
						"if"
					]
				}
			}
		}
	},
	"dependencies": {
		"exclusiveMaximum": [
			"maximum"
		],
		"exclusiveMinimum": [
			"minimum"
		],
		"formatMaximum": [
			"format"
		],
		"formatMinimum": [
			"format"
		],
		"formatExclusiveMaximum": [
			"formatMaximum"
		],
		"formatExclusiveMinimum": [
			"formatMinimum"
		]
	},
	"default": {}
};

/***/ }),

/***/ 147:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var META_SCHEMA_ID = 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json';

module.exports = {
  enable: enableV5,
  META_SCHEMA_ID: META_SCHEMA_ID
};


function enableV5(ajv) {
  var inlineFunctions = {
    'switch': __webpack_require__(142),
    'constant': __webpack_require__(128),
    '_formatLimit': __webpack_require__(125),
    'patternRequired': __webpack_require__(138)
  };

  if (ajv._opts.meta !== false) {
    var metaSchema = __webpack_require__(146);
    ajv.addMetaSchema(metaSchema, META_SCHEMA_ID);
  }
  _addKeyword('constant');
  ajv.addKeyword('contains', { type: 'array', macro: containsMacro });

  _addKeyword('formatMaximum', 'string', inlineFunctions._formatLimit);
  _addKeyword('formatMinimum', 'string', inlineFunctions._formatLimit);
  ajv.addKeyword('formatExclusiveMaximum');
  ajv.addKeyword('formatExclusiveMinimum');

  ajv.addKeyword('patternGroups'); // implemented in properties.jst
  _addKeyword('patternRequired', 'object');
  _addKeyword('switch');


  function _addKeyword(keyword, types, inlineFunc) {
    var definition = {
      inline: inlineFunc || inlineFunctions[keyword],
      statements: true,
      errors: 'full'
    };
    if (types) definition.type = types;
    ajv.addKeyword(keyword, definition);
  }
}


function containsMacro(schema) {
  return {
    not: { items: { not: schema } }
  };
}


/***/ }),

/***/ 148:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_testing_widget_services_assets_mock__ = __webpack_require__(158);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__lib_testing_widget_services_assets_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_testing_widget_services_area_helper_mock__ = __webpack_require__(78);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__lib_testing_widget_services_area_helper_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_testing_configuration_mock__ = __webpack_require__(35);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_2__lib_testing_configuration_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_testing_event_bus_mock__ = __webpack_require__(155);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_3__lib_testing_event_bus_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_testing_flow_service_mock__ = __webpack_require__(156);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_4__lib_testing_flow_service_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_testing_storage_mock__ = __webpack_require__(77);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_5__lib_testing_storage_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_testing_heartbeat_mock__ = __webpack_require__(157);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_6__lib_testing_heartbeat_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_testing_widget_services_i18n_mock__ = __webpack_require__(159);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_7__lib_testing_widget_services_i18n_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__lib_testing_log_mock__ = __webpack_require__(76);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_8__lib_testing_log_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__lib_testing_widget_services_storage_mock__ = __webpack_require__(160);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_9__lib_testing_widget_services_storage_mock__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__lib_testing_widget_services_visibility_mock__ = __webpack_require__(161);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return __WEBPACK_IMPORTED_MODULE_10__lib_testing_widget_services_visibility_mock__["a"]; });
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Mock factories that help to tests widgets.
 * These mocks are automatically provided in place of the regular LaxarJS widget services when using
 * laxar-mocks for widget testing.
 *
 * @module laxar-widget-service-mocks
 */

/**
 * Returns a mock of the `axAssets` injection for tests, to avoid making actual `fetch` calls.
 *
 * For details, see {@link widget_services_assets_mock#create}.
 *
 * @memberof laxar-widget-service-mocks
 * @name createAxAssetsMocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axAreaHelper` injection for tests.
 *
 * For details, see {@link widget_services_area_helper_mock#create}.
 *
 * @memberof laxar-widget-service-mocks
 * @name createAxAreaHelperMock
 * @type {Function}
 */


/**
 * Returns a mock of the `axConfiguration` injection for tests.
 *
 * For details, see {@link configuration_mock#create}.
 *
 * @name createAxConfigurationMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axEventBus` injection for tests.
 *
 * For details, see {@link event_bus_mock#create}.
 *
 * @name createAxEventBusMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axFlowService` injection for tests.
 *
 * For details, see {@link flow_service_mock#create}.
 *
 * @name createAxFlowServiceMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axGlobalStorage` injection for tests.
 *
 * For details, see {@link storage_mock#create}.
 *
 * @name createAxGlobalStorageMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axHeartbeat` injection for tests.
 *
 * For details, see {@link heartbeat_mock#create}.
 *
 * @name createAxHeartbeatMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axI18n` injection for tests.
 *
 * For details, see {@link i18n_mock#create}.
 *
 * @name createAxI18nMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axLog` injection for tests.
 *
 * For details, see {@link log_mock#create}.
 *
 * @name createAxLogMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axStorage` injection for tests.
 *
 * For details, see {@link widget_services_storage_mock#create}.
 *
 * @name createAxStorageMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/**
 * Returns a mock of the `axVisibility` injection for tests.
 *
 * For details, see {@link widget_services_visibility_mock#create}.
 *
 * @name createAxVisibilityMock
 * @memberof laxar-widget-service-mocks
 * @type {Function}
 */


/***/ }),

/***/ 149:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * Module providing the Browser factory.
 *
 * Provides abstractions for browser APIs used internally by LaxarJS, which might need a different
 * implementation in a server-side environment, or for testing.
 * This service is internal to LaxarJS and not available to widgets and activities.
 *
 * @module browser
 */

/**
 * Create a browser abstraction environment.
 *
 * @return {Browser}
 *    a fresh browser instance
 *
 * @private
 */
function create() {

   // for the MSIE `resolve`-workaround, cache the temporary HTML document
   var resolveDoc = void 0;
   var resolveDocBase = void 0;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * A brower mostly abstracts over the location-related DOM window APIs, and provides a console wrapper.
    * Since it is internal to LaxarJS, only relevant APIs are included.
    *
    * @name Browser
    * @constructor
    */
   return {
      /**
      * Calculates an absolute URL from a (relative) URL, and an optional base URL.
      *
      * If no base URL is given, the `document.baseURI` is used instead. The given base URL may also be
      * relative, in which case it is resolved against the `document.baseURI` before resolving the first URL.
      *
      * For browser environments that do not support the `new URL( url, baseUrl )` constructor for resolving
      * URLs or that do not support `document.baseURI`, fallback mechanisms are used.
      *
      * @param {String} url
      *    the URL to resolve
      * @param {String} baseUrl
      *    the base to resolve from
      *
      * @return {String}
      *    an absolute URL based on the given URL
      *
      * @type {Function}
      * @memberof Browser
      */
      resolve: selectResolver(),

      /**
       * Provides easily mocked access to `window.location`
       *
       * @return {Location}
       *    the current (window's) DOM location
       *
       * @type {Function}
       * @memberof Browser
       */
      location: function location() {
         return window.location;
      },

      /**
       * Provides easily mocked access to `window.fetch` or a suitable polyfill:
       *
       * @param {String|Request} input
       *    the URL to fetch or the request to perform
       * @param {Object} [init]
       *    additional options, described here in more detail:
       *    https://developer.mozilla.org/en-US/docs/Web/API/Globalfetch/fetch#Parameters
       *
       * @return {Promise<Response>}
       *    the resulting promise
       *
       * @type {Function}
       * @memberof Browser
       */
      fetch: function fetch(input, init) {
         return window.fetch(input, init);
      },

      /**
       * Provides easily mocked access to `window.console`:
       *
       * @return {Console}
       *    the browser console promise
       *
       * @type {Function}
       * @memberof Browser
       */
      console: function console() {
         return window.console;
      }
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   // perform the exception-based feature-detect only once (for performance, and to be nice to debugger users)
   function selectResolver() {
      try {
         var href = window.location.href;

         return new URL('', href).href === href ? resolveUsingUrl : resolveUsingLink;
      } catch (e) {
         return resolveUsingLink;
      }
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   // Resolve using the DOM URL API (Chrome, Firefox, Safari, MS Edge)
   function resolveUsingUrl(url, baseUrl) {
      var absoluteBaseUrl = baseUrl ? abs(baseUrl) : document.baseURI || abs('.');
      return new URL(url, absoluteBaseUrl).href;

      function abs(url) {
         return new URL(url, document.baseURI || resolveUsingLink('.'));
      }
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   // Resolve using the a-tag fallback (MSIE)
   function resolveUsingLink(url, baseUrl) {
      var absoluteBaseUrl = abs(baseUrl);
      if (!resolveDoc) {
         resolveDoc = document.implementation.createHTMLDocument('');
         resolveDocBase = resolveDoc.createElement('base');
         resolveDoc.head.appendChild(resolveDocBase);
      }
      resolveDocBase.href = absoluteBaseUrl;
      return abs(url, resolveDoc);

      function abs(url) {
         var baseDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;

         var a = baseDocument.createElement('a');
         // MSIE does not process empty URLs correctly (http://stackoverflow.com/a/7966835)
         a.href = url || '#';
         return url ? a.href : a.href.slice(0, -1);
      }
   }
}

/***/ }),

/***/ 15:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["c"] = options;
/* harmony export (immutable) */ __webpack_exports__["b"] = forEach;
/* harmony export (immutable) */ __webpack_exports__["e"] = path;
/* harmony export (immutable) */ __webpack_exports__["d"] = setPath;
/* harmony export (immutable) */ __webpack_exports__["f"] = deepClone;
/* harmony export (immutable) */ __webpack_exports__["a"] = tabulate;
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Utilities for dealing with objects.
 *
 * When requiring `laxar`, it is available as `laxar.object`.
 *
 * @module object
 */

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Returns all properties from `obj` with missing properties completed from `defaults`. If `obj` is `null`
 * or `undefined`, an empty object is automatically created. `obj` and `defaults` are not modified by this
 * function. This is very useful for optional map arguments, resembling some kind of configuration.
 *
 * Example:
 * ```js
 * object.options( { validate: true }, {
 *    validate: false,
 *    highlight: true
 * } );
 * // =>
 * // {
 * //    validate: true,
 * //    highlight: true
 * // }
 * ```
 *
 * @param {Object} obj
 *    the options object to use as source, may be `null` or `undefined`
 * @param {Object} defaults
 *    the defaults to take missing properties from
 *
 * @return {Object}
 *    the completed options object
 */
function options(obj, defaults) {
   return Object.assign({}, defaults, obj);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Iterates over the keys of an object and calls the given iterator function for each entry.
 * On each iteration the iterator function is passed the `value`, the `key` and the complete `object` as
 * arguments.
 * If `object` is an array, the native `Array.prototype.forEach` function is called.
 * In this case the keys are the indices of the array.
 *
 * Example:
 * ```
 * object.forEach( { name: Peter, age: 12 }, ( value, key ) => {
 *    console.log( `${key} = ${value}\n` );
 * });
 * // =>
 * // name = Peter
 * // age = 12
 * ```
 *
 * @param {Object} object
 *    the object to run the iterator function on
 * @param {Function} iteratorFunction
 *    the iterator function to run on each key-value pair
 */
function forEach(object, iteratorFunction) {
   if (Array.isArray(object)) {
      object.forEach(iteratorFunction);
      return;
   }

   for (var key in object) {
      if (hasOwnProperty(object, key)) {
         iteratorFunction(object[key], key, object);
      }
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Finds a property in a nested object structure by a given path. A path is a string of keys, separated
 * by a dot from each other, used to traverse that object and find the value of interest. An additional
 * default is returned, if otherwise the value would yield `undefined`.
 *
 * Note that `path()` must only be used in situations where all path segments are also valid
 * JavaScript identifiers, and should never be used with user-specified paths:
 *
 *  - there is no mechanism to escape '.' in path segments; a dot always separates keys,
 *  - an empty string as a path segment will abort processing and return the entire sub-object under the
 *    respective position. For historical reasons, the path interpretation differs from that performed by
 *    {@link #setPath()}.
 *
 *
 * Example:
 *
 * ```js
 * object.path( { one: { two: 3 } }, 'one.two' ); // => 3
 * object.path( { one: { two: 3 } }, 'one.three' ); // => undefined
 * object.path( { one: { two: 3 } }, 'one.three', 42 ); // => 42
 * object.path( { one: { two: 3 } }, 'one.' ); // => { two: 3 }
 * object.path( { one: { two: 3 } }, '' ); // => { one: { two: 3 } }
 * object.path( { one: { two: 3 } }, '.' ); // => { one: { two: 3 } }
 * ```
 *
 * @param {Object} obj
 *    the object to traverse
 * @param {String} thePath
 *    the path to search for
 * @param {*} [optionalDefault]
 *    the value to return instead of `undefined` if nothing is found
 *
 * @return {*}
 *    the value at the given path
 */
function path(obj, thePath) {
   var optionalDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

   var pathArr = thePath.split('.');
   var node = obj;
   var key = pathArr.shift();

   while (key) {
      if (node && (typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object' && hasOwnProperty(node, key)) {
         node = node[key];
         key = pathArr.shift();
      } else {
         return optionalDefault;
      }
   }

   return node;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Sets a property in a nested object structure at a given path to a given value. A path is a string of
 * keys, separated by a dot from each other, used to traverse that object and find the place where the
 * value should be set. Any missing subtrees along the path are created.
 *
 * Note that `setPath()` must only be used in situations where all path segments are also valid
 * JavaScript identifiers, and should never be used with user-specified paths:
 *
 *  - there is no mechanism to escape '.' in path segments; a dot will always create separate keys,
 *  - an empty string as a path segment will create an empty string key in the object graph where missing.
 *    For historical reasons, this path interpretation differs from that performed by #path (see there).
 *
 *
 * Example:
 *
 * ```js
 * object.setPath( {}, 'name.first', 'Peter' ); // => { name: { first: 'Peter' } }
 * object.setPath( {}, 'pets.1', 'Hamster' ); // => { pets: [ null, 'Hamster' ] }
 * object.setPath( {}, '', 'Hamster' ); // => { '': 'Hamster' } }
 * object.setPath( {}, '.', 'Hamster' ); // => { '': { '': 'Hamster' } } }
 * ```
 *
 * @param {Object} obj
 *    the object to modify
 * @param {String} path
 *    the path to set a value at
 * @param {*} value
 *    the value to set at the given path
 *
 * @return {*}
 *    the full object (for chaining)
 */
function setPath(obj, path, value) {
   var node = obj;
   var pathArr = path.split('.');
   var last = pathArr.pop();

   pathArr.forEach(function (pathFragment, index) {
      if (!node[pathFragment] || _typeof(node[pathFragment]) !== 'object') {
         var lookAheadFragment = pathArr[index + 1] || last;
         if (lookAheadFragment.match(/^[0-9]+$/)) {
            node[pathFragment] = [];
            fillArrayWithNull(node[pathFragment], parseInt(lookAheadFragment, 10));
         } else {
            node[pathFragment] = {};
         }
      }

      node = node[pathFragment];
   });

   if (Array.isArray(node) && last > node.length) {
      fillArrayWithNull(node, last);
   }

   node[last] = value;

   return obj;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Returns a deep clone of the given object. Note that the current implementation is intended to be used
 * for simple object literals only. There is no guarantee that cloning objects instantiated via
 * constructor function works and cyclic references will lead to endless recursion.
 *
 * @param {*} object
 *    the object to clone
 *
 * @return {*}
 *    the clone
 */
function deepClone(object) {
   if (!object || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) !== 'object') {
      return object;
   }

   // Using plain for-loops here for performance-reasons.
   var result = void 0;
   if (Array.isArray(object)) {
      result = [];
      for (var i = 0, length = object.length; i < length; ++i) {
         result[i] = deepClone(object[i]);
      }
   } else {
      result = {};
      for (var key in object) {
         if (hasOwnProperty(object, key)) {
            result[key] = deepClone(object[key]);
         }
      }
   }

   return result;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Creates a lookup table from a function and a list of inputs to the function.
 *
 * @param {Function} fn
 *    The callback to apply to all inputs
 * @param {String[]|Number[]|Boolean[]} keys
 *    The keys for the lookup table, and inputs to the function.
 *
 * @return {Object}
 *    An object mapping the given keys to their values under `fn`.
 */
function tabulate(fn, keys) {
   return keys.reduce(function (table, k) {
      table[k] = fn(k);return table;
   }, {});
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

// eslint-disable-next-line valid-jsdoc
/**
 * Sets all entries of the given array to `null`.
 *
 * @private
 */
function fillArrayWithNull(arr, toIndex) {
   for (var i = arr.length; i < toIndex; ++i) {
      arr[i] = null;
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var hasOwnProp = Object.prototype.hasOwnProperty;
// eslint-disable-next-line valid-jsdoc
/**
 * @private
 */
function hasOwnProperty(object, property) {
   return hasOwnProp.call(object, property);
}

/***/ }),

/***/ 150:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(15);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * Module providing the EventBus factory.
 *
 * To use the EventBus in a widget, request the {@link widget_services#axEventBus axEventBus} injection, or
 * use the `eventBus` property on the {@link widget_services#axContext axContext} injection.
 * In some cases, it may be useful to inject the global EventBus instance backing all widget instances of the
 * same bootstrapping context, by requesting the {@link widget_services#axGlobalEventBus axGlobalEventBus}
 * injection.
 *
 * @module event_bus
 */



var WILDCARD = '*';
var SUBSCRIBER_FIELD = '.';

var TOPIC_SEPARATOR = '.';
var SUB_TOPIC_SEPARATOR = '-';
var REQUEST_MATCHER = /^([^.])([^.]*)Request(\..+)?$/;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * @param {Object} configuration
 *    configuration for the event bus instance.
 *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.
 * @param {Object} log
 *    a logger instance for error reporting
 * @param {Function} nextTick
 *    a next tick function like `process.nextTick`, `setImmediate` or AngularJS' `$timeout`
 * @param {Function} timeoutFunction
 *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`
 * @param {Function} [errorHandler]
 *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.
 *
 * @constructor
 * @private
 */
function EventBus(configuration, log, nextTick, timeoutFunction) {
   var errorHandler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : createLogErrorHandler(log);

   this.nextTick_ = function (f) {
      return nextTick(f);
   };
   this.timeoutFunction_ = function (f, ms) {
      return timeoutFunction(f, ms);
   };
   this.timeoutMs_ = configuration.ensure('eventBusTimeoutMs');
   this.errorHandler_ = errorHandler;

   this.cycleCounter_ = 0;
   this.eventQueue_ = [];
   this.subscriberTree_ = {};

   this.waitingPromiseResolves_ = [];
   this.currentCycle_ = -1;
   this.inspectors_ = [];
   this.log_ = log;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Adds an inspector, that gets notified when certain actions within the event bus take place. Currently
 * these actions may occur:
 *
 * - `subscribe`: a new subscriber registered for an event
 * - `publish`: an event is published but not yet delivered
 * - `deliver`: an event is actually delivered to a subscriber
 *
 * An inspector receives a map with the following properties:
 *
 * - `action`: one of the actions from above
 * - `source`: the origin of the `action`
 * - `target`: the name of the event subscriber (`deliver` action only)
 * - `event`: the full name of the event or the subscribed event (`subscribe` action only)
 * - `eventObject`: the published event item (`publish` action only)
 * - `subscribedTo`: the event, possibly with omissions, the subscriber subscribed to (`deliver` action only)
 * - `cycleId`: the id of the event cycle
 *
 * The function returned by this method can be called to remove the inspector again and prevent it from
 * being called for future event bus actions.
 *
 * @param {Function} inspector
 *    the inspector function to add
 *
 * @return {Function}
 *    a function to remove the inspector
 */
EventBus.prototype.addInspector = function (inspector) {
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(inspector).hasType(Function).isNotNull();

   this.inspectors_.push(inspector);
   return function () {
      var index = this.inspectors_.indexOf(inspector);
      if (index !== -1) {
         this.inspectors_.splice(index, 1);
      }
   }.bind(this);
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Subscribes to an event by name. An event name consists of so called *topics*, where each topic is
 * separated from another by dots (`.`). If a topic is omitted, this is treated as a wildcard. Note that
 * two dots in the middle or one dot at the beginning of an event name must remain, whereas a dot at the
 * end may be omitted. As such every event name has an intrinsic wildcard at its end. For example these are
 * all valid event names:
 *
 * - `some.event`: matches `some.event`, `some.event.again`
 * - `.event`: matches `some.event`, `any.event`, `any.event.again`
 * - `some..event`: matches `some.fancy.event`, `some.special.event`
 *
 * Additionally *subtopics* are supported. Subtopics are fragments of a topic, separated from another by
 * simple dashes (`-`). Here only suffixes of subtopics may be omitted when subscribing. Thus subscribing
 * to `some.event` would match an event published with name `some.event-again` or even
 * `some.event-another.again`.
 *
 * **The subscriber function**
 *
 * When an event is delivered, the subscriber function receives two arguments:
 * The first one is the event object as it was published. If `optionalOptions.clone` yields `true` this is a
 * simple deep copy of the object (note that only properties passing a JSON-(de)serialization remain). If
 * `false` the object is frozen using `Object.freeze` recursively.
 *
 * The second one is a meta object with these properties:
 *
 * - `name`: The name of the event as it actually was published (i.e. without wildcards).
 * - `cycleId`: The id of the cycle the event was published (and delivered) in
 * - `sender`: The id of the event sender, may be `null`.
 * - `initiator`: The id of the initiator of the cycle. Currently not implemented, thus always `null`.
 * - `options`: The options that were passed to `publish` or `publishAndGatherReplies` respectively.
 *
 * @param {String} eventName
 *    the name of the event to subscribe to
 * @param {Function} subscriber
 *    a function to call whenever an event matching `eventName` is published
 * @param {Object} [optionalOptions]
 *    additional options for the subscribe action
 * @param {String} [optionalOptions.subscriber=null]
 *    the id of the subscriber. Default is `null`
 * @param {Boolean} [optionalOptions.clone=true]
 *    if `false` the event will be send frozen to the subscriber, otherwise it will receive a deep copy.
 *    Default is `true`
 *
 * @return {Function}
 *    a function that when called unsubscribes from this subscription again
 */
EventBus.prototype.subscribe = function (eventName, subscriber, optionalOptions) {
   var _this = this;

   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(subscriber).hasType(Function).isNotNull();

   var options = __WEBPACK_IMPORTED_MODULE_1__utilities_object__["c" /* options */](optionalOptions, {
      subscriber: null,
      clone: true
   });
   var subscriberItem = {
      name: eventName,
      subscriber: subscriber,
      subscriberName: options.subscriber,
      subscriptionWeight: calculateSubscriptionWeight(eventName),
      options: options
   };

   var eventNameParts = eventName.split(TOPIC_SEPARATOR);
   var node = eventNameParts.reduce(function (node, eventNamePart) {
      var bucketName = eventNamePart || WILDCARD;
      if (!(bucketName in node)) {
         node[bucketName] = {};
      }
      return node[bucketName];
   }, this.subscriberTree_);

   if (!(SUBSCRIBER_FIELD in node)) {
      node[SUBSCRIBER_FIELD] = [];
   }
   node[SUBSCRIBER_FIELD].push(subscriberItem);

   notifyInspectors(this, {
      action: 'subscribe',
      source: options.subscriber,
      target: '-',
      event: eventName,
      cycleId: this.currentCycle_
   });

   return function () {
      unsubscribeRecursively(_this, _this.subscriberTree_, eventNameParts, subscriber);
   };
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Asynchronously publishes an event on the event bus. The returned promise will be enqueued as soon as this
 * event is delivered and, if during delivery a new event was enqueued, resolved after that new event was
 * delivered. If no new event is published during delivery of this event, the promise is instantly resolved.
 * To make this a bit clearer, lets assume we publish and thus enqueue an event at time `t`. It then will
 * be delivered at time `t+1`. At that precise moment the promise is enqueued to be resolved soon. We then
 * distinguish between two cases:
 *
 * - At time `t+1` no subscriber publishes (i.e. enqueues) an event: Thus there is no event in the same
 *   cycle and the promise is also resolved at time `t+1`.
 * - At least one subscriber publishes an event at time `t+1`: The promise is then scheduled to be resolved
 *   as soon as this event is delivered at time `t+2`.
 *
 * The implication of this is the following:
 *
 * We have two collaborators, A and B. A listens to event b and B listens to event a.
 * Whenever A publishes a and B than instantly (i.e. in the same event cycle of the JavaScript runtime
 * where its subscriber function was called) *responds* by publishing b, b arrives at the subscriber
 * function of A, before the promise of A's publish action is resolved.
 * It is hence possible to observe possible effects of an event sent by oneself, under the conditions
 * mentioned above. Practically this is used internally for the implementation of
 * {@link #EventBus.publishAndGatherReplies()}.
 *
 * @param {String} eventName
 *    the name of the event to publish
 * @param {Object} [optionalEvent]
 *    the event to publish
 * @param {Object} [optionalOptions]
 *    additional options for the publish action
 * @param {String} [optionalOptions.sender=null]
 *    the id of the event sender. Default is `null`
 * @param {Boolean} [optionalOptions.deliverToSender=true]
 *    if `false` the event will not be send to subscribers whose subscriber name matches
 *    `optionalOptions.sender`, else all subscribers will receive the event. Default is `true`
 *
 * @return {Promise}
  *   the delivery promise
 */
EventBus.prototype.publish = function (eventName) {
   var _this2 = this;

   var optionalEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
   var optionalOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();

   var event = JSON.parse(JSON.stringify(optionalEvent));
   var options = Object.assign({ deliverToSender: true, sender: null }, optionalOptions);

   return new Promise(function (resolve) {
      var eventItem = {
         meta: {
            name: eventName,
            cycleId: _this2.currentCycle_ > -1 ? _this2.currentCycle_ : _this2.cycleCounter_++,
            sender: options.sender,
            initiator: null,
            options: options
         },
         event: event,
         resolvePublish: resolve
      };
      enqueueEvent(_this2, eventItem);

      notifyInspectors(_this2, {
         action: 'publish',
         source: options.sender,
         target: '-',
         event: eventName,
         eventObject: event,
         cycleId: eventItem.meta.cycleId
      });
   });
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Publishes an event that follows the *request-will-did pattern* and awaits all replies. This pattern has
 * evolved over time and is of great use when handling the asynchronous nature of event bus events.
 *
 * Certain rules need to be fulfilled: First the initiator needs to call this method with an event whose
 * name has the suffix `Request`, e.g. `takeActionRequest`. All collaborators that want to react to this
 * event then either do so in the same event cycle by sending a `didTakeAction` event or announce that they
 * will do something asynchronously by publishing a `willTakeAction` event. In the latter case they need to
 * broadcast the fulfillment of their action some time later by sending a `didTakeAction` event. Note that for
 * both events the same sender name needs to be given. Otherwise they cannot be mapped and the event bus
 * doesn't know if all asynchronous replies were already received.
 *
 * Additionally a timer is started using either the globally configured `pendingDidTimeout` ms value or the
 * value provided as option to this method. If that timer expires before all `did*` events to all given
 * `will*` events were received, the error handler is called to handle the incident and the promise is
 * rejected with all responses received up to now.
 *
 * @param {String} eventName
 *    the name of the event to publish
 * @param {Object} [optionalEvent]
 *    the event to publish
 * @param {Object} [optionalOptions]
 *    additional options for the publish action
 * @param {String} [optionalOptions.sender=null]
 *    the id of the event sender. Default is `null`
 * @param {Number} [optionalOptions.pendingDidTimeout]
 *    the timeout in milliseconds for pending did* events. Default is the timeout option used when the
 *    event bus instance was created
 *
 * @return {Promise}
 *   the delivery promise. It receives a list of all collected `did*` events and according meta information
 */
EventBus.prototype.publishAndGatherReplies = function (eventName, optionalEvent, optionalOptions) {
   var _this3 = this;

   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventName).hasType(String).isNotNull();

   var matches = REQUEST_MATCHER.exec(eventName);
   __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(!!matches, 'Expected eventName to end with "Request" but got ' + eventName);

   var options = Object.assign({ pendingDidTimeout: this.timeoutMs_ }, optionalOptions);

   var eventNameSuffix = matches[1].toUpperCase() + matches[2];
   if (matches[3]) {
      eventNameSuffix += matches[3];
   }
   var deferred = {};
   deferred.promise = new Promise(function (resolve, reject) {
      deferred.resolve = resolve;
      deferred.reject = reject;
   });
   var willWaitingForDid = [];
   var givenDidResponses = [];
   var cycleFinished = false;

   var unsubscribeWillCollector = this.subscribe('will' + eventNameSuffix, function (event, meta) {
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(meta.sender).hasType(String).isNotNull('A response with will to a request-event must contain a sender.');

      willWaitingForDid.push(meta.sender);
   }, { subscriber: options.sender });

   var unsubscribeDidCollector = this.subscribe('did' + eventNameSuffix, function (event, meta) {
      givenDidResponses.push({ event: event, meta: meta });
      var senderIndex = void 0;
      do {
         senderIndex = willWaitingForDid.indexOf(meta.sender);
         if (senderIndex !== -1) {
            willWaitingForDid.splice(senderIndex, 1);
         }
      } while (senderIndex !== -1);

      if (willWaitingForDid.length === 0 && cycleFinished) {
         finish();
      }
   }, { subscriber: options.sender });

   var timeoutRef = this.timeoutFunction_(function () {
      if (willWaitingForDid.length > 0) {
         var message = 'Timeout while waiting for pending did' + eventNameSuffix + ' on ' + eventName + '.';
         _this3.errorHandler_(message, {
            'Sender': options.sender,
            'After ms timeout': options.pendingDidTimeout,
            'Responses missing from': willWaitingForDid.join(', ')
         });
         finish(true);
      }
   }, options.pendingDidTimeout);

   this.publish(eventName, optionalEvent, options).then(function () {
      unsubscribeWillCollector();
      if (willWaitingForDid.length === 0) {
         // either there was no will or all did responses were already given in the same cycle as the will
         finish();
         return;
      }
      cycleFinished = true;
   });

   function finish(wasCanceled) {
      clearTimeout(timeoutRef);
      unsubscribeDidCollector();
      (wasCanceled ? deferred.reject : deferred.resolve)(givenDidResponses);
   }

   return deferred.promise;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function enqueueEvent(self, eventItem) {
   if (self.eventQueue_.length === 0) {
      self.nextTick_(function () {
         var queuedEvents = self.eventQueue_;

         self.eventQueue_ = [];

         processWaitingPublishPromises(self, processQueue(self, queuedEvents));
      });
   }
   self.eventQueue_.push(eventItem);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function processQueue(self, queuedEvents) {
   return queuedEvents.map(function (eventItem) {
      var meta = eventItem.meta;
      self.currentCycle_ = meta.cycleId;

      var subscribers = findSubscribers(self, meta.name);
      if (subscribers.length === 0) {
         self.currentCycle_ = -1;
         return eventItem.resolvePublish;
      }

      var serializedEvent = null;
      if (subscribers.length > 1) {
         serializedEvent = JSON.stringify(eventItem.event);
      }

      var senderName = meta.sender;
      var options = meta.options;

      subscribers.forEach(function (subscriberItem) {
         var subscriberName = subscriberItem.subscriberName;
         if (!options.deliverToSender && senderName && senderName === subscriberName) {
            return;
         }

         try {
            var event = void 0;
            if (subscriberItem.options.clone) {
               event = serializedEvent ? JSON.parse(serializedEvent) : eventItem.event;
            } else {
               event = eventItem.event;
            }
            subscriberItem.subscriber(event, meta);
         } catch (e) {
            var message = 'error while calling subscriber "' + subscriberName + '"' + (' for event ' + meta.name) + (' published by "' + senderName + '" (subscribed to: ' + subscriberItem.name + ')');
            self.errorHandler_(message, {
               'Exception': e,
               'Published event': eventItem.event,
               'Event meta information': meta,
               'Caused by Subscriber': subscriberItem
            });
         }

         notifyInspectors(self, {
            action: 'deliver',
            source: senderName,
            target: subscriberName,
            event: meta.name,
            eventObject: eventItem.event,
            subscribedTo: subscriberItem.name,
            cycleId: meta.cycleId
         });
      });

      self.currentCycle_ = -1;

      return eventItem.resolvePublish;
   });
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function processWaitingPublishPromises(self, newPromiseResolves) {
   var waitingResolves = self.waitingPromiseResolves_;
   self.waitingPromiseResolves_ = newPromiseResolves;

   waitingResolves.forEach(function (resolve) {
      return resolve();
   });

   if (self.eventQueue_.length === 0) {
      // nothing was queued by any subscriber. The publishers can instantly be notified of delivery.
      newPromiseResolves.forEach(function (resolve) {
         return resolve();
      });
      self.waitingPromiseResolves_ = [];
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function unsubscribeRecursively(self, node, parts, subscriber) {
   if (parts.length === 0 && Array.isArray(node[SUBSCRIBER_FIELD])) {
      var subscribers = node[SUBSCRIBER_FIELD];
      for (var i = subscribers.length - 1; i >= 0; --i) {
         if (subscribers[i].subscriber === subscriber) {
            notifyInspectors(self, {
               action: 'unsubscribe',
               source: subscribers[i].subscriberName,
               target: '-',
               event: subscribers[i].name,
               cycleId: self.currentCycle_
            });
            subscribers.splice(i, 1);
         }
      }
   }

   var _parts = _toArray(parts),
       part = _parts[0],
       rest = _parts.slice(1);

   var searchPart = part || WILDCARD;
   if (searchPart in node) {
      unsubscribeRecursively(self, node[searchPart], rest, subscriber);
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function findSubscribers(self, eventName) {
   var subscribers = [];
   var parts = eventName.split(TOPIC_SEPARATOR);
   var node = self.subscriberTree_;

   findSubscribersRecursively(node, parts, subscribers);
   subscribers.sort(function (a, b) {
      var aWeight = a.subscriptionWeight;
      var bWeight = b.subscriptionWeight;
      if (aWeight[0] === bWeight[0]) {
         return bWeight[1] - aWeight[1];
      }

      return bWeight[0] - aWeight[0];
   });

   return subscribers;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function findSubscribersRecursively(node, parts, subscribers) {
   if (Array.isArray(node[SUBSCRIBER_FIELD])) {
      subscribers.push.apply(subscribers, _toConsumableArray(node[SUBSCRIBER_FIELD]));
   }

   if (parts.length === 0) {
      return;
   }

   var _parts2 = _toArray(parts),
       part = _parts2[0],
       remainder = _parts2.slice(1);

   if (part.indexOf(SUB_TOPIC_SEPARATOR) !== -1) {
      var index = part.length;
      var currentPart = part;
      do {
         currentPart = currentPart.substring(0, index);
         if (currentPart in node) {
            findSubscribersRecursively(node[currentPart], remainder, subscribers);
         }
         index = currentPart.lastIndexOf(SUB_TOPIC_SEPARATOR);
      } while (index !== -1);
   } else if (part in node) {
      findSubscribersRecursively(node[part], remainder, subscribers);
   }

   if (WILDCARD in node) {
      findSubscribersRecursively(node[WILDCARD], remainder, subscribers);
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function calculateSubscriptionWeight(eventName) {
   var parts = eventName.split(TOPIC_SEPARATOR);
   var weight = [0, 0];
   parts.forEach(function (part) {
      if (part.length > 0) {
         weight[0]++;
         weight[1] += part.split(SUB_TOPIC_SEPARATOR).length - 1;
      }
   });
   return weight;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function notifyInspectors(self, infoObject) {
   self.inspectors_.forEach(function (inspector) {
      inspector(infoObject);
   });
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function createLogErrorHandler(log) {
   return function (message, optionalErrorInformation) {
      var sensitiveData = ['Published event'];

      log.error('EventBus: ' + message);

      if (optionalErrorInformation) {
         __WEBPACK_IMPORTED_MODULE_1__utilities_object__["b" /* forEach */](optionalErrorInformation, function (info, title) {
            var formatString = '   - [0]: [1:%o]';
            if (sensitiveData.indexOf(title) !== -1) {
               formatString = '   - [0]: [1:%o:anonymize]';
            }

            log.error(formatString, title, info);

            if (info instanceof Error && info.stack) {
               log.error('   - Stacktrace: ' + info.stack);
            }
         });
      }
   };
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Creates and returns a new event bus instance using the given configuration.
 *
 * @param {Object} configuration
 *    configuration for the event bus instance.
 *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.
 * @param {Object} log
 *    a logger to use for error reporting
 * @param {Function} nextTick
 *    a next tick function like `process.nextTick` or AngularJS' `$timeout`
 * @param {Function} timeoutFunction
 *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`
 * @param {Function} [errorHandler]
 *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.
 *
 * @return {EventBus}
 *    an event bus instance
 *
 * @private
 */
function create(configuration, log, nextTick, timeoutFunction, errorHandler) {
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(configuration.ensure).hasType(Function).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(log.error).hasType(Function).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(nextTick).hasType(Function).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(timeoutFunction).hasType(Function).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(errorHandler).hasType(Function);

   return new EventBus(configuration, log, nextTick, timeoutFunction, errorHandler);
}

/***/ }),

/***/ 151:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return levels; });
/* unused harmony export BLACKBOX */
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/* unused harmony export createConsoleChannel */
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * Module providing the Logger factory.
 *
 * To use the Log service in a widget, request the {@link widget_services#axLog axLog} injection.
 *
 * @module log
 */



/**
 * Log levels that are available by default, sorted by increasing severity:
 *
 * - TRACE (level 100)
 * - DEBUG (level 200)
 * - INFO (level 300)
 * - WARN (level 400)
 * - ERROR (level 500)
 * - FATAL (level 600)
 *
 * @type {Object}
 * @name levels
 */
var levels = {
   TRACE: 100,
   DEBUG: 200,
   INFO: 300,
   WARN: 400,
   ERROR: 500,
   FATAL: 600
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Pass this as an additional replacement parameter to a log-method, in order to blackbox your logging call.
 * Blackboxed callers are ignored when logging the source information (file, line).
 *
 * @type {Object}
 * @name BLACKBOX
 */
var BLACKBOX = {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function create(configuration, optionalBrowser) {
   var startChannels = optionalBrowser ? [createConsoleChannel(optionalBrowser)] : [];
   return new Logger(configuration, startChannels);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

// eslint-disable-next-line valid-jsdoc
/**
 * A flexible logger.
 *
 * It is recommended to prefer this logger over `console.log` and friends, at least for any log messages that
 * might make their way into production code. For once, this logger is safe to use across browsers and allows
 * to attach additional channels for routing messages to (i.e. to send them to a server process for
 * persistence). If a browser console is available, messages will be logged to that console using the builtin
 * console channel.
 * For testing, a silent mock for this logger is used, making it simple to test the logging behavior of
 * widgets and activities, while avoiding noisy log messages in the test runner output.
 *
 * All messages produced
 *
 * @constructor
 * @private
 */
function Logger(configuration) {
   var _this = this;

   var channels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

   this.levels = Object.assign({}, levels, configuration.get('logging.levels'));

   this.queueSize_ = 100;
   this.channels_ = channels;
   this.counter_ = 0;
   this.messageQueue_ = [];
   this.threshold_ = 0;
   this.tags_ = {};

   this.levelToName_ = function (levels) {
      var result = {};
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["b" /* forEach */])(levels, function (level, levelName) {
         _this[levelName.toLowerCase()] = function () {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
               args[_key] = arguments[_key];
            }

            _this.log.apply(_this, [level].concat(args, [BLACKBOX]));
         };
         result[level] = levelName;
      });
      return result;
   }(this.levels);

   this.setLogThreshold(configuration.ensure('logging.threshold'));
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message. A message may contain placeholders in the form `[#]` where `#` resembles the index
 * within the list of `replacements`. `replacements` are incrementally counted starting at `0`. If the
 * log level is below the configured log threshold, the message is simply discarded.
 *
 * It is recommended not to use this method directly, but instead one of the short cut methods for the
 * according log level.
 *
 * @param {Number} level
 *    the level for this message
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.log = function (level, message) {
   for (var _len2 = arguments.length, replacements = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      replacements[_key2 - 2] = arguments[_key2];
   }

   if (level < this.threshold_) {
      return;
   }

   var blackboxDepth = 0;
   while (replacements[replacements.length - 1] === BLACKBOX) {
      ++blackboxDepth;
      replacements.pop();
   }

   var messageObject = {
      id: this.counter_++,
      level: this.levelToName_[level],
      text: message,
      replacements: replacements,
      time: new Date(),
      tags: this.gatherTags(),
      sourceInfo: gatherSourceInformation(blackboxDepth + 1) // add 1 depth to exclude this function
   };

   this.channels_.forEach(function (channel) {
      channel(messageObject);
   });

   if (this.messageQueue_.length === this.queueSize_) {
      this.messageQueue_.shift();
   }
   this.messageQueue_.push(messageObject);
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `TRACE`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.trace = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `DEBUG`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.debug = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `INFO`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.info = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `WARN`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.warn = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `ERROR`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.error = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Logs a message in log level `FATAL`. See {@link Logger#log} for further information.
 *
 * *Important note*: This method is only available, if no custom log levels were defined via
 * configuration or custom log levels include this method as well.
 *
 * @param {String} message
 *    the message to log
 * @param {...*} replacements
 *    objects that should replace placeholders within the message
 */
Logger.prototype.fatal = function () {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Adds a new channel to forward log messages to. A channel is called synchronously for every log message
 * and can do whatever necessary to handle the message according to its task. Note that blocking or
 * performance critical actions within a channel should always take place asynchronously to prevent from
 * blocking the application. Ideally a web worker is used for heavier background tasks.
 *
 * Each message is an object having the following properties:
 * - `id`: the unique, ascending id of the log message
 * - `level`: the log level of the message in string representation
 * - `text`: the actual message that was logged
 * - `replacements`: the raw list of replacements passed along the message
 * - `time`: JavaScript Date instance when the message was logged
 * - `tags`: A map of all log tags currently set for the logger
 * - `sourceInfo`: if supported, a map containing `file`, `line` and `char` where the logging took place
 *
 * @param {Function} channel
 *    the log channel to add
 */
Logger.prototype.addLogChannel = function (channel) {
   this.channels_.push(channel);
   this.messageQueue_.forEach(function (entry) {
      channel(entry);
   });
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Removes a log channel and thus stops sending further messages to it.
 *
 * @param {Function} channel
 *    the log channel to remove
 */
Logger.prototype.removeLogChannel = function (channel) {
   var channelIndex = this.channels_.indexOf(channel);
   if (channelIndex > -1) {
      this.channels_.splice(channelIndex, 1);
   }
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Adds a value for a log tag. If a tag is already known, the value is appended to the existing one using a
 * `;` as separator. Note that no formatting of the value takes place and a non-string value will just have
 * its appropriate `toString` method called.
 *
 * Log tags can be used to mark a set of log messages with a value giving further information on the
 * current logging context. For example laxar sets a tag `'INST'` with a unique-like identifier for the
 * current browser client. If then for example log messages are persisted on a server, messages belonging
 * to the same client can be accumulated.
 *
 * @param {String} tag
 *    the id of the tag to add a value for
 * @param {String} value
 *    the value to add
 */
Logger.prototype.addTag = function (tag, value) {
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

   if (!this.tags_[tag]) {
      this.tags_[tag] = [value];
   } else {
      this.tags_[tag].push(value);
   }
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Sets a value for a log tag. If a tag is already known, the value is overwritten by the given one. Note
 * that no formatting of the value takes place and a non-string value will just have its appropriate
 * `toString` method called. For further information on log tags, see {@link Logger#addTag}.
 *
 * @param {String} tag
 *    the id of the tag to set a value for
 * @param {String} value
 *    the value to set
 */
Logger.prototype.setTag = function (tag, value) {
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

   this.tags_[tag] = [value];
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Removes a log tag. For further information on log tags, see {@link Logger#addTag}.
 *
 * @param {String} tag
 *    the id of the tag to set a value for
 */
Logger.prototype.removeTag = function (tag) {
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(tag).hasType(String).isNotNull();

   delete this.tags_[tag];
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Returns a map of all tags. If there are multiple values for the same tag, their values are concatenated
 * using a `;` as separator. For further information on log tags, see {@link Logger#addTag}.
 *
 * @return {Object}
 *    a mapping from tag to its value(s)
 */
Logger.prototype.gatherTags = function () {
   var tags = {};
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["b" /* forEach */])(this.tags_, function (values, tag) {
      tags[tag] = values.join(';');
   });
   return tags;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Sets the threshold for log messages. Log messages with a lower level will be discarded upon logging.
 *
 * @param {String|Number} threshold
 *    the numeric or the string value of the log level to use as threshold
 */
Logger.prototype.setLogThreshold = function (threshold) {
   if (typeof threshold === 'string') {
      __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(threshold.toUpperCase() in this.levels, 'Unsupported log threshold "' + threshold + '".');
      this.threshold_ = this.levels[threshold.toUpperCase()];
   } else {
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(threshold).hasType(Number);
      this.threshold_ = threshold;
   }
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var EMPTY_CALL_INFORMATION = { file: '?', line: -1, char: -1 };

function gatherSourceInformation(blackboxDepth) {
   var e = new Error();

   if (!e.stack) {
      try {
         // IE >= 10 only generates a stack if the error object is really thrown
         throw new Error();
      } catch (err) {
         e = err;
      }
      if (!e.stack) {
         return EMPTY_CALL_INFORMATION;
      }
   }

   var rows = e.stack.split(/[\n]/);
   var interpret = void 0;
   if (rows[0] === 'Error') {
      rows.shift();
      interpret = chromeStackInterpreter;
   } else if (rows[0].indexOf('@') !== -1) {
      interpret = firefoxStackInterpreter;
   } else {
      return EMPTY_CALL_INFORMATION;
   }

   var row = rows[blackboxDepth + 1]; // add 1 depth to exclude this function
   return row ? interpret(row) : EMPTY_CALL_INFORMATION;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var CHROME_AND_IE_STACK_MATCHER = /\(?([^( ]+):(\d+):(\d+)\)?$/;

function chromeStackInterpreter(row) {
   var match = CHROME_AND_IE_STACK_MATCHER.exec(row);
   return {
      file: match ? match[1] : '?',
      line: match ? match[2] : -1,
      char: match ? match[3] : -1
   };
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var FIREFOX_STACK_MATCHER = /@(.+):(\d+)$/;

function firefoxStackInterpreter(row) {
   var match = FIREFOX_STACK_MATCHER.exec(row);
   return {
      file: match ? match[1] : '?',
      line: match ? match[2] : -1,
      char: -1
   };
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function createConsoleChannel(browser) {

   return function log(messageObject) {
      var browserConsole = browser.console();
      if (!browserConsole) {
         return;
      }

      var level = messageObject.level,
          text = messageObject.text,
          replacements = messageObject.replacements,
          _messageObject$source = messageObject.sourceInfo,
          file = _messageObject$source.file,
          line = _messageObject$source.line;


      var logMethod = level.toLowerCase();
      if (!(logMethod in browserConsole) || logMethod === 'trace') {
         // In console objects trace doesn't define a valid log level but is used to print stack traces. We
         // thus need to change it something different.
         logMethod = 'log';
      }

      if (!(logMethod in browserConsole)) {
         return;
      }

      var callArgs = [level + ': '].concat(mergeTextAndReplacements(text, replacements)).concat(['(@ ' + file + ':' + line + ')']);

      browserConsole[logMethod].apply(browserConsole, _toConsumableArray(callArgs));
   };
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function mergeTextAndReplacements(text, replacements) {
   var parts = [];
   var pos = 0;
   var buffer = '';

   while (pos < text.length) {
      var character = text.charAt(pos);

      switch (character) {
         case '\\':
            {
               ++pos;
               if (pos === text.length) {
                  throw new Error('Unterminated string: "' + text + '"');
               }

               buffer += text.charAt(pos);
               break;
            }
         case '[':
            {
               parts.push(buffer);
               buffer = '';

               var end = text.indexOf(']', pos);
               if (end === -1) {
                  throw new Error('Unterminated replacement at character ' + pos + ': "' + text + '"');
               }

               var replacementIndex = parseInt(text.substring(pos + 1, end), 10);

               parts.push(replacements[replacementIndex]);
               pos = end;

               break;
            }
         default:
            {
               buffer += character;
               break;
            }
      }

      ++pos;
   }

   if (buffer.length > 0) {
      parts.push(buffer);
   }

   return parts;
}

/***/ }),

/***/ 152:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Factory for i18n widget service instances.
 *
 * @module widget_services_visibility
 */

// <-- temporary guard until https://github.com/LaxarJS/laxar-dox/issues/21 is fixed
var noDeliveryToSender = { deliverToSender: false };
var noOp = function noOp() {};

/**
 * Creates a widget-specific helper for `didChangeAreaVisibility` events.
 *
 * @param {AxContext} context
 *    the widget context/scope that the handler should work with. It uses the `eventBus` property there
 *    with which it can do the event handling. The visibility handler will set the boolean context property
 *    `isVisible` which can be used to determine the visibility state of the entire widget, e.g. for use in
 *    templates.
 *
 * @param {AxAreaHelper} areaHelper
 *    an area helper to qualify/unqualify names for this widget's areas
 *
 * @return {AxVisibility}
 *    a visibility handler instance
 */
function create(context, areaHelper) {

   /**
    * @constructor
    * @name AxVisibility
    */
   var api = {
      /**
       * Query the current visibility state.
       *
       * @return {Boolean}
       *    this current visibility status as determined through eventBus events
       *
       * @memberof AxVisibility
       */
      isVisible: function isVisible() {
         return areaHelper.isVisible(context.widget.area);
      },
      onChange: onChange,
      onHide: onHide,
      onShow: onShow,
      release: release,
      track: track,
      unsubscribe: unsubscribe,
      updateAreaVisibility: updateAreaVisibility,
      updateWidgetVisibility: updateWidgetVisibility
   };

   var isVisible = api.isVisible();

   var eventBus = context.eventBus;

   // state used for tracking the widget visibility

   var trackingProperty = void 0;
   var showListeners = [];
   var hideListeners = [];
   var unsubscribeToChanges = noOp;

   // state used for setting the visibility of the widget and its areas
   var visibilityByArea = {};
   var overrideByArea = {};
   var unsubscribeToAreaRequests = noOp;

   return api;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Registers a callback to be run when this widget becomes hidden.
    *
    * @param {Function} callback
    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating
    *    the new visibility state (`false`). The callback will *not* be invoked for the start value (`false`).
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function onHide(callback) {
      hideListeners.push(callback);
      updateChangeSubscription();
      return api;
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Registers a callback to be run when this widget becomes visbile.
    *
    * @param {Function} callback
    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating
    *    the new visibility state (`true`).
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function onShow(callback) {
      showListeners.push(callback);
      updateChangeSubscription();
      return api;
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Registers a callback for changes to this widget's visibility.
    *
    * @param {Function} callback
    *    a callback to be invoked whenever the widget visibility changes, with a boolean argument indicating
    *    the new visibility state. The callback will *not* be invoked for the start value (`false`).
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function onChange(callback) {
      showListeners.push(callback);
      hideListeners.push(callback);
      updateChangeSubscription();
      return api;
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Starts tracking visibility as a property on the context.
    *
    * Calling this repeatedly with different property names will stop previous properties from receiving
    * further updates, but will not remove previously set tracking properties from the context object.
    *
    * @param {String} property
    *    the name of the context property to maintain
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function track() {
      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'isVisible';

      trackingProperty = property;
      if (property !== null) {
         context[property] = isVisible;
      }
      updateChangeSubscription();
      return api;
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Triggers a visibility change to the given area. The visibility of the area and its nested areas is
    * re-evaluated over the event bus. Use this to implement e.g. tabbing/accordion/expander widgets.
    *
    * @param {Object} visibilityByLocalArea
    *   A mapping of local area names (without the widget ID) to their new visibility state (Boolean).
    *   Areas that are omitted here are left as is. Areas that have not been set at all just assume the
    *   visibility state of the containing area.
    * @param {Object} [optionalOptions]
    *   Additional options
    * @param {Object} [optionalOptions.overrideContainer]
    *   Allows the specified areas to become visible even if the widget's container area is not visible.
    *
    * @return {Promise}
    *    a promise that is resolved (without a value) when the visibility change was applied
    *
    * @memberof AxVisibility
    */
   function updateAreaVisibility(visibilityByLocalArea) {
      var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _optionalOptions$over = optionalOptions.overrideContainer,
          overrideContainer = _optionalOptions$over === undefined ? false : _optionalOptions$over;


      if (unsubscribeToAreaRequests === noOp) {
         var requestEvent = 'changeAreaVisibilityRequest.' + context.widget.id;
         unsubscribeToAreaRequests = eventBus.subscribe(requestEvent, responder(isAreaVisible));
      }

      var promises = Object.keys(visibilityByLocalArea).map(function (name) {
         var oldVisible = visibilityByArea[name];
         var oldOverride = overrideByArea[name];
         var visible = visibilityByArea[name] = visibilityByLocalArea[name];
         if (overrideContainer) {
            overrideByArea[name] = overrideContainer;
         } else if (oldOverride) {
            delete overrideByArea[name];
         }
         if (oldVisible !== visible || oldOverride !== overrideByArea[name]) {
            var area = areaHelper.fullName(name);
            var eventName = 'changeAreaVisibilityRequest.' + area + '.' + visible;
            return eventBus.publishAndGatherReplies(eventName, { area: area, visible: visible }, noDeliveryToSender);
         }
         return Promise.resolve();
      });

      return Promise.all(promises).then(noOp);
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /* @private helper for updateAreaVisibility */
   function isAreaVisible(localAreaName, containerVisible) {
      var areaVisible = visibilityByArea[localAreaName];
      if (areaVisible === undefined) {
         return containerVisible;
      }
      return areaVisible && (containerVisible || overrideByArea[localAreaName]);
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Triggers a visibility change the widget itself and all its areas, always overriding its container
    * visibility with the given value.
    * This simplifies implementing popup/popover/layer widgets, which always live in an invisible container
    * area, but need to show/hide all their owned areas.
    *
    * To control the visibility of individual areas, use #updateAreaVisibility
    *
    * @param {Boolean} visible
    *   The new visibility state of the widget.
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function updateWidgetVisibility(visible) {
      var widget = context.widget.id;
      var eventName = 'changeWidgetVisibilityRequest.' + widget + '.' + visible;
      return eventBus.publishAndGatherReplies(eventName, { widget: widget, visible: visible }, noDeliveryToSender);
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   /**
    * Remove the given callback (registered through one or more of the on... methods) from any subscriptions.
    *
    * @param {Function} callback
    *    a callback that was previously registered using any of the `on...` methods.
    *    It will be removed from all registrations. Passing an unknown callback has no effect.
    *
    * @return {AxVisibility}
    *    this instance for chaining
    *
    * @memberof AxVisibility
    */
   function unsubscribe(callback) {
      [showListeners, hideListeners].forEach(remove);

      function remove(array) {
         var index = array.indexOf(callback);
         if (index === -1) {
            return;
         }
         array.splice(index, 1);
         remove(array);
      }
      return api;
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function release() {
      unsubscribeToAreaRequests();
      unsubscribeToChanges();
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function updateChangeSubscription() {
      var needsSubscription = trackingProperty || showListeners.length + hideListeners.length;
      if (needsSubscription && unsubscribeToChanges === noOp) {
         unsubscribeToChanges = eventBus.subscribe('didChangeAreaVisibility.' + context.widget.area, function (_ref) {
            var visible = _ref.visible;

            if (visible === isVisible) {
               return;
            }
            isVisible = visible;
            if (trackingProperty) {
               context[trackingProperty] = visible;
            }
            (visible ? showListeners : hideListeners).forEach(function (f) {
               return f(visible);
            });
         });
      } else if (unsubscribeToChanges && !needsSubscription) {
         unsubscribeToChanges();
         unsubscribeToChanges = noOp;
      }
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function responder(callback) {
      return function (_ref2) {
         var area = _ref2.area,
             containerVisible = _ref2.visible;

         var visible = callback(areaHelper.localName(area), containerVisible);
         if (visible === true || visible === false) {
            var didEvent = 'didChangeAreaVisibility.' + area + '.' + visible;
            eventBus.publish(didEvent, { area: area, visible: visible }, noDeliveryToSender);
         }
      };
   }
}

/***/ }),

/***/ 153:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(15);
/* unused harmony export MOCK_THEME */
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
* Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */



var MOCK_THEME = 'mock.theme';

var NOT_FOUND = { content: null, url: null };

function create() {
   var themeName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MOCK_THEME;


   var buckets = {};

   return {
      forFlow: mockProvider('flows', ['descriptor'], ['definition']),
      forTheme: mockProvider('themes', ['assets', 'descriptor']),
      forPage: mockProvider('pages', ['descriptor'], ['definition']),
      forLayout: mockProvider('layouts', ['descriptor', 'assets']),
      forWidget: mockProvider('widgets', ['descriptor', 'assets', 'module']),
      forControl: mockProvider('controls', ['descriptor', 'assets', 'module'])
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function mockProvider(bucketName) {
      var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var cloneKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];


      var bucket = buckets[bucketName] = {};
      provide.mock = function (ref, artifact) {
         bucket[ref] = artifact;
      };

      return provide;

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function provide(ref) {
         var artifactPromise = bucket[ref] ? Promise.resolve(bucket[ref]) : Promise.reject(new Error('Artifact ' + ref + ' not found in ' + bucketName));

         var api = {};

         ['definition', 'module', 'descriptor'].forEach(function (key) {
            if (cloneKeys.includes(key)) {
               api[key] = function () {
                  return artifactPromise.then(function (_) {
                     return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["f" /* deepClone */])(_[key]);
                  });
               };
            } else if (keys.includes(key)) {
               api[key] = function () {
                  return artifactPromise.then(function (_) {
                     return _[key];
                  });
               };
            }
         });

         if (keys.includes('assets')) {
            (function () {
               var lookup = function lookup(name) {
                  return function (_ref) {
                     var _ref$assets = _ref.assets,
                         assets = _ref$assets === undefined ? {} : _ref$assets;
                     return assets[name] || NOT_FOUND;
                  };
               };

               var lookupForTheme = function lookupForTheme(name) {
                  return function (_ref2) {
                     var _ref2$assets = _ref2.assets,
                         assets = _ref2$assets === undefined ? {} : _ref2$assets;

                     var themedAssets = assets[themeName];
                     if (themedAssets && themedAssets[name]) {
                        return themedAssets[name];
                     }
                     return NOT_FOUND;
                  };
               };

               var provide = function provide(_ref3) {
                  var content = _ref3.content;
                  return content || null;
               };
               var provideUrl = function provideUrl(_ref4) {
                  var url = _ref4.url;
                  return url || null;
               };

               api.asset = function (name) {
                  return artifactPromise.then(lookup(name)).then(provide);
               };

               api.assetUrl = function (name) {
                  return artifactPromise.then(lookup(name)).then(provideUrl);
               };

               api.assetForTheme = function (name) {
                  return artifactPromise.then(lookupForTheme(name)).then(provide);
               };

               api.assetUrlForTheme = function (name) {
                  return artifactPromise.then(lookupForTheme(name)).then(provideUrl);
               };
            })();
         }

         return api;
      }
   }
}

/***/ }),

/***/ 154:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__runtime_browser__ = __webpack_require__(149);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */




/**
 * A browser mock where the URL and base URL can be set without affecting the actual document location.
 *
 * Also provides a mock `console` where the most important log methods are available.
 * If other methods need to be mocked, a custom console should be passed through the fake environment.
 *
 * @param {Object} [fakeEnvironment]
 *    optional options to override the behavior of the mock
 * @param {Location} [fakeEnvironment.locationMock=window.location]
 *    a specific value to return from the `location()` mock
 * @param {Console} [fakeEnvironment.consoleMock]
 *    a specific console to use for the `console()` mock instead of the default fake console
 *
 * @return {Browser}
 *    a fresh mock instance
 */
function create() {
   var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
       locationMock = _ref.locationMock,
       consoleMock = _ref.consoleMock;

   var browser = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__runtime_browser__["a" /* create */])();
   var mockFetchResponses = [];

   var api = {
      location: jasmine.createSpy('browser.location').and.callFake(function () {
         return api.locationMock;
      }),
      resolve: jasmine.createSpy('browser.resolve').and.callFake(browser.resolve),
      console: jasmine.createSpy('browser.console').and.callFake(function () {
         return api.consoleMock;
      }),
      fetch: jasmine.createSpy('fetch').and.callFake(fakeFetch),

      /**
       * Can be used by tests to spy on `location()`-methods, or to modify the location mock afterwards.
       *
       * @type {Location}
       * @memberof Browser
       */
      locationMock: locationMock || browser.location(),

      /**
       * Can be used by tests to spy on `console()`-methods, or to modify the console mock afterwards.
       *
       * @type {Console}
       * @memberof Browser
       */
      consoleMock: consoleMock || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["a" /* tabulate */])(function (method) {
         return jasmine.createSpy('console.' + method);
      }, ['log', 'debug', 'info', 'warn', 'error', 'trace']),

      /**
       * Add a mock `fetch()` response.
       * When clients use `fetch` with the specified URL (directly, not through a `Request` object), they will
       * be served an Object that has the corresponding value as its `text()` result.
       *
       * @param {String} url
       *    a URL to mock a response for
       * @param {String} value
       *    the value to return (will be transformed using JSON.stringify)
       * @param {String} [method='GET']
       *    the HTTP method to use
       *
       * @memberof Browser
       */
      respondWith: function respondWith(url, value) {
         var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';

         mockFetchResponses.push({ method: method, url: url, value: value });
      },


      /**
       * Reset the mock `fetch()` responses
       * @memberof Browser
       */
      reset: function reset() {
         mockFetchResponses.length = 0;
      }
   };

   return api;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function fakeFetch(url, optionalOptions) {
      var options = Object.assign({ method: 'GET' }, optionalOptions);
      var method = options.method;

      var response = mockFetchResponses.filter(function (_) {
         return _.url === url && _.method === method;
      })[0];
      return response === undefined ? Promise.reject() : Promise.resolve({
         text: function text() {
            return Promise.resolve(JSON.stringify(response.value));
         }
      });
   }
}

/***/ }),

/***/ 155:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__runtime_event_bus__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__configuration_mock__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__log_mock__ = __webpack_require__(76);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to create mock implementations of {@link EventBus}, compatible to the "axEventBus" and
 * "axGlobalEventBus" injections.
 *
 * @module event_bus_mock
 */






/**
 * Creates a mock {@link EventBus}, compatible to the "axEventBus" injection of a widget.
 *
 * If no custom tick-scheduler function is passed through the options, the returned event bus has a method
 * `flush`, to synchronously deliver all pending events, until no events are left.
 *
 * @param {Object} [options]
 *    additional options
 * @param {Object} [options.nextTick]
 *    an alternative callback for scheduling the next event bus cycle (such as window.setTimeout)
 * @param {Object} [options.errorHandler]
 *    an alternative error handler, e.g. to inspect error conditions during test
 *
 * @return {EventBusMock}
 *    a fresh mock instance
 */
function create() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      nextTick = _ref.nextTick,
      errorHandler = _ref.errorHandler;

  var config = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__configuration_mock__["a" /* create */])({ eventBusTimeoutMs: 1000 });
  var waiting = [];
  var fallbackTick = function fallbackTick(f) {
    waiting.push(f);
  };

  /**
   * A mock version of {@link EventBus}.
   *
   * Offers spied-upon version of the usual axHeartbeat methods, as well as a `flush` method for synchronous
   * scheduling of heartbeat events, and a `reset` methods to clear all listeners.
   *
   * @name EventBusMock
   * @constructor
   * @extends EventBus
   */
  var eventBus = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__runtime_event_bus__["a" /* create */])(config, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__log_mock__["a" /* create */])(), nextTick || fallbackTick, setTimeout, errorHandler);

  /**
   * @memberof {EventBusMock}
   */
  eventBus.flush = function () {
    __WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */].state(!nextTick, 'eventBusMock.flush cannot be used with a custom nextTick');
    while (waiting.length) {
      waiting.shift()();
    }
  };

  spyOn(eventBus, 'addInspector').and.callThrough();
  spyOn(eventBus, 'subscribe').and.callThrough();
  spyOn(eventBus, 'publish').and.callThrough();
  spyOn(eventBus, 'publishAndGatherReplies').and.callThrough();

  return eventBus;
}

/***/ }),

/***/ 156:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__browser_mock__ = __webpack_require__(154);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to create mock implementations of {@link FlowService}, compatible to the "axFlowService" injection.
 *
 * @module flow_service_mock
 */



/**
 * Creates a mock for the `axFlowService` injection of a widget.
 *
 * @param {Object} [dependencies={}]
 *   optional service dependencies to be used by the mock flow service
 * @param {AxBrowser} [dependencies.browser]
 *   a (mock) browser to resolve the location when creating absolute mock URLs
 *
 * @return {AxFlowServiceMock}
 *    a mock of `axFlowService` that can be spied and/or mocked with additional items
 */
function create() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$browser = _ref.browser,
      browser = _ref$browser === undefined ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__browser_mock__["a" /* create */])() : _ref$browser;

  /**
   * A mock version of the {@link FlowService} that does not rely on an actual flow definition.
   *
   * By default, the mock will simply return '/mockPath' for any call to `constructPath`, and the remaining
   * methods behave accordingly. All methods are spies, so their arguments may be inspected and their return
   * value may be modified using `and.callFake`.
   *
   * @name AxFlowServiceMock
   * @constructor
   * @extends AxFlowService
   */
  var api = {
    constructPath: spy('constructPath', function () {
      return '/mockPath';
    }),
    constructAnchor: spy('constructAnchor', function () {
      return '#' + api.constructPath.apply(api, arguments);
    }),
    constructAbsoluteUrl: spy('constructAbsoluteUrl', function () {
      var loc = browser.location();
      return loc.protocol + '://' + loc.host + api.constructPath.apply(api, arguments);
    })
  };

  return api;

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  function spy(name, fake) {
    return jasmine.createSpy('axFlowServiceMock.' + name).and.callFake(fake);
  }
}

/***/ }),

/***/ 157:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to create mock implementations of {@link Heartbeat}, compatible to the "axHeartbeat" injection.
 *
 * @module heartbeat_mock
 */

/**
 * Creates a mock for the "axHeartbeat" injection of a widget.
 *
 * @return {HeartbeatMock}
 *    a fresh mock instance
 */
function create() {
   var beforeNext = [];
   var next = [];
   var afterNext = [];

   /**
    * A mock version of {@link Heartbeat}, with additional methods.
    *
    * Offers spied-upon version of the usual axHeartbeat methods, as well as a `flush` method for synchronous
    * scheduling of heartbeat events, and a `reset` methods to clear all listeners.
    *
    * @name HeartbeatMock
    * @constructor
    * @extends Heartbeat
    */
   var mock = {
      onBeforeNext: function onBeforeNext(f) {
         beforeNext.push(f);
      },
      onNext: function onNext(f) {
         next.push(f);
      },
      onAfterNext: function onAfterNext(f) {
         afterNext.push(f);
      },


      /**
       * Reset the internal state of the mock, clearing all `onBeforeNext`, `onNext` and `onAfterNext`
       * callbacks.
       *
       * @memberof HeartbeatMock
       */
      reset: function reset() {
         beforeNext = [];
         next = [];
         afterNext = [];
      },


      /**
       * If any `onNext` callbacks have been schedules, synchronously runs all scheduled `onBeforeNext`,
       * `onNext` and `onAfterNext` callbacks, clearing the corresponding queues in the process.
       *
       * @memberof HeartbeatMock
       */
      flush: function flush() {
         if (next.length === 0) {
            return;
         }
         [beforeNext, next, afterNext].forEach(function (queue) {
            while (queue.length) {
               queue.shift()();
            }
         });
      }
   };

   spyOn(mock, 'onNext').and.callThrough();
   spyOn(mock, 'onAfterNext').and.callThrough();
   spyOn(mock, 'onBeforeNext').and.callThrough();

   return mock;
}

/***/ }),

/***/ 158:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__artifact_provider_mock__ = __webpack_require__(153);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows instantiate a mock implementations of {@link AxAssets}, compatible to the "axAssets" injection.
 *
 * @module widget_services_assets_mock
 */





/**
 * Creates a mock for the "axAssets" injection of a widget.
 *
 * Usually the mock is created from a complete, generated assets entry, as described for the {@link AxAssets}
 * service.
 *
 * ```javascript
 *    const artifactAssets = {
 *       'myMessages.json': { content: '{"yo":42}' },
 *       'default.theme': {
 *           'some.png': { url: '/path/to/some.png' }
 *       }
 *    };
 * ```
 *
 * Assets are usually retrieved by the widget under test through the `axAssets` injection, or
 * programmatically like this:
 *
 * ```javascript
 *    const axAssetsMock = create( artifactAssets, 'other.theme' );
 *    console.log( JSON.parse( axAssetsMock( 'myMessages.json' ) ) );  // output: { yo: 42 }
 *    console.log( assetsMock.urlForTheme( 'some.png' ) );  // output: "/path/to/some.png"
 * ```
 *
 * From the test, the mock may be inspected using jasmine:
 *
 * ```javascript
 *    const axAssetsMock = create( artifactAssets );
 *    ...
 *    expect( axAssetsMock ).toHaveBeenCalledWith( 'myMessages.json' );
 *    expect( axAssetsMock.url ).toHaveBeenCalledWith( '/some/url' );
 * ```
 *
 * The specified assets/themedAssets may be replaced afterwards using the `.mock...` methods.
 * Instead of a complete entry, a user-defined entry containing just `assets` and/or `themedAssets` may be
 * used instead. Also, instead of the "default.theme", a custom theme may be passed. In this case, make sure
 * that the mock entry passed to `create` reflects this. Or use the mock
 *
 * ```javascript
 *    const axAssetsMock = create( artifactAssets, 'other.theme' );
 *    console.log( assetsMock.urlForTheme( 'some.png' ) );  // output: null
 *    axAssetsMock.mock( 'myMessages.json', '{"yo": 7}' );
 *    axAssetsMock.mockUrlForTheme( 'some.png', "/path/to/some/other.png" );
 *    console.log( JSON.parse( axAssetsMock( 'myMessages.json' ) ) );  // output: { yo: 7 }
 *    console.log( assetsMock.urlForTheme( 'some.png' ) );  // output: "/path/to/some/other.png"
 * ```
 *
 * @param {Object} [artifactAssets={}]
 *    the assets entry to base the mock on
 * @param {String} [theme='default.theme']
 *    the theme name to use. For portability, keeping the default is recommended.
 * @param {String} [artifactName='mock-widget']
 *    the artifact name, only relevant for error messages
 *
 * @return {AxAssetsMock}
 *    a mock of `axAssets` that can be spied and/or mocked with additional assets
 */
function create() {
  var artifactAssets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default.theme';
  var artifactName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mock-widget';


  var assets = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["f" /* deepClone */])(artifactAssets);

  var artifactsProviderMock = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__artifact_provider_mock__["a" /* create */])(theme);
  artifactsProviderMock.forWidget.mock(artifactName, {
    descriptor: { name: artifactName },
    assets: assets
  });
  var widgetArtifactsMock = artifactsProviderMock.forWidget(artifactName);
  var spy = function spy(name, backend) {
    return jasmine.createSpy(name).and.callFake(backend);
  };

  /**
   * An AxAssets-compatible mock.
   *
   * See {@link #create} for usage details.
   *
   * @name AxAssetsMock
   * @constructor
   * @extends AxAssets
   */
  var assetServiceMock = spy('axAssets', widgetArtifactsMock.asset);

  assetServiceMock.url = spy('axAssets.url', widgetArtifactsMock.assetUrl);
  assetServiceMock.forTheme = spy('axAssets.forTheme', widgetArtifactsMock.assetForTheme);
  assetServiceMock.urlForTheme = spy('axAssets.urlForTheme', widgetArtifactsMock.assetUrlForTheme);

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  /**
   * Mock a regular asset.
   *
   * @param {String} path
   *    the asset path to mock
   * @param {String} content
   *    the asset contents that the mock should provide. Omit to discard the asset content.
   *
   * @memberof AxAssetsMock
   */
  assetServiceMock.mock = function (path, content) {
    assets[path] = assets[path] || {};
    assets[path].content = content;
  };

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  /**
   * Mock a regular asset URL.
   *
   * @param {String} path
   *    the asset path to mock
   * @param {String} [url]
   *    the asset URL to provide. Omit to discard the asset URL.
   *
   * @memberof AxAssetsMock
   */
  assetServiceMock.mockUrl = function (path, url) {
    assets[path] = assets[path] || {};
    assets[path].url = url;
  };

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  /**
   * Mock an asset for the current theme.
   *
   * @param {String} path
   *    the theme-dependent asset path to mock
   * @param {String} [content]
   *    the asset content to provide. Omit to discard the asset content.
   *
   * @memberof AxAssetsMock
   */
  assetServiceMock.mockForTheme = function (path, content) {
    var themedAssets = assets[theme] = assets[theme] || {};
    themedAssets[path] = themedAssets[path] || {};
    themedAssets[path].content = content;
  };

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  /**
   * Mock an asset URL for the current theme.
   *
   * @param {String} path
   *    the theme-dependent asset path to mock
   * @param {String} [url]
   *    the asset URL to provide. Omit to discard the asset URL.
   *
   * @memberof AxAssetsMock
   */
  assetServiceMock.mockUrlForTheme = function (path, url) {
    var themedAssets = assets[theme] = assets[theme] || {};
    themedAssets[path] = themedAssets[path] || {};
    themedAssets[path].url = url;
  };

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////

  return assetServiceMock;
}

/***/ }),

/***/ 159:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to instantiate a mock implementation of {@link AxI18n}, compatible to "axI18n" injection.
 *
 * @module i18n_mock
 */

/**
 * Creates a mock for the "axI18n" injection of a widget.
 *
 * The mock needs to be backed by an actual i18n implementation. In widget tests, the provided implementation
 * should usually use the same context as the rest of the widget test. Feature-specific locales constructed
 * multiple times using the `forFeature` method will retain their spies over time, as long as the same mock
 * object is used.
 *
 * @param {AxI18n} i18n
 *    a specific backing {@link AxI18n} instance to return localizations from
 *
 * @return {AxI18n}
 *    a mock of `axI18n` that can be spied upon and/or mocked with additional items
 */
function create(i18n) {

   // feature instances are re-used for spies to work across `forFeature` calls
   var byFeature = {};

   var api = Object.assign({
      forFeature: forFeature,
      release: i18n.release
   }, forFeature('i18n'));

   spyOn(api, 'release').and.callThrough();

   return api;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function forFeature(path) {
      if (!(path in byFeature)) {
         (function () {
            var i18nForFeature = i18n.forFeature(path);
            Object.keys(i18nForFeature).forEach(function (method) {
               spyOn(i18nForFeature, method).and.callThrough();
            });
            byFeature[path] = i18nForFeature;
         })();
      }
      return byFeature[path];
   }
}

/***/ }),

/***/ 160:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__storage_mock__ = __webpack_require__(77);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to instantiate a mock implementations of {@link AxStorage}, compatible to the "axStorage" injection.
 *
 * @module widget_services_storage_mock
 */



/**
 * Creates a mock for the `axStorage` injection of a widget.
 *
 * @return {AxStorageMock}
 *    a mock of `axStorage` that can be spied and/or mocked with additional items
 */
function create() {

  var globalStorageMock = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__storage_mock__["a" /* create */])();
  var namespace = 'mock';

  var local = globalStorageMock.getLocalStorage(namespace);
  var session = globalStorageMock.getSessionStorage(namespace);

  /**
   * The AxStorageMock provides the same API as AxStorage, with the additional property
   * {@link #mockBackends} to inspect and/or simulate mock values in the storage backend.
   *
   * @name AxStorageMock
   * @constructor
   * @extends AxStorage
   */
  return {
    local: local,
    session: session,

    /**
     * Provides access to the backing stores for `local` and `session` storage.
     *
     * Contains `local` and `session` store properties. The stores are plain objects whose properties
     * reflect any setItem/removeItem operations. When properties are set on a store, they are observed
     * by `getItem` calls on the corresponding axStorage API.
     *
     * @memberof AxStorageMock
     */
    mockBackends: {
      local: globalStorageMock.mockBackends.local[namespace].store,
      session: globalStorageMock.mockBackends.session[namespace].store
    }
  };
}

/***/ }),

/***/ 161:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__widget_services_area_helper_mock__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__runtime_widget_services_visibility__ = __webpack_require__(152);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to instantiate a mock implementations of {@link AxVisibility}, compatible to the "axVisibility"
 * widget service injection.
 *
 * @module widget_services_visibility_mock
 */





/**
 * Creates a mock for the widget-specific "axVisibility" injection.
 *
 * @param {AxContext} context
 *   an object with an `eventBus` and a `widget.area`.
 *
 * @return {AxVisibilityMock}
 *   an `axVisibility`-compatible mock object
 */
function create(context) {
   var eventBus = context.eventBus,
       area = context.widget.area;

   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(eventBus).hasType(Object).isNotNull();
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(area).hasType(String).isNotNull();
   var areaHelperMock = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__widget_services_area_helper_mock__["a" /* create */])();

   var mockStatus = false;

   /**
    * A mock version of {@link AxVisibility}, the widget-specific "axVisibility" injection.
    *
    * The mock:
    * - spies on the regular methods,
    * - turns the update-methods into no-ops (but you can still inspect their spies),
    * - offers additional `mockShow` and `mockHide` methods, which internally use the context (mock) event bus
    *   to allow testing features that involve `track/onShow/onHide/onChange/unsubscribe`.
    *   If the (mock) event bus has a flush method, using `mockShow` and `mockHide` will automatically flush.
    *
    * @name AxVisibilityMock
    * @constructor
    * @extends AxMock
    */
   var visibility = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__runtime_widget_services_visibility__["a" /* create */])(context, areaHelperMock);
   Object.keys(visibility).forEach(function (method) {
      if (['updateAreaVisibility', 'updateWidgetVisibility'].includes(method)) {
         spyOn(visibility, method).and.callFake(function () {
            return Promise.resolve();
         });
      } else if (method === 'isVisible') {
         spyOn(visibility, method).and.callFake(function () {
            return mockStatus;
         });
      } else {
         spyOn(visibility, method).and.callThrough();
      }
   });

   /**
    * Simulates the widget's containing area becoming visible.
    * Flushes the underlying event bus mock as a side-effect.
    *
    * @memberof AxVisibilityMock
    * @type {Function}
    */
   visibility.mockShow = mockPublish(true);

   /**
    * Simulates the widget's containing area becoming hidden.
    * Flushes the underlying event bus mock as a side-effect.
    *
    * @memberof AxVisibilityMock
    * @type {Function}
    */
   visibility.mockHide = mockPublish(false);
   return visibility;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function mockPublish(visible) {
      return function () {
         mockStatus = visible;
         eventBus.publish('didChangeAreaVisibility.' + area + '.' + visible, { area: area, visible: visible });
         if (eventBus.flush) {
            eventBus.flush();
         }
      };
   }
}

/***/ }),

/***/ 162:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(80)();
// imports


// module
exports.push([module.i, "@charset \"UTF-8\";\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  /* IE < 9\n      The two src data are needed to circumvent a bug in IE for the rendering of the text.\n      IE9+ supports the type format *.woff. */\n  src: url(" + __webpack_require__(169) + ");\n  /* IE9 Compat Modes */\n  src: url(" + __webpack_require__(168) + "?#iefix&v=4.7.0) format(\"embedded-opentype\");\n  /* IE6-IE8 */\n  src: url(" + __webpack_require__(174) + "#fontawesomeregular) format(\"svg\"), url(" + __webpack_require__(171) + ") format(\"woff2\"), url(" + __webpack_require__(172) + ") format(\"woff\"), url(" + __webpack_require__(170) + ") format(\"truetype\");\n  /* Safari, Android, iOS */\n  /* To avoid a bug in Webkit-Browsers set all font-* properties to normal. */\n  font-weight: normal;\n  font-style: normal;\n  font-variant: normal;\n}\n\n.fa {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* makes the font 33% larger relative to the icon container */\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -15%;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-fw {\n  width: 1.2857142857em;\n  text-align: center;\n}\n\n.fa-ul {\n  padding-left: 0;\n  margin-left: 2.1428571429em;\n  list-style-type: none;\n}\n\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  position: absolute;\n  left: -2.1428571429em;\n  width: 2.1428571429em;\n  top: 0.1428571429em;\n  text-align: center;\n}\n\n.fa-li.fa-lg {\n  left: -1.8571428571em;\n}\n\n.fa-border {\n  padding: .2em .25em .15em;\n  border: solid 0.08em #eee;\n  border-radius: .1em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left {\n  margin-right: .3em;\n}\n\n.fa.fa-pull-right {\n  margin-left: .3em;\n}\n\n/* Deprecated as of 4.4.0 */\n.pull-right {\n  float: right;\n}\n\n.pull-left {\n  float: left;\n}\n\n.fa.pull-left {\n  margin-right: .3em;\n}\n\n.fa.pull-right {\n  margin-left: .3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n\n.fa-rotate-90 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  position: relative;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  line-height: 2em;\n  vertical-align: middle;\n}\n\n.fa-stack-1x, .fa-stack-2x {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n\n.fa-stack-1x {\n  line-height: inherit;\n}\n\n.fa-stack-2x {\n  font-size: 2em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\n   readers do not read off random characters that represent icons */\n.fa-glass:before {\n  content: \"\\F000\";\n}\n\n.fa-music:before {\n  content: \"\\F001\";\n}\n\n.fa-search:before {\n  content: \"\\F002\";\n}\n\n.fa-envelope-o:before {\n  content: \"\\F003\";\n}\n\n.fa-heart:before {\n  content: \"\\F004\";\n}\n\n.fa-star:before {\n  content: \"\\F005\";\n}\n\n.fa-star-o:before {\n  content: \"\\F006\";\n}\n\n.fa-user:before {\n  content: \"\\F007\";\n}\n\n.fa-film:before {\n  content: \"\\F008\";\n}\n\n.fa-th-large:before {\n  content: \"\\F009\";\n}\n\n.fa-th:before {\n  content: \"\\F00A\";\n}\n\n.fa-th-list:before {\n  content: \"\\F00B\";\n}\n\n.fa-check:before {\n  content: \"\\F00C\";\n}\n\n.fa-remove:before,\n.fa-close:before,\n.fa-times:before {\n  content: \"\\F00D\";\n}\n\n.fa-search-plus:before {\n  content: \"\\F00E\";\n}\n\n.fa-search-minus:before {\n  content: \"\\F010\";\n}\n\n.fa-power-off:before {\n  content: \"\\F011\";\n}\n\n.fa-signal:before {\n  content: \"\\F012\";\n}\n\n.fa-gear:before,\n.fa-cog:before {\n  content: \"\\F013\";\n}\n\n.fa-trash-o:before {\n  content: \"\\F014\";\n}\n\n.fa-home:before {\n  content: \"\\F015\";\n}\n\n.fa-file-o:before {\n  content: \"\\F016\";\n}\n\n.fa-clock-o:before {\n  content: \"\\F017\";\n}\n\n.fa-road:before {\n  content: \"\\F018\";\n}\n\n.fa-download:before {\n  content: \"\\F019\";\n}\n\n.fa-arrow-circle-o-down:before {\n  content: \"\\F01A\";\n}\n\n.fa-arrow-circle-o-up:before {\n  content: \"\\F01B\";\n}\n\n.fa-inbox:before {\n  content: \"\\F01C\";\n}\n\n.fa-play-circle-o:before {\n  content: \"\\F01D\";\n}\n\n.fa-rotate-right:before,\n.fa-repeat:before {\n  content: \"\\F01E\";\n}\n\n.fa-refresh:before {\n  content: \"\\F021\";\n}\n\n.fa-list-alt:before {\n  content: \"\\F022\";\n}\n\n.fa-lock:before {\n  content: \"\\F023\";\n}\n\n.fa-flag:before {\n  content: \"\\F024\";\n}\n\n.fa-headphones:before {\n  content: \"\\F025\";\n}\n\n.fa-volume-off:before {\n  content: \"\\F026\";\n}\n\n.fa-volume-down:before {\n  content: \"\\F027\";\n}\n\n.fa-volume-up:before {\n  content: \"\\F028\";\n}\n\n.fa-qrcode:before {\n  content: \"\\F029\";\n}\n\n.fa-barcode:before {\n  content: \"\\F02A\";\n}\n\n.fa-tag:before {\n  content: \"\\F02B\";\n}\n\n.fa-tags:before {\n  content: \"\\F02C\";\n}\n\n.fa-book:before {\n  content: \"\\F02D\";\n}\n\n.fa-bookmark:before {\n  content: \"\\F02E\";\n}\n\n.fa-print:before {\n  content: \"\\F02F\";\n}\n\n.fa-camera:before {\n  content: \"\\F030\";\n}\n\n.fa-font:before {\n  content: \"\\F031\";\n}\n\n.fa-bold:before {\n  content: \"\\F032\";\n}\n\n.fa-italic:before {\n  content: \"\\F033\";\n}\n\n.fa-text-height:before {\n  content: \"\\F034\";\n}\n\n.fa-text-width:before {\n  content: \"\\F035\";\n}\n\n.fa-align-left:before {\n  content: \"\\F036\";\n}\n\n.fa-align-center:before {\n  content: \"\\F037\";\n}\n\n.fa-align-right:before {\n  content: \"\\F038\";\n}\n\n.fa-align-justify:before {\n  content: \"\\F039\";\n}\n\n.fa-list:before {\n  content: \"\\F03A\";\n}\n\n.fa-dedent:before,\n.fa-outdent:before {\n  content: \"\\F03B\";\n}\n\n.fa-indent:before {\n  content: \"\\F03C\";\n}\n\n.fa-video-camera:before {\n  content: \"\\F03D\";\n}\n\n.fa-photo:before,\n.fa-image:before,\n.fa-picture-o:before {\n  content: \"\\F03E\";\n}\n\n.fa-pencil:before {\n  content: \"\\F040\";\n}\n\n.fa-map-marker:before {\n  content: \"\\F041\";\n}\n\n.fa-adjust:before {\n  content: \"\\F042\";\n}\n\n.fa-tint:before {\n  content: \"\\F043\";\n}\n\n.fa-edit:before,\n.fa-pencil-square-o:before {\n  content: \"\\F044\";\n}\n\n.fa-share-square-o:before {\n  content: \"\\F045\";\n}\n\n.fa-check-square-o:before {\n  content: \"\\F046\";\n}\n\n.fa-arrows:before {\n  content: \"\\F047\";\n}\n\n.fa-step-backward:before {\n  content: \"\\F048\";\n}\n\n.fa-fast-backward:before {\n  content: \"\\F049\";\n}\n\n.fa-backward:before {\n  content: \"\\F04A\";\n}\n\n.fa-play:before {\n  content: \"\\F04B\";\n}\n\n.fa-pause:before {\n  content: \"\\F04C\";\n}\n\n.fa-stop:before {\n  content: \"\\F04D\";\n}\n\n.fa-forward:before {\n  content: \"\\F04E\";\n}\n\n.fa-fast-forward:before {\n  content: \"\\F050\";\n}\n\n.fa-step-forward:before {\n  content: \"\\F051\";\n}\n\n.fa-eject:before {\n  content: \"\\F052\";\n}\n\n.fa-chevron-left:before {\n  content: \"\\F053\";\n}\n\n.fa-chevron-right:before {\n  content: \"\\F054\";\n}\n\n.fa-plus-circle:before {\n  content: \"\\F055\";\n}\n\n.fa-minus-circle:before {\n  content: \"\\F056\";\n}\n\n.fa-times-circle:before {\n  content: \"\\F057\";\n}\n\n.fa-check-circle:before {\n  content: \"\\F058\";\n}\n\n.fa-question-circle:before {\n  content: \"\\F059\";\n}\n\n.fa-info-circle:before {\n  content: \"\\F05A\";\n}\n\n.fa-crosshairs:before {\n  content: \"\\F05B\";\n}\n\n.fa-times-circle-o:before {\n  content: \"\\F05C\";\n}\n\n.fa-check-circle-o:before {\n  content: \"\\F05D\";\n}\n\n.fa-ban:before {\n  content: \"\\F05E\";\n}\n\n.fa-arrow-left:before {\n  content: \"\\F060\";\n}\n\n.fa-arrow-right:before {\n  content: \"\\F061\";\n}\n\n.fa-arrow-up:before {\n  content: \"\\F062\";\n}\n\n.fa-arrow-down:before {\n  content: \"\\F063\";\n}\n\n.fa-mail-forward:before,\n.fa-share:before {\n  content: \"\\F064\";\n}\n\n.fa-expand:before {\n  content: \"\\F065\";\n}\n\n.fa-compress:before {\n  content: \"\\F066\";\n}\n\n.fa-plus:before {\n  content: \"\\F067\";\n}\n\n.fa-minus:before {\n  content: \"\\F068\";\n}\n\n.fa-asterisk:before {\n  content: \"\\F069\";\n}\n\n.fa-exclamation-circle:before {\n  content: \"\\F06A\";\n}\n\n.fa-gift:before {\n  content: \"\\F06B\";\n}\n\n.fa-leaf:before {\n  content: \"\\F06C\";\n}\n\n.fa-fire:before {\n  content: \"\\F06D\";\n}\n\n.fa-eye:before {\n  content: \"\\F06E\";\n}\n\n.fa-eye-slash:before {\n  content: \"\\F070\";\n}\n\n.fa-warning:before,\n.fa-exclamation-triangle:before {\n  content: \"\\F071\";\n}\n\n.fa-plane:before {\n  content: \"\\F072\";\n}\n\n.fa-calendar:before {\n  content: \"\\F073\";\n}\n\n.fa-random:before {\n  content: \"\\F074\";\n}\n\n.fa-comment:before {\n  content: \"\\F075\";\n}\n\n.fa-magnet:before {\n  content: \"\\F076\";\n}\n\n.fa-chevron-up:before {\n  content: \"\\F077\";\n}\n\n.fa-chevron-down:before {\n  content: \"\\F078\";\n}\n\n.fa-retweet:before {\n  content: \"\\F079\";\n}\n\n.fa-shopping-cart:before {\n  content: \"\\F07A\";\n}\n\n.fa-folder:before {\n  content: \"\\F07B\";\n}\n\n.fa-folder-open:before {\n  content: \"\\F07C\";\n}\n\n.fa-arrows-v:before {\n  content: \"\\F07D\";\n}\n\n.fa-arrows-h:before {\n  content: \"\\F07E\";\n}\n\n.fa-bar-chart-o:before,\n.fa-bar-chart:before {\n  content: \"\\F080\";\n}\n\n.fa-twitter-square:before {\n  content: \"\\F081\";\n}\n\n.fa-facebook-square:before {\n  content: \"\\F082\";\n}\n\n.fa-camera-retro:before {\n  content: \"\\F083\";\n}\n\n.fa-key:before {\n  content: \"\\F084\";\n}\n\n.fa-gears:before,\n.fa-cogs:before {\n  content: \"\\F085\";\n}\n\n.fa-comments:before {\n  content: \"\\F086\";\n}\n\n.fa-thumbs-o-up:before {\n  content: \"\\F087\";\n}\n\n.fa-thumbs-o-down:before {\n  content: \"\\F088\";\n}\n\n.fa-star-half:before {\n  content: \"\\F089\";\n}\n\n.fa-heart-o:before {\n  content: \"\\F08A\";\n}\n\n.fa-sign-out:before {\n  content: \"\\F08B\";\n}\n\n.fa-linkedin-square:before {\n  content: \"\\F08C\";\n}\n\n.fa-thumb-tack:before {\n  content: \"\\F08D\";\n}\n\n.fa-external-link:before {\n  content: \"\\F08E\";\n}\n\n.fa-sign-in:before {\n  content: \"\\F090\";\n}\n\n.fa-trophy:before {\n  content: \"\\F091\";\n}\n\n.fa-github-square:before {\n  content: \"\\F092\";\n}\n\n.fa-upload:before {\n  content: \"\\F093\";\n}\n\n.fa-lemon-o:before {\n  content: \"\\F094\";\n}\n\n.fa-phone:before {\n  content: \"\\F095\";\n}\n\n.fa-square-o:before {\n  content: \"\\F096\";\n}\n\n.fa-bookmark-o:before {\n  content: \"\\F097\";\n}\n\n.fa-phone-square:before {\n  content: \"\\F098\";\n}\n\n.fa-twitter:before {\n  content: \"\\F099\";\n}\n\n.fa-facebook-f:before,\n.fa-facebook:before {\n  content: \"\\F09A\";\n}\n\n.fa-github:before {\n  content: \"\\F09B\";\n}\n\n.fa-unlock:before {\n  content: \"\\F09C\";\n}\n\n.fa-credit-card:before {\n  content: \"\\F09D\";\n}\n\n.fa-feed:before,\n.fa-rss:before {\n  content: \"\\F09E\";\n}\n\n.fa-hdd-o:before {\n  content: \"\\F0A0\";\n}\n\n.fa-bullhorn:before {\n  content: \"\\F0A1\";\n}\n\n.fa-bell:before {\n  content: \"\\F0F3\";\n}\n\n.fa-certificate:before {\n  content: \"\\F0A3\";\n}\n\n.fa-hand-o-right:before {\n  content: \"\\F0A4\";\n}\n\n.fa-hand-o-left:before {\n  content: \"\\F0A5\";\n}\n\n.fa-hand-o-up:before {\n  content: \"\\F0A6\";\n}\n\n.fa-hand-o-down:before {\n  content: \"\\F0A7\";\n}\n\n.fa-arrow-circle-left:before {\n  content: \"\\F0A8\";\n}\n\n.fa-arrow-circle-right:before {\n  content: \"\\F0A9\";\n}\n\n.fa-arrow-circle-up:before {\n  content: \"\\F0AA\";\n}\n\n.fa-arrow-circle-down:before {\n  content: \"\\F0AB\";\n}\n\n.fa-globe:before {\n  content: \"\\F0AC\";\n}\n\n.fa-wrench:before {\n  content: \"\\F0AD\";\n}\n\n.fa-tasks:before {\n  content: \"\\F0AE\";\n}\n\n.fa-filter:before {\n  content: \"\\F0B0\";\n}\n\n.fa-briefcase:before {\n  content: \"\\F0B1\";\n}\n\n.fa-arrows-alt:before {\n  content: \"\\F0B2\";\n}\n\n.fa-group:before,\n.fa-users:before {\n  content: \"\\F0C0\";\n}\n\n.fa-chain:before,\n.fa-link:before {\n  content: \"\\F0C1\";\n}\n\n.fa-cloud:before {\n  content: \"\\F0C2\";\n}\n\n.fa-flask:before {\n  content: \"\\F0C3\";\n}\n\n.fa-cut:before,\n.fa-scissors:before {\n  content: \"\\F0C4\";\n}\n\n.fa-copy:before,\n.fa-files-o:before {\n  content: \"\\F0C5\";\n}\n\n.fa-paperclip:before {\n  content: \"\\F0C6\";\n}\n\n.fa-save:before,\n.fa-floppy-o:before {\n  content: \"\\F0C7\";\n}\n\n.fa-square:before {\n  content: \"\\F0C8\";\n}\n\n.fa-navicon:before,\n.fa-reorder:before,\n.fa-bars:before {\n  content: \"\\F0C9\";\n}\n\n.fa-list-ul:before {\n  content: \"\\F0CA\";\n}\n\n.fa-list-ol:before {\n  content: \"\\F0CB\";\n}\n\n.fa-strikethrough:before {\n  content: \"\\F0CC\";\n}\n\n.fa-underline:before {\n  content: \"\\F0CD\";\n}\n\n.fa-table:before {\n  content: \"\\F0CE\";\n}\n\n.fa-magic:before {\n  content: \"\\F0D0\";\n}\n\n.fa-truck:before {\n  content: \"\\F0D1\";\n}\n\n.fa-pinterest:before {\n  content: \"\\F0D2\";\n}\n\n.fa-pinterest-square:before {\n  content: \"\\F0D3\";\n}\n\n.fa-google-plus-square:before {\n  content: \"\\F0D4\";\n}\n\n.fa-google-plus:before {\n  content: \"\\F0D5\";\n}\n\n.fa-money:before {\n  content: \"\\F0D6\";\n}\n\n.fa-caret-down:before {\n  content: \"\\F0D7\";\n}\n\n.fa-caret-up:before {\n  content: \"\\F0D8\";\n}\n\n.fa-caret-left:before {\n  content: \"\\F0D9\";\n}\n\n.fa-caret-right:before {\n  content: \"\\F0DA\";\n}\n\n.fa-columns:before {\n  content: \"\\F0DB\";\n}\n\n.fa-unsorted:before,\n.fa-sort:before {\n  content: \"\\F0DC\";\n}\n\n.fa-sort-down:before,\n.fa-sort-desc:before {\n  content: \"\\F0DD\";\n}\n\n.fa-sort-up:before,\n.fa-sort-asc:before {\n  content: \"\\F0DE\";\n}\n\n.fa-envelope:before {\n  content: \"\\F0E0\";\n}\n\n.fa-linkedin:before {\n  content: \"\\F0E1\";\n}\n\n.fa-rotate-left:before,\n.fa-undo:before {\n  content: \"\\F0E2\";\n}\n\n.fa-legal:before,\n.fa-gavel:before {\n  content: \"\\F0E3\";\n}\n\n.fa-dashboard:before,\n.fa-tachometer:before {\n  content: \"\\F0E4\";\n}\n\n.fa-comment-o:before {\n  content: \"\\F0E5\";\n}\n\n.fa-comments-o:before {\n  content: \"\\F0E6\";\n}\n\n.fa-flash:before,\n.fa-bolt:before {\n  content: \"\\F0E7\";\n}\n\n.fa-sitemap:before {\n  content: \"\\F0E8\";\n}\n\n.fa-umbrella:before {\n  content: \"\\F0E9\";\n}\n\n.fa-paste:before,\n.fa-clipboard:before {\n  content: \"\\F0EA\";\n}\n\n.fa-lightbulb-o:before {\n  content: \"\\F0EB\";\n}\n\n.fa-exchange:before {\n  content: \"\\F0EC\";\n}\n\n.fa-cloud-download:before {\n  content: \"\\F0ED\";\n}\n\n.fa-cloud-upload:before {\n  content: \"\\F0EE\";\n}\n\n.fa-user-md:before {\n  content: \"\\F0F0\";\n}\n\n.fa-stethoscope:before {\n  content: \"\\F0F1\";\n}\n\n.fa-suitcase:before {\n  content: \"\\F0F2\";\n}\n\n.fa-bell-o:before {\n  content: \"\\F0A2\";\n}\n\n.fa-coffee:before {\n  content: \"\\F0F4\";\n}\n\n.fa-cutlery:before {\n  content: \"\\F0F5\";\n}\n\n.fa-file-text-o:before {\n  content: \"\\F0F6\";\n}\n\n.fa-building-o:before {\n  content: \"\\F0F7\";\n}\n\n.fa-hospital-o:before {\n  content: \"\\F0F8\";\n}\n\n.fa-ambulance:before {\n  content: \"\\F0F9\";\n}\n\n.fa-medkit:before {\n  content: \"\\F0FA\";\n}\n\n.fa-fighter-jet:before {\n  content: \"\\F0FB\";\n}\n\n.fa-beer:before {\n  content: \"\\F0FC\";\n}\n\n.fa-h-square:before {\n  content: \"\\F0FD\";\n}\n\n.fa-plus-square:before {\n  content: \"\\F0FE\";\n}\n\n.fa-angle-double-left:before {\n  content: \"\\F100\";\n}\n\n.fa-angle-double-right:before {\n  content: \"\\F101\";\n}\n\n.fa-angle-double-up:before {\n  content: \"\\F102\";\n}\n\n.fa-angle-double-down:before {\n  content: \"\\F103\";\n}\n\n.fa-angle-left:before {\n  content: \"\\F104\";\n}\n\n.fa-angle-right:before {\n  content: \"\\F105\";\n}\n\n.fa-angle-up:before {\n  content: \"\\F106\";\n}\n\n.fa-angle-down:before {\n  content: \"\\F107\";\n}\n\n.fa-desktop:before {\n  content: \"\\F108\";\n}\n\n.fa-laptop:before {\n  content: \"\\F109\";\n}\n\n.fa-tablet:before {\n  content: \"\\F10A\";\n}\n\n.fa-mobile-phone:before,\n.fa-mobile:before {\n  content: \"\\F10B\";\n}\n\n.fa-circle-o:before {\n  content: \"\\F10C\";\n}\n\n.fa-quote-left:before {\n  content: \"\\F10D\";\n}\n\n.fa-quote-right:before {\n  content: \"\\F10E\";\n}\n\n.fa-spinner:before {\n  content: \"\\F110\";\n}\n\n.fa-circle:before {\n  content: \"\\F111\";\n}\n\n.fa-mail-reply:before,\n.fa-reply:before {\n  content: \"\\F112\";\n}\n\n.fa-github-alt:before {\n  content: \"\\F113\";\n}\n\n.fa-folder-o:before {\n  content: \"\\F114\";\n}\n\n.fa-folder-open-o:before {\n  content: \"\\F115\";\n}\n\n.fa-smile-o:before {\n  content: \"\\F118\";\n}\n\n.fa-frown-o:before {\n  content: \"\\F119\";\n}\n\n.fa-meh-o:before {\n  content: \"\\F11A\";\n}\n\n.fa-gamepad:before {\n  content: \"\\F11B\";\n}\n\n.fa-keyboard-o:before {\n  content: \"\\F11C\";\n}\n\n.fa-flag-o:before {\n  content: \"\\F11D\";\n}\n\n.fa-flag-checkered:before {\n  content: \"\\F11E\";\n}\n\n.fa-terminal:before {\n  content: \"\\F120\";\n}\n\n.fa-code:before {\n  content: \"\\F121\";\n}\n\n.fa-mail-reply-all:before,\n.fa-reply-all:before {\n  content: \"\\F122\";\n}\n\n.fa-star-half-empty:before,\n.fa-star-half-full:before,\n.fa-star-half-o:before {\n  content: \"\\F123\";\n}\n\n.fa-location-arrow:before {\n  content: \"\\F124\";\n}\n\n.fa-crop:before {\n  content: \"\\F125\";\n}\n\n.fa-code-fork:before {\n  content: \"\\F126\";\n}\n\n.fa-unlink:before,\n.fa-chain-broken:before {\n  content: \"\\F127\";\n}\n\n.fa-question:before {\n  content: \"\\F128\";\n}\n\n.fa-info:before {\n  content: \"\\F129\";\n}\n\n.fa-exclamation:before {\n  content: \"\\F12A\";\n}\n\n.fa-superscript:before {\n  content: \"\\F12B\";\n}\n\n.fa-subscript:before {\n  content: \"\\F12C\";\n}\n\n.fa-eraser:before {\n  content: \"\\F12D\";\n}\n\n.fa-puzzle-piece:before {\n  content: \"\\F12E\";\n}\n\n.fa-microphone:before {\n  content: \"\\F130\";\n}\n\n.fa-microphone-slash:before {\n  content: \"\\F131\";\n}\n\n.fa-shield:before {\n  content: \"\\F132\";\n}\n\n.fa-calendar-o:before {\n  content: \"\\F133\";\n}\n\n.fa-fire-extinguisher:before {\n  content: \"\\F134\";\n}\n\n.fa-rocket:before {\n  content: \"\\F135\";\n}\n\n.fa-maxcdn:before {\n  content: \"\\F136\";\n}\n\n.fa-chevron-circle-left:before {\n  content: \"\\F137\";\n}\n\n.fa-chevron-circle-right:before {\n  content: \"\\F138\";\n}\n\n.fa-chevron-circle-up:before {\n  content: \"\\F139\";\n}\n\n.fa-chevron-circle-down:before {\n  content: \"\\F13A\";\n}\n\n.fa-html5:before {\n  content: \"\\F13B\";\n}\n\n.fa-css3:before {\n  content: \"\\F13C\";\n}\n\n.fa-anchor:before {\n  content: \"\\F13D\";\n}\n\n.fa-unlock-alt:before {\n  content: \"\\F13E\";\n}\n\n.fa-bullseye:before {\n  content: \"\\F140\";\n}\n\n.fa-ellipsis-h:before {\n  content: \"\\F141\";\n}\n\n.fa-ellipsis-v:before {\n  content: \"\\F142\";\n}\n\n.fa-rss-square:before {\n  content: \"\\F143\";\n}\n\n.fa-play-circle:before {\n  content: \"\\F144\";\n}\n\n.fa-ticket:before {\n  content: \"\\F145\";\n}\n\n.fa-minus-square:before {\n  content: \"\\F146\";\n}\n\n.fa-minus-square-o:before {\n  content: \"\\F147\";\n}\n\n.fa-level-up:before {\n  content: \"\\F148\";\n}\n\n.fa-level-down:before {\n  content: \"\\F149\";\n}\n\n.fa-check-square:before {\n  content: \"\\F14A\";\n}\n\n.fa-pencil-square:before {\n  content: \"\\F14B\";\n}\n\n.fa-external-link-square:before {\n  content: \"\\F14C\";\n}\n\n.fa-share-square:before {\n  content: \"\\F14D\";\n}\n\n.fa-compass:before {\n  content: \"\\F14E\";\n}\n\n.fa-toggle-down:before,\n.fa-caret-square-o-down:before {\n  content: \"\\F150\";\n}\n\n.fa-toggle-up:before,\n.fa-caret-square-o-up:before {\n  content: \"\\F151\";\n}\n\n.fa-toggle-right:before,\n.fa-caret-square-o-right:before {\n  content: \"\\F152\";\n}\n\n.fa-euro:before,\n.fa-eur:before {\n  content: \"\\F153\";\n}\n\n.fa-gbp:before {\n  content: \"\\F154\";\n}\n\n.fa-dollar:before,\n.fa-usd:before {\n  content: \"\\F155\";\n}\n\n.fa-rupee:before,\n.fa-inr:before {\n  content: \"\\F156\";\n}\n\n.fa-cny:before,\n.fa-rmb:before,\n.fa-yen:before,\n.fa-jpy:before {\n  content: \"\\F157\";\n}\n\n.fa-ruble:before,\n.fa-rouble:before,\n.fa-rub:before {\n  content: \"\\F158\";\n}\n\n.fa-won:before,\n.fa-krw:before {\n  content: \"\\F159\";\n}\n\n.fa-bitcoin:before,\n.fa-btc:before {\n  content: \"\\F15A\";\n}\n\n.fa-file:before {\n  content: \"\\F15B\";\n}\n\n.fa-file-text:before {\n  content: \"\\F15C\";\n}\n\n.fa-sort-alpha-asc:before {\n  content: \"\\F15D\";\n}\n\n.fa-sort-alpha-desc:before {\n  content: \"\\F15E\";\n}\n\n.fa-sort-amount-asc:before {\n  content: \"\\F160\";\n}\n\n.fa-sort-amount-desc:before {\n  content: \"\\F161\";\n}\n\n.fa-sort-numeric-asc:before {\n  content: \"\\F162\";\n}\n\n.fa-sort-numeric-desc:before {\n  content: \"\\F163\";\n}\n\n.fa-thumbs-up:before {\n  content: \"\\F164\";\n}\n\n.fa-thumbs-down:before {\n  content: \"\\F165\";\n}\n\n.fa-youtube-square:before {\n  content: \"\\F166\";\n}\n\n.fa-youtube:before {\n  content: \"\\F167\";\n}\n\n.fa-xing:before {\n  content: \"\\F168\";\n}\n\n.fa-xing-square:before {\n  content: \"\\F169\";\n}\n\n.fa-youtube-play:before {\n  content: \"\\F16A\";\n}\n\n.fa-dropbox:before {\n  content: \"\\F16B\";\n}\n\n.fa-stack-overflow:before {\n  content: \"\\F16C\";\n}\n\n.fa-instagram:before {\n  content: \"\\F16D\";\n}\n\n.fa-flickr:before {\n  content: \"\\F16E\";\n}\n\n.fa-adn:before {\n  content: \"\\F170\";\n}\n\n.fa-bitbucket:before {\n  content: \"\\F171\";\n}\n\n.fa-bitbucket-square:before {\n  content: \"\\F172\";\n}\n\n.fa-tumblr:before {\n  content: \"\\F173\";\n}\n\n.fa-tumblr-square:before {\n  content: \"\\F174\";\n}\n\n.fa-long-arrow-down:before {\n  content: \"\\F175\";\n}\n\n.fa-long-arrow-up:before {\n  content: \"\\F176\";\n}\n\n.fa-long-arrow-left:before {\n  content: \"\\F177\";\n}\n\n.fa-long-arrow-right:before {\n  content: \"\\F178\";\n}\n\n.fa-apple:before {\n  content: \"\\F179\";\n}\n\n.fa-windows:before {\n  content: \"\\F17A\";\n}\n\n.fa-android:before {\n  content: \"\\F17B\";\n}\n\n.fa-linux:before {\n  content: \"\\F17C\";\n}\n\n.fa-dribbble:before {\n  content: \"\\F17D\";\n}\n\n.fa-skype:before {\n  content: \"\\F17E\";\n}\n\n.fa-foursquare:before {\n  content: \"\\F180\";\n}\n\n.fa-trello:before {\n  content: \"\\F181\";\n}\n\n.fa-female:before {\n  content: \"\\F182\";\n}\n\n.fa-male:before {\n  content: \"\\F183\";\n}\n\n.fa-gittip:before,\n.fa-gratipay:before {\n  content: \"\\F184\";\n}\n\n.fa-sun-o:before {\n  content: \"\\F185\";\n}\n\n.fa-moon-o:before {\n  content: \"\\F186\";\n}\n\n.fa-archive:before {\n  content: \"\\F187\";\n}\n\n.fa-bug:before {\n  content: \"\\F188\";\n}\n\n.fa-vk:before {\n  content: \"\\F189\";\n}\n\n.fa-weibo:before {\n  content: \"\\F18A\";\n}\n\n.fa-renren:before {\n  content: \"\\F18B\";\n}\n\n.fa-pagelines:before {\n  content: \"\\F18C\";\n}\n\n.fa-stack-exchange:before {\n  content: \"\\F18D\";\n}\n\n.fa-arrow-circle-o-right:before {\n  content: \"\\F18E\";\n}\n\n.fa-arrow-circle-o-left:before {\n  content: \"\\F190\";\n}\n\n.fa-toggle-left:before,\n.fa-caret-square-o-left:before {\n  content: \"\\F191\";\n}\n\n.fa-dot-circle-o:before {\n  content: \"\\F192\";\n}\n\n.fa-wheelchair:before {\n  content: \"\\F193\";\n}\n\n.fa-vimeo-square:before {\n  content: \"\\F194\";\n}\n\n.fa-turkish-lira:before,\n.fa-try:before {\n  content: \"\\F195\";\n}\n\n.fa-plus-square-o:before {\n  content: \"\\F196\";\n}\n\n.fa-space-shuttle:before {\n  content: \"\\F197\";\n}\n\n.fa-slack:before {\n  content: \"\\F198\";\n}\n\n.fa-envelope-square:before {\n  content: \"\\F199\";\n}\n\n.fa-wordpress:before {\n  content: \"\\F19A\";\n}\n\n.fa-openid:before {\n  content: \"\\F19B\";\n}\n\n.fa-institution:before,\n.fa-bank:before,\n.fa-university:before {\n  content: \"\\F19C\";\n}\n\n.fa-mortar-board:before,\n.fa-graduation-cap:before {\n  content: \"\\F19D\";\n}\n\n.fa-yahoo:before {\n  content: \"\\F19E\";\n}\n\n.fa-google:before {\n  content: \"\\F1A0\";\n}\n\n.fa-reddit:before {\n  content: \"\\F1A1\";\n}\n\n.fa-reddit-square:before {\n  content: \"\\F1A2\";\n}\n\n.fa-stumbleupon-circle:before {\n  content: \"\\F1A3\";\n}\n\n.fa-stumbleupon:before {\n  content: \"\\F1A4\";\n}\n\n.fa-delicious:before {\n  content: \"\\F1A5\";\n}\n\n.fa-digg:before {\n  content: \"\\F1A6\";\n}\n\n.fa-pied-piper-pp:before {\n  content: \"\\F1A7\";\n}\n\n.fa-pied-piper-alt:before {\n  content: \"\\F1A8\";\n}\n\n.fa-drupal:before {\n  content: \"\\F1A9\";\n}\n\n.fa-joomla:before {\n  content: \"\\F1AA\";\n}\n\n.fa-language:before {\n  content: \"\\F1AB\";\n}\n\n.fa-fax:before {\n  content: \"\\F1AC\";\n}\n\n.fa-building:before {\n  content: \"\\F1AD\";\n}\n\n.fa-child:before {\n  content: \"\\F1AE\";\n}\n\n.fa-paw:before {\n  content: \"\\F1B0\";\n}\n\n.fa-spoon:before {\n  content: \"\\F1B1\";\n}\n\n.fa-cube:before {\n  content: \"\\F1B2\";\n}\n\n.fa-cubes:before {\n  content: \"\\F1B3\";\n}\n\n.fa-behance:before {\n  content: \"\\F1B4\";\n}\n\n.fa-behance-square:before {\n  content: \"\\F1B5\";\n}\n\n.fa-steam:before {\n  content: \"\\F1B6\";\n}\n\n.fa-steam-square:before {\n  content: \"\\F1B7\";\n}\n\n.fa-recycle:before {\n  content: \"\\F1B8\";\n}\n\n.fa-automobile:before,\n.fa-car:before {\n  content: \"\\F1B9\";\n}\n\n.fa-cab:before,\n.fa-taxi:before {\n  content: \"\\F1BA\";\n}\n\n.fa-tree:before {\n  content: \"\\F1BB\";\n}\n\n.fa-spotify:before {\n  content: \"\\F1BC\";\n}\n\n.fa-deviantart:before {\n  content: \"\\F1BD\";\n}\n\n.fa-soundcloud:before {\n  content: \"\\F1BE\";\n}\n\n.fa-database:before {\n  content: \"\\F1C0\";\n}\n\n.fa-file-pdf-o:before {\n  content: \"\\F1C1\";\n}\n\n.fa-file-word-o:before {\n  content: \"\\F1C2\";\n}\n\n.fa-file-excel-o:before {\n  content: \"\\F1C3\";\n}\n\n.fa-file-powerpoint-o:before {\n  content: \"\\F1C4\";\n}\n\n.fa-file-photo-o:before,\n.fa-file-picture-o:before,\n.fa-file-image-o:before {\n  content: \"\\F1C5\";\n}\n\n.fa-file-zip-o:before,\n.fa-file-archive-o:before {\n  content: \"\\F1C6\";\n}\n\n.fa-file-sound-o:before,\n.fa-file-audio-o:before {\n  content: \"\\F1C7\";\n}\n\n.fa-file-movie-o:before,\n.fa-file-video-o:before {\n  content: \"\\F1C8\";\n}\n\n.fa-file-code-o:before {\n  content: \"\\F1C9\";\n}\n\n.fa-vine:before {\n  content: \"\\F1CA\";\n}\n\n.fa-codepen:before {\n  content: \"\\F1CB\";\n}\n\n.fa-jsfiddle:before {\n  content: \"\\F1CC\";\n}\n\n.fa-life-bouy:before,\n.fa-life-buoy:before,\n.fa-life-saver:before,\n.fa-support:before,\n.fa-life-ring:before {\n  content: \"\\F1CD\";\n}\n\n.fa-circle-o-notch:before {\n  content: \"\\F1CE\";\n}\n\n.fa-ra:before,\n.fa-resistance:before,\n.fa-rebel:before {\n  content: \"\\F1D0\";\n}\n\n.fa-ge:before,\n.fa-empire:before {\n  content: \"\\F1D1\";\n}\n\n.fa-git-square:before {\n  content: \"\\F1D2\";\n}\n\n.fa-git:before {\n  content: \"\\F1D3\";\n}\n\n.fa-y-combinator-square:before,\n.fa-yc-square:before,\n.fa-hacker-news:before {\n  content: \"\\F1D4\";\n}\n\n.fa-tencent-weibo:before {\n  content: \"\\F1D5\";\n}\n\n.fa-qq:before {\n  content: \"\\F1D6\";\n}\n\n.fa-wechat:before,\n.fa-weixin:before {\n  content: \"\\F1D7\";\n}\n\n.fa-send:before,\n.fa-paper-plane:before {\n  content: \"\\F1D8\";\n}\n\n.fa-send-o:before,\n.fa-paper-plane-o:before {\n  content: \"\\F1D9\";\n}\n\n.fa-history:before {\n  content: \"\\F1DA\";\n}\n\n.fa-circle-thin:before {\n  content: \"\\F1DB\";\n}\n\n.fa-header:before {\n  content: \"\\F1DC\";\n}\n\n.fa-paragraph:before {\n  content: \"\\F1DD\";\n}\n\n.fa-sliders:before {\n  content: \"\\F1DE\";\n}\n\n.fa-share-alt:before {\n  content: \"\\F1E0\";\n}\n\n.fa-share-alt-square:before {\n  content: \"\\F1E1\";\n}\n\n.fa-bomb:before {\n  content: \"\\F1E2\";\n}\n\n.fa-soccer-ball-o:before,\n.fa-futbol-o:before {\n  content: \"\\F1E3\";\n}\n\n.fa-tty:before {\n  content: \"\\F1E4\";\n}\n\n.fa-binoculars:before {\n  content: \"\\F1E5\";\n}\n\n.fa-plug:before {\n  content: \"\\F1E6\";\n}\n\n.fa-slideshare:before {\n  content: \"\\F1E7\";\n}\n\n.fa-twitch:before {\n  content: \"\\F1E8\";\n}\n\n.fa-yelp:before {\n  content: \"\\F1E9\";\n}\n\n.fa-newspaper-o:before {\n  content: \"\\F1EA\";\n}\n\n.fa-wifi:before {\n  content: \"\\F1EB\";\n}\n\n.fa-calculator:before {\n  content: \"\\F1EC\";\n}\n\n.fa-paypal:before {\n  content: \"\\F1ED\";\n}\n\n.fa-google-wallet:before {\n  content: \"\\F1EE\";\n}\n\n.fa-cc-visa:before {\n  content: \"\\F1F0\";\n}\n\n.fa-cc-mastercard:before {\n  content: \"\\F1F1\";\n}\n\n.fa-cc-discover:before {\n  content: \"\\F1F2\";\n}\n\n.fa-cc-amex:before {\n  content: \"\\F1F3\";\n}\n\n.fa-cc-paypal:before {\n  content: \"\\F1F4\";\n}\n\n.fa-cc-stripe:before {\n  content: \"\\F1F5\";\n}\n\n.fa-bell-slash:before {\n  content: \"\\F1F6\";\n}\n\n.fa-bell-slash-o:before {\n  content: \"\\F1F7\";\n}\n\n.fa-trash:before {\n  content: \"\\F1F8\";\n}\n\n.fa-copyright:before {\n  content: \"\\F1F9\";\n}\n\n.fa-at:before {\n  content: \"\\F1FA\";\n}\n\n.fa-eyedropper:before {\n  content: \"\\F1FB\";\n}\n\n.fa-paint-brush:before {\n  content: \"\\F1FC\";\n}\n\n.fa-birthday-cake:before {\n  content: \"\\F1FD\";\n}\n\n.fa-area-chart:before {\n  content: \"\\F1FE\";\n}\n\n.fa-pie-chart:before {\n  content: \"\\F200\";\n}\n\n.fa-line-chart:before {\n  content: \"\\F201\";\n}\n\n.fa-lastfm:before {\n  content: \"\\F202\";\n}\n\n.fa-lastfm-square:before {\n  content: \"\\F203\";\n}\n\n.fa-toggle-off:before {\n  content: \"\\F204\";\n}\n\n.fa-toggle-on:before {\n  content: \"\\F205\";\n}\n\n.fa-bicycle:before {\n  content: \"\\F206\";\n}\n\n.fa-bus:before {\n  content: \"\\F207\";\n}\n\n.fa-ioxhost:before {\n  content: \"\\F208\";\n}\n\n.fa-angellist:before {\n  content: \"\\F209\";\n}\n\n.fa-cc:before {\n  content: \"\\F20A\";\n}\n\n.fa-shekel:before,\n.fa-sheqel:before,\n.fa-ils:before {\n  content: \"\\F20B\";\n}\n\n.fa-meanpath:before {\n  content: \"\\F20C\";\n}\n\n.fa-buysellads:before {\n  content: \"\\F20D\";\n}\n\n.fa-connectdevelop:before {\n  content: \"\\F20E\";\n}\n\n.fa-dashcube:before {\n  content: \"\\F210\";\n}\n\n.fa-forumbee:before {\n  content: \"\\F211\";\n}\n\n.fa-leanpub:before {\n  content: \"\\F212\";\n}\n\n.fa-sellsy:before {\n  content: \"\\F213\";\n}\n\n.fa-shirtsinbulk:before {\n  content: \"\\F214\";\n}\n\n.fa-simplybuilt:before {\n  content: \"\\F215\";\n}\n\n.fa-skyatlas:before {\n  content: \"\\F216\";\n}\n\n.fa-cart-plus:before {\n  content: \"\\F217\";\n}\n\n.fa-cart-arrow-down:before {\n  content: \"\\F218\";\n}\n\n.fa-diamond:before {\n  content: \"\\F219\";\n}\n\n.fa-ship:before {\n  content: \"\\F21A\";\n}\n\n.fa-user-secret:before {\n  content: \"\\F21B\";\n}\n\n.fa-motorcycle:before {\n  content: \"\\F21C\";\n}\n\n.fa-street-view:before {\n  content: \"\\F21D\";\n}\n\n.fa-heartbeat:before {\n  content: \"\\F21E\";\n}\n\n.fa-venus:before {\n  content: \"\\F221\";\n}\n\n.fa-mars:before {\n  content: \"\\F222\";\n}\n\n.fa-mercury:before {\n  content: \"\\F223\";\n}\n\n.fa-intersex:before,\n.fa-transgender:before {\n  content: \"\\F224\";\n}\n\n.fa-transgender-alt:before {\n  content: \"\\F225\";\n}\n\n.fa-venus-double:before {\n  content: \"\\F226\";\n}\n\n.fa-mars-double:before {\n  content: \"\\F227\";\n}\n\n.fa-venus-mars:before {\n  content: \"\\F228\";\n}\n\n.fa-mars-stroke:before {\n  content: \"\\F229\";\n}\n\n.fa-mars-stroke-v:before {\n  content: \"\\F22A\";\n}\n\n.fa-mars-stroke-h:before {\n  content: \"\\F22B\";\n}\n\n.fa-neuter:before {\n  content: \"\\F22C\";\n}\n\n.fa-genderless:before {\n  content: \"\\F22D\";\n}\n\n.fa-facebook-official:before {\n  content: \"\\F230\";\n}\n\n.fa-pinterest-p:before {\n  content: \"\\F231\";\n}\n\n.fa-whatsapp:before {\n  content: \"\\F232\";\n}\n\n.fa-server:before {\n  content: \"\\F233\";\n}\n\n.fa-user-plus:before {\n  content: \"\\F234\";\n}\n\n.fa-user-times:before {\n  content: \"\\F235\";\n}\n\n.fa-hotel:before,\n.fa-bed:before {\n  content: \"\\F236\";\n}\n\n.fa-viacoin:before {\n  content: \"\\F237\";\n}\n\n.fa-train:before {\n  content: \"\\F238\";\n}\n\n.fa-subway:before {\n  content: \"\\F239\";\n}\n\n.fa-medium:before {\n  content: \"\\F23A\";\n}\n\n.fa-yc:before,\n.fa-y-combinator:before {\n  content: \"\\F23B\";\n}\n\n.fa-optin-monster:before {\n  content: \"\\F23C\";\n}\n\n.fa-opencart:before {\n  content: \"\\F23D\";\n}\n\n.fa-expeditedssl:before {\n  content: \"\\F23E\";\n}\n\n.fa-battery-4:before,\n.fa-battery:before,\n.fa-battery-full:before {\n  content: \"\\F240\";\n}\n\n.fa-battery-3:before,\n.fa-battery-three-quarters:before {\n  content: \"\\F241\";\n}\n\n.fa-battery-2:before,\n.fa-battery-half:before {\n  content: \"\\F242\";\n}\n\n.fa-battery-1:before,\n.fa-battery-quarter:before {\n  content: \"\\F243\";\n}\n\n.fa-battery-0:before,\n.fa-battery-empty:before {\n  content: \"\\F244\";\n}\n\n.fa-mouse-pointer:before {\n  content: \"\\F245\";\n}\n\n.fa-i-cursor:before {\n  content: \"\\F246\";\n}\n\n.fa-object-group:before {\n  content: \"\\F247\";\n}\n\n.fa-object-ungroup:before {\n  content: \"\\F248\";\n}\n\n.fa-sticky-note:before {\n  content: \"\\F249\";\n}\n\n.fa-sticky-note-o:before {\n  content: \"\\F24A\";\n}\n\n.fa-cc-jcb:before {\n  content: \"\\F24B\";\n}\n\n.fa-cc-diners-club:before {\n  content: \"\\F24C\";\n}\n\n.fa-clone:before {\n  content: \"\\F24D\";\n}\n\n.fa-balance-scale:before {\n  content: \"\\F24E\";\n}\n\n.fa-hourglass-o:before {\n  content: \"\\F250\";\n}\n\n.fa-hourglass-1:before,\n.fa-hourglass-start:before {\n  content: \"\\F251\";\n}\n\n.fa-hourglass-2:before,\n.fa-hourglass-half:before {\n  content: \"\\F252\";\n}\n\n.fa-hourglass-3:before,\n.fa-hourglass-end:before {\n  content: \"\\F253\";\n}\n\n.fa-hourglass:before {\n  content: \"\\F254\";\n}\n\n.fa-hand-grab-o:before,\n.fa-hand-rock-o:before {\n  content: \"\\F255\";\n}\n\n.fa-hand-stop-o:before,\n.fa-hand-paper-o:before {\n  content: \"\\F256\";\n}\n\n.fa-hand-scissors-o:before {\n  content: \"\\F257\";\n}\n\n.fa-hand-lizard-o:before {\n  content: \"\\F258\";\n}\n\n.fa-hand-spock-o:before {\n  content: \"\\F259\";\n}\n\n.fa-hand-pointer-o:before {\n  content: \"\\F25A\";\n}\n\n.fa-hand-peace-o:before {\n  content: \"\\F25B\";\n}\n\n.fa-trademark:before {\n  content: \"\\F25C\";\n}\n\n.fa-registered:before {\n  content: \"\\F25D\";\n}\n\n.fa-creative-commons:before {\n  content: \"\\F25E\";\n}\n\n.fa-gg:before {\n  content: \"\\F260\";\n}\n\n.fa-gg-circle:before {\n  content: \"\\F261\";\n}\n\n.fa-tripadvisor:before {\n  content: \"\\F262\";\n}\n\n.fa-odnoklassniki:before {\n  content: \"\\F263\";\n}\n\n.fa-odnoklassniki-square:before {\n  content: \"\\F264\";\n}\n\n.fa-get-pocket:before {\n  content: \"\\F265\";\n}\n\n.fa-wikipedia-w:before {\n  content: \"\\F266\";\n}\n\n.fa-safari:before {\n  content: \"\\F267\";\n}\n\n.fa-chrome:before {\n  content: \"\\F268\";\n}\n\n.fa-firefox:before {\n  content: \"\\F269\";\n}\n\n.fa-opera:before {\n  content: \"\\F26A\";\n}\n\n.fa-internet-explorer:before {\n  content: \"\\F26B\";\n}\n\n.fa-tv:before,\n.fa-television:before {\n  content: \"\\F26C\";\n}\n\n.fa-contao:before {\n  content: \"\\F26D\";\n}\n\n.fa-500px:before {\n  content: \"\\F26E\";\n}\n\n.fa-amazon:before {\n  content: \"\\F270\";\n}\n\n.fa-calendar-plus-o:before {\n  content: \"\\F271\";\n}\n\n.fa-calendar-minus-o:before {\n  content: \"\\F272\";\n}\n\n.fa-calendar-times-o:before {\n  content: \"\\F273\";\n}\n\n.fa-calendar-check-o:before {\n  content: \"\\F274\";\n}\n\n.fa-industry:before {\n  content: \"\\F275\";\n}\n\n.fa-map-pin:before {\n  content: \"\\F276\";\n}\n\n.fa-map-signs:before {\n  content: \"\\F277\";\n}\n\n.fa-map-o:before {\n  content: \"\\F278\";\n}\n\n.fa-map:before {\n  content: \"\\F279\";\n}\n\n.fa-commenting:before {\n  content: \"\\F27A\";\n}\n\n.fa-commenting-o:before {\n  content: \"\\F27B\";\n}\n\n.fa-houzz:before {\n  content: \"\\F27C\";\n}\n\n.fa-vimeo:before {\n  content: \"\\F27D\";\n}\n\n.fa-black-tie:before {\n  content: \"\\F27E\";\n}\n\n.fa-fonticons:before {\n  content: \"\\F280\";\n}\n\n.fa-reddit-alien:before {\n  content: \"\\F281\";\n}\n\n.fa-edge:before {\n  content: \"\\F282\";\n}\n\n.fa-credit-card-alt:before {\n  content: \"\\F283\";\n}\n\n.fa-codiepie:before {\n  content: \"\\F284\";\n}\n\n.fa-modx:before {\n  content: \"\\F285\";\n}\n\n.fa-fort-awesome:before {\n  content: \"\\F286\";\n}\n\n.fa-usb:before {\n  content: \"\\F287\";\n}\n\n.fa-product-hunt:before {\n  content: \"\\F288\";\n}\n\n.fa-mixcloud:before {\n  content: \"\\F289\";\n}\n\n.fa-scribd:before {\n  content: \"\\F28A\";\n}\n\n.fa-pause-circle:before {\n  content: \"\\F28B\";\n}\n\n.fa-pause-circle-o:before {\n  content: \"\\F28C\";\n}\n\n.fa-stop-circle:before {\n  content: \"\\F28D\";\n}\n\n.fa-stop-circle-o:before {\n  content: \"\\F28E\";\n}\n\n.fa-shopping-bag:before {\n  content: \"\\F290\";\n}\n\n.fa-shopping-basket:before {\n  content: \"\\F291\";\n}\n\n.fa-hashtag:before {\n  content: \"\\F292\";\n}\n\n.fa-bluetooth:before {\n  content: \"\\F293\";\n}\n\n.fa-bluetooth-b:before {\n  content: \"\\F294\";\n}\n\n.fa-percent:before {\n  content: \"\\F295\";\n}\n\n.fa-gitlab:before {\n  content: \"\\F296\";\n}\n\n.fa-wpbeginner:before {\n  content: \"\\F297\";\n}\n\n.fa-wpforms:before {\n  content: \"\\F298\";\n}\n\n.fa-envira:before {\n  content: \"\\F299\";\n}\n\n.fa-universal-access:before {\n  content: \"\\F29A\";\n}\n\n.fa-wheelchair-alt:before {\n  content: \"\\F29B\";\n}\n\n.fa-question-circle-o:before {\n  content: \"\\F29C\";\n}\n\n.fa-blind:before {\n  content: \"\\F29D\";\n}\n\n.fa-audio-description:before {\n  content: \"\\F29E\";\n}\n\n.fa-volume-control-phone:before {\n  content: \"\\F2A0\";\n}\n\n.fa-braille:before {\n  content: \"\\F2A1\";\n}\n\n.fa-assistive-listening-systems:before {\n  content: \"\\F2A2\";\n}\n\n.fa-asl-interpreting:before,\n.fa-american-sign-language-interpreting:before {\n  content: \"\\F2A3\";\n}\n\n.fa-deafness:before,\n.fa-hard-of-hearing:before,\n.fa-deaf:before {\n  content: \"\\F2A4\";\n}\n\n.fa-glide:before {\n  content: \"\\F2A5\";\n}\n\n.fa-glide-g:before {\n  content: \"\\F2A6\";\n}\n\n.fa-signing:before,\n.fa-sign-language:before {\n  content: \"\\F2A7\";\n}\n\n.fa-low-vision:before {\n  content: \"\\F2A8\";\n}\n\n.fa-viadeo:before {\n  content: \"\\F2A9\";\n}\n\n.fa-viadeo-square:before {\n  content: \"\\F2AA\";\n}\n\n.fa-snapchat:before {\n  content: \"\\F2AB\";\n}\n\n.fa-snapchat-ghost:before {\n  content: \"\\F2AC\";\n}\n\n.fa-snapchat-square:before {\n  content: \"\\F2AD\";\n}\n\n.fa-pied-piper:before {\n  content: \"\\F2AE\";\n}\n\n.fa-first-order:before {\n  content: \"\\F2B0\";\n}\n\n.fa-yoast:before {\n  content: \"\\F2B1\";\n}\n\n.fa-themeisle:before {\n  content: \"\\F2B2\";\n}\n\n.fa-google-plus-circle:before,\n.fa-google-plus-official:before {\n  content: \"\\F2B3\";\n}\n\n.fa-fa:before,\n.fa-font-awesome:before {\n  content: \"\\F2B4\";\n}\n\n.fa-handshake-o:before {\n  content: \"\\F2B5\";\n}\n\n.fa-envelope-open:before {\n  content: \"\\F2B6\";\n}\n\n.fa-envelope-open-o:before {\n  content: \"\\F2B7\";\n}\n\n.fa-linode:before {\n  content: \"\\F2B8\";\n}\n\n.fa-address-book:before {\n  content: \"\\F2B9\";\n}\n\n.fa-address-book-o:before {\n  content: \"\\F2BA\";\n}\n\n.fa-vcard:before,\n.fa-address-card:before {\n  content: \"\\F2BB\";\n}\n\n.fa-vcard-o:before,\n.fa-address-card-o:before {\n  content: \"\\F2BC\";\n}\n\n.fa-user-circle:before {\n  content: \"\\F2BD\";\n}\n\n.fa-user-circle-o:before {\n  content: \"\\F2BE\";\n}\n\n.fa-user-o:before {\n  content: \"\\F2C0\";\n}\n\n.fa-id-badge:before {\n  content: \"\\F2C1\";\n}\n\n.fa-drivers-license:before,\n.fa-id-card:before {\n  content: \"\\F2C2\";\n}\n\n.fa-drivers-license-o:before,\n.fa-id-card-o:before {\n  content: \"\\F2C3\";\n}\n\n.fa-quora:before {\n  content: \"\\F2C4\";\n}\n\n.fa-free-code-camp:before {\n  content: \"\\F2C5\";\n}\n\n.fa-telegram:before {\n  content: \"\\F2C6\";\n}\n\n.fa-thermometer-4:before,\n.fa-thermometer:before,\n.fa-thermometer-full:before {\n  content: \"\\F2C7\";\n}\n\n.fa-thermometer-3:before,\n.fa-thermometer-three-quarters:before {\n  content: \"\\F2C8\";\n}\n\n.fa-thermometer-2:before,\n.fa-thermometer-half:before {\n  content: \"\\F2C9\";\n}\n\n.fa-thermometer-1:before,\n.fa-thermometer-quarter:before {\n  content: \"\\F2CA\";\n}\n\n.fa-thermometer-0:before,\n.fa-thermometer-empty:before {\n  content: \"\\F2CB\";\n}\n\n.fa-shower:before {\n  content: \"\\F2CC\";\n}\n\n.fa-bathtub:before,\n.fa-s15:before,\n.fa-bath:before {\n  content: \"\\F2CD\";\n}\n\n.fa-podcast:before {\n  content: \"\\F2CE\";\n}\n\n.fa-window-maximize:before {\n  content: \"\\F2D0\";\n}\n\n.fa-window-minimize:before {\n  content: \"\\F2D1\";\n}\n\n.fa-window-restore:before {\n  content: \"\\F2D2\";\n}\n\n.fa-times-rectangle:before,\n.fa-window-close:before {\n  content: \"\\F2D3\";\n}\n\n.fa-times-rectangle-o:before,\n.fa-window-close-o:before {\n  content: \"\\F2D4\";\n}\n\n.fa-bandcamp:before {\n  content: \"\\F2D5\";\n}\n\n.fa-grav:before {\n  content: \"\\F2D6\";\n}\n\n.fa-etsy:before {\n  content: \"\\F2D7\";\n}\n\n.fa-imdb:before {\n  content: \"\\F2D8\";\n}\n\n.fa-ravelry:before {\n  content: \"\\F2D9\";\n}\n\n.fa-eercast:before {\n  content: \"\\F2DA\";\n}\n\n.fa-microchip:before {\n  content: \"\\F2DB\";\n}\n\n.fa-snowflake-o:before {\n  content: \"\\F2DC\";\n}\n\n.fa-superpowers:before {\n  content: \"\\F2DD\";\n}\n\n.fa-wpexplorer:before {\n  content: \"\\F2DE\";\n}\n\n.fa-meetup:before {\n  content: \"\\F2E0\";\n}\n\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n[hidden],\ntemplate {\n  display: none;\n}\n\na {\n  background-color: transparent;\n}\n\na:active,\na:hover {\n  outline: 0;\n}\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\nb,\nstrong {\n  font-weight: bold;\n}\n\ndfn {\n  font-style: italic;\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nimg {\n  border: 0;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\nfigure {\n  margin: 1em 40px;\n}\n\nhr {\n  -moz-box-sizing: content-box;\n       box-sizing: content-box;\n  height: 0;\n}\n\npre {\n  overflow: auto;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\nbutton {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\ninput {\n  line-height: normal;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  -moz-box-sizing: border-box;\n       box-sizing: border-box;\n  padding: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  -moz-box-sizing: content-box;\n       box-sizing: content-box;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\nlegend {\n  border: 0;\n  padding: 0;\n}\n\ntextarea {\n  overflow: auto;\n}\n\noptgroup {\n  font-weight: bold;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\n/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */\n@media print {\n  *,\n  *:before,\n  *:after {\n    background: transparent !important;\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important;\n  }\n  a,\n  a:visited {\n    text-decoration: underline;\n  }\n  a[href]:after {\n    content: \" (\" attr(href) \")\";\n  }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\";\n  }\n  pre,\n  blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid;\n  }\n  thead {\n    display: table-header-group;\n  }\n  tr,\n  img {\n    page-break-inside: avoid;\n  }\n  img {\n    max-width: 100% !important;\n  }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3;\n  }\n  h2,\n  h3 {\n    page-break-after: avoid;\n  }\n  .navbar {\n    display: none;\n  }\n  .btn > .caret,\n  .dropup > .btn > .caret {\n    border-top-color: #000 !important;\n  }\n  .label {\n    border: 1px solid #000;\n  }\n  .table {\n    border-collapse: collapse !important;\n  }\n  .table td,\n  .table th {\n    background-color: #fff !important;\n  }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #ddd !important;\n  }\n}\n\n* {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n*:before,\n*:after {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 10px;\n  -webkit-tap-highlight-color: transparent;\n}\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.428571429;\n  color: #333333;\n  background-color: #fff;\n}\n\ninput,\nbutton,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\na {\n  color: #337ab7;\n  text-decoration: none;\n}\n\na:hover, a:focus {\n  color: #23527c;\n  text-decoration: underline;\n}\n\na:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\n\nfigure {\n  margin: 0;\n}\n\nimg {\n  vertical-align: middle;\n}\n\n.img-responsive {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\n.img-rounded {\n  border-radius: 6px;\n}\n\n.img-thumbnail {\n  padding: 4px;\n  line-height: 1.428571429;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out;\n  display: inline-block;\n  max-width: 100%;\n  height: auto;\n}\n\n.img-circle {\n  border-radius: 50%;\n}\n\nhr {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border: 0;\n  border-top: 1px solid #eeeeee;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto;\n}\n\n[role=\"button\"] {\n  cursor: pointer;\n}\n\nh1, h2, h3, h4, h5, h6,\n.h1, .h2, .h3, .h4, .h5, .h6 {\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit;\n}\n\nh1 small,\nh1 .small, h2 small,\nh2 .small, h3 small,\nh3 .small, h4 small,\nh4 .small, h5 small,\nh5 .small, h6 small,\nh6 .small,\n.h1 small,\n.h1 .small, .h2 small,\n.h2 .small, .h3 small,\n.h3 .small, .h4 small,\n.h4 .small, .h5 small,\n.h5 .small, .h6 small,\n.h6 .small {\n  font-weight: normal;\n  line-height: 1;\n  color: #777777;\n}\n\nh1, .h1,\nh2, .h2,\nh3, .h3 {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\nh1 small,\nh1 .small, .h1 small,\n.h1 .small,\nh2 small,\nh2 .small, .h2 small,\n.h2 .small,\nh3 small,\nh3 .small, .h3 small,\n.h3 .small {\n  font-size: 65%;\n}\n\nh4, .h4,\nh5, .h5,\nh6, .h6 {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\nh4 small,\nh4 .small, .h4 small,\n.h4 .small,\nh5 small,\nh5 .small, .h5 small,\n.h5 .small,\nh6 small,\nh6 .small, .h6 small,\n.h6 .small {\n  font-size: 75%;\n}\n\nh1, .h1 {\n  font-size: 36px;\n}\n\nh2, .h2 {\n  font-size: 30px;\n}\n\nh3, .h3 {\n  font-size: 24px;\n}\n\nh4, .h4 {\n  font-size: 18px;\n}\n\nh5, .h5 {\n  font-size: 14px;\n}\n\nh6, .h6 {\n  font-size: 12px;\n}\n\np {\n  margin: 0 0 10px;\n}\n\n.lead {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.4;\n}\n\n@media (min-width: 768px) {\n  .lead {\n    font-size: 21px;\n  }\n}\n\nsmall,\n.small {\n  font-size: 85%;\n}\n\nmark,\n.mark {\n  background-color: #fcf8e3;\n  padding: .2em;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.text-nowrap {\n  white-space: nowrap;\n}\n\n.text-lowercase {\n  text-transform: lowercase;\n}\n\n.text-uppercase, .initialism {\n  text-transform: uppercase;\n}\n\n.text-capitalize {\n  text-transform: capitalize;\n}\n\n.text-muted {\n  color: #777777;\n}\n\n.text-primary {\n  color: #337ab7;\n}\n\na.text-primary:hover,\na.text-primary:focus {\n  color: #286090;\n}\n\n.text-success {\n  color: #3c763d;\n}\n\na.text-success:hover,\na.text-success:focus {\n  color: #2b542c;\n}\n\n.text-info {\n  color: #31708f;\n}\n\na.text-info:hover,\na.text-info:focus {\n  color: #245269;\n}\n\n.text-warning {\n  color: #8a6d3b;\n}\n\na.text-warning:hover,\na.text-warning:focus {\n  color: #66512c;\n}\n\n.text-danger {\n  color: #a94442;\n}\n\na.text-danger:hover,\na.text-danger:focus {\n  color: #843534;\n}\n\n.bg-primary {\n  color: #fff;\n}\n\n.bg-primary {\n  background-color: #337ab7;\n}\n\na.bg-primary:hover,\na.bg-primary:focus {\n  background-color: #286090;\n}\n\n.bg-success {\n  background-color: #dff0d8;\n}\n\na.bg-success:hover,\na.bg-success:focus {\n  background-color: #c1e2b3;\n}\n\n.bg-info {\n  background-color: #d9edf7;\n}\n\na.bg-info:hover,\na.bg-info:focus {\n  background-color: #afd9ee;\n}\n\n.bg-warning {\n  background-color: #fcf8e3;\n}\n\na.bg-warning:hover,\na.bg-warning:focus {\n  background-color: #f7ecb5;\n}\n\n.bg-danger {\n  background-color: #f2dede;\n}\n\na.bg-danger:hover,\na.bg-danger:focus {\n  background-color: #e4b9b9;\n}\n\n.page-header {\n  padding-bottom: 9px;\n  margin: 40px 0 20px;\n  border-bottom: 1px solid #eeeeee;\n}\n\nul,\nol {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\nul ul,\nul ol,\nol ul,\nol ol {\n  margin-bottom: 0;\n}\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n\n.list-inline {\n  padding-left: 0;\n  list-style: none;\n  margin-left: -5px;\n}\n\n.list-inline > li {\n  display: inline-block;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\ndl {\n  margin-top: 0;\n  margin-bottom: 20px;\n}\n\ndt,\ndd {\n  line-height: 1.428571429;\n}\n\ndt {\n  font-weight: bold;\n}\n\ndd {\n  margin-left: 0;\n}\n\n.dl-horizontal dd:before, .dl-horizontal dd:after {\n  content: \" \";\n  display: table;\n}\n\n.dl-horizontal dd:after {\n  clear: both;\n}\n\n@media (min-width: 768px) {\n  .dl-horizontal dt {\n    float: left;\n    width: 160px;\n    clear: left;\n    text-align: right;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .dl-horizontal dd {\n    margin-left: 180px;\n  }\n}\n\nabbr[title],\nabbr[data-original-title] {\n  cursor: help;\n  border-bottom: 1px dotted #777777;\n}\n\n.initialism {\n  font-size: 90%;\n}\n\nblockquote {\n  padding: 10px 20px;\n  margin: 0 0 20px;\n  font-size: 17.5px;\n  border-left: 5px solid #eeeeee;\n}\n\nblockquote p:last-child,\nblockquote ul:last-child,\nblockquote ol:last-child {\n  margin-bottom: 0;\n}\n\nblockquote footer,\nblockquote small,\nblockquote .small {\n  display: block;\n  font-size: 80%;\n  line-height: 1.428571429;\n  color: #777777;\n}\n\nblockquote footer:before,\nblockquote small:before,\nblockquote .small:before {\n  content: '\\2014   \\A0';\n}\n\n.blockquote-reverse,\nblockquote.pull-right {\n  padding-right: 15px;\n  padding-left: 0;\n  border-right: 5px solid #eeeeee;\n  border-left: 0;\n  text-align: right;\n}\n\n.blockquote-reverse footer:before,\n.blockquote-reverse small:before,\n.blockquote-reverse .small:before,\nblockquote.pull-right footer:before,\nblockquote.pull-right small:before,\nblockquote.pull-right .small:before {\n  content: '';\n}\n\n.blockquote-reverse footer:after,\n.blockquote-reverse small:after,\n.blockquote-reverse .small:after,\nblockquote.pull-right footer:after,\nblockquote.pull-right small:after,\nblockquote.pull-right .small:after {\n  content: '\\A0   \\2014';\n}\n\naddress {\n  margin-bottom: 20px;\n  font-style: normal;\n  line-height: 1.428571429;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n}\n\ncode {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #c7254e;\n  background-color: #f9f2f4;\n  border-radius: 4px;\n}\n\nkbd {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #fff;\n  background-color: #333;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25);\n}\n\nkbd kbd {\n  padding: 0;\n  font-size: 100%;\n  font-weight: bold;\n  box-shadow: none;\n}\n\npre {\n  display: block;\n  padding: 9.5px;\n  margin: 0 0 10px;\n  font-size: 13px;\n  line-height: 1.428571429;\n  word-break: break-all;\n  word-wrap: break-word;\n  color: #333333;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\npre code {\n  padding: 0;\n  font-size: inherit;\n  color: inherit;\n  white-space: pre-wrap;\n  background-color: transparent;\n  border-radius: 0;\n}\n\n.pre-scrollable {\n  max-height: 340px;\n  overflow-y: scroll;\n}\n\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.container:before, .container:after {\n  content: \" \";\n  display: table;\n}\n\n.container:after {\n  clear: both;\n}\n\n@media (min-width: 768px) {\n  .container {\n    width: 750px;\n  }\n}\n\n@media (min-width: 992px) {\n  .container {\n    width: 970px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .container {\n    width: 1170px;\n  }\n}\n\n.container-fluid {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.container-fluid:before, .container-fluid:after {\n  content: \" \";\n  display: table;\n}\n\n.container-fluid:after {\n  clear: both;\n}\n\n.row {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n\n.row:before, .row:after {\n  content: \" \";\n  display: table;\n}\n\n.row:after {\n  clear: both;\n}\n\n.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\n  position: relative;\n  min-height: 1px;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {\n  float: left;\n}\n\n.col-xs-1 {\n  width: 8.3333333333%;\n}\n\n.col-xs-2 {\n  width: 16.6666666667%;\n}\n\n.col-xs-3 {\n  width: 25%;\n}\n\n.col-xs-4 {\n  width: 33.3333333333%;\n}\n\n.col-xs-5 {\n  width: 41.6666666667%;\n}\n\n.col-xs-6 {\n  width: 50%;\n}\n\n.col-xs-7 {\n  width: 58.3333333333%;\n}\n\n.col-xs-8 {\n  width: 66.6666666667%;\n}\n\n.col-xs-9 {\n  width: 75%;\n}\n\n.col-xs-10 {\n  width: 83.3333333333%;\n}\n\n.col-xs-11 {\n  width: 91.6666666667%;\n}\n\n.col-xs-12 {\n  width: 100%;\n}\n\n.col-xs-pull-0 {\n  right: auto;\n}\n\n.col-xs-pull-1 {\n  right: 8.3333333333%;\n}\n\n.col-xs-pull-2 {\n  right: 16.6666666667%;\n}\n\n.col-xs-pull-3 {\n  right: 25%;\n}\n\n.col-xs-pull-4 {\n  right: 33.3333333333%;\n}\n\n.col-xs-pull-5 {\n  right: 41.6666666667%;\n}\n\n.col-xs-pull-6 {\n  right: 50%;\n}\n\n.col-xs-pull-7 {\n  right: 58.3333333333%;\n}\n\n.col-xs-pull-8 {\n  right: 66.6666666667%;\n}\n\n.col-xs-pull-9 {\n  right: 75%;\n}\n\n.col-xs-pull-10 {\n  right: 83.3333333333%;\n}\n\n.col-xs-pull-11 {\n  right: 91.6666666667%;\n}\n\n.col-xs-pull-12 {\n  right: 100%;\n}\n\n.col-xs-push-0 {\n  left: auto;\n}\n\n.col-xs-push-1 {\n  left: 8.3333333333%;\n}\n\n.col-xs-push-2 {\n  left: 16.6666666667%;\n}\n\n.col-xs-push-3 {\n  left: 25%;\n}\n\n.col-xs-push-4 {\n  left: 33.3333333333%;\n}\n\n.col-xs-push-5 {\n  left: 41.6666666667%;\n}\n\n.col-xs-push-6 {\n  left: 50%;\n}\n\n.col-xs-push-7 {\n  left: 58.3333333333%;\n}\n\n.col-xs-push-8 {\n  left: 66.6666666667%;\n}\n\n.col-xs-push-9 {\n  left: 75%;\n}\n\n.col-xs-push-10 {\n  left: 83.3333333333%;\n}\n\n.col-xs-push-11 {\n  left: 91.6666666667%;\n}\n\n.col-xs-push-12 {\n  left: 100%;\n}\n\n.col-xs-offset-0 {\n  margin-left: 0%;\n}\n\n.col-xs-offset-1 {\n  margin-left: 8.3333333333%;\n}\n\n.col-xs-offset-2 {\n  margin-left: 16.6666666667%;\n}\n\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n\n.col-xs-offset-4 {\n  margin-left: 33.3333333333%;\n}\n\n.col-xs-offset-5 {\n  margin-left: 41.6666666667%;\n}\n\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n\n.col-xs-offset-7 {\n  margin-left: 58.3333333333%;\n}\n\n.col-xs-offset-8 {\n  margin-left: 66.6666666667%;\n}\n\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n\n.col-xs-offset-10 {\n  margin-left: 83.3333333333%;\n}\n\n.col-xs-offset-11 {\n  margin-left: 91.6666666667%;\n}\n\n.col-xs-offset-12 {\n  margin-left: 100%;\n}\n\n@media (min-width: 768px) {\n  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {\n    float: left;\n  }\n  .col-sm-1 {\n    width: 8.3333333333%;\n  }\n  .col-sm-2 {\n    width: 16.6666666667%;\n  }\n  .col-sm-3 {\n    width: 25%;\n  }\n  .col-sm-4 {\n    width: 33.3333333333%;\n  }\n  .col-sm-5 {\n    width: 41.6666666667%;\n  }\n  .col-sm-6 {\n    width: 50%;\n  }\n  .col-sm-7 {\n    width: 58.3333333333%;\n  }\n  .col-sm-8 {\n    width: 66.6666666667%;\n  }\n  .col-sm-9 {\n    width: 75%;\n  }\n  .col-sm-10 {\n    width: 83.3333333333%;\n  }\n  .col-sm-11 {\n    width: 91.6666666667%;\n  }\n  .col-sm-12 {\n    width: 100%;\n  }\n  .col-sm-pull-0 {\n    right: auto;\n  }\n  .col-sm-pull-1 {\n    right: 8.3333333333%;\n  }\n  .col-sm-pull-2 {\n    right: 16.6666666667%;\n  }\n  .col-sm-pull-3 {\n    right: 25%;\n  }\n  .col-sm-pull-4 {\n    right: 33.3333333333%;\n  }\n  .col-sm-pull-5 {\n    right: 41.6666666667%;\n  }\n  .col-sm-pull-6 {\n    right: 50%;\n  }\n  .col-sm-pull-7 {\n    right: 58.3333333333%;\n  }\n  .col-sm-pull-8 {\n    right: 66.6666666667%;\n  }\n  .col-sm-pull-9 {\n    right: 75%;\n  }\n  .col-sm-pull-10 {\n    right: 83.3333333333%;\n  }\n  .col-sm-pull-11 {\n    right: 91.6666666667%;\n  }\n  .col-sm-pull-12 {\n    right: 100%;\n  }\n  .col-sm-push-0 {\n    left: auto;\n  }\n  .col-sm-push-1 {\n    left: 8.3333333333%;\n  }\n  .col-sm-push-2 {\n    left: 16.6666666667%;\n  }\n  .col-sm-push-3 {\n    left: 25%;\n  }\n  .col-sm-push-4 {\n    left: 33.3333333333%;\n  }\n  .col-sm-push-5 {\n    left: 41.6666666667%;\n  }\n  .col-sm-push-6 {\n    left: 50%;\n  }\n  .col-sm-push-7 {\n    left: 58.3333333333%;\n  }\n  .col-sm-push-8 {\n    left: 66.6666666667%;\n  }\n  .col-sm-push-9 {\n    left: 75%;\n  }\n  .col-sm-push-10 {\n    left: 83.3333333333%;\n  }\n  .col-sm-push-11 {\n    left: 91.6666666667%;\n  }\n  .col-sm-push-12 {\n    left: 100%;\n  }\n  .col-sm-offset-0 {\n    margin-left: 0%;\n  }\n  .col-sm-offset-1 {\n    margin-left: 8.3333333333%;\n  }\n  .col-sm-offset-2 {\n    margin-left: 16.6666666667%;\n  }\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n  .col-sm-offset-4 {\n    margin-left: 33.3333333333%;\n  }\n  .col-sm-offset-5 {\n    margin-left: 41.6666666667%;\n  }\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n  .col-sm-offset-7 {\n    margin-left: 58.3333333333%;\n  }\n  .col-sm-offset-8 {\n    margin-left: 66.6666666667%;\n  }\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n  .col-sm-offset-10 {\n    margin-left: 83.3333333333%;\n  }\n  .col-sm-offset-11 {\n    margin-left: 91.6666666667%;\n  }\n  .col-sm-offset-12 {\n    margin-left: 100%;\n  }\n}\n\n@media (min-width: 992px) {\n  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {\n    float: left;\n  }\n  .col-md-1 {\n    width: 8.3333333333%;\n  }\n  .col-md-2 {\n    width: 16.6666666667%;\n  }\n  .col-md-3 {\n    width: 25%;\n  }\n  .col-md-4 {\n    width: 33.3333333333%;\n  }\n  .col-md-5 {\n    width: 41.6666666667%;\n  }\n  .col-md-6 {\n    width: 50%;\n  }\n  .col-md-7 {\n    width: 58.3333333333%;\n  }\n  .col-md-8 {\n    width: 66.6666666667%;\n  }\n  .col-md-9 {\n    width: 75%;\n  }\n  .col-md-10 {\n    width: 83.3333333333%;\n  }\n  .col-md-11 {\n    width: 91.6666666667%;\n  }\n  .col-md-12 {\n    width: 100%;\n  }\n  .col-md-pull-0 {\n    right: auto;\n  }\n  .col-md-pull-1 {\n    right: 8.3333333333%;\n  }\n  .col-md-pull-2 {\n    right: 16.6666666667%;\n  }\n  .col-md-pull-3 {\n    right: 25%;\n  }\n  .col-md-pull-4 {\n    right: 33.3333333333%;\n  }\n  .col-md-pull-5 {\n    right: 41.6666666667%;\n  }\n  .col-md-pull-6 {\n    right: 50%;\n  }\n  .col-md-pull-7 {\n    right: 58.3333333333%;\n  }\n  .col-md-pull-8 {\n    right: 66.6666666667%;\n  }\n  .col-md-pull-9 {\n    right: 75%;\n  }\n  .col-md-pull-10 {\n    right: 83.3333333333%;\n  }\n  .col-md-pull-11 {\n    right: 91.6666666667%;\n  }\n  .col-md-pull-12 {\n    right: 100%;\n  }\n  .col-md-push-0 {\n    left: auto;\n  }\n  .col-md-push-1 {\n    left: 8.3333333333%;\n  }\n  .col-md-push-2 {\n    left: 16.6666666667%;\n  }\n  .col-md-push-3 {\n    left: 25%;\n  }\n  .col-md-push-4 {\n    left: 33.3333333333%;\n  }\n  .col-md-push-5 {\n    left: 41.6666666667%;\n  }\n  .col-md-push-6 {\n    left: 50%;\n  }\n  .col-md-push-7 {\n    left: 58.3333333333%;\n  }\n  .col-md-push-8 {\n    left: 66.6666666667%;\n  }\n  .col-md-push-9 {\n    left: 75%;\n  }\n  .col-md-push-10 {\n    left: 83.3333333333%;\n  }\n  .col-md-push-11 {\n    left: 91.6666666667%;\n  }\n  .col-md-push-12 {\n    left: 100%;\n  }\n  .col-md-offset-0 {\n    margin-left: 0%;\n  }\n  .col-md-offset-1 {\n    margin-left: 8.3333333333%;\n  }\n  .col-md-offset-2 {\n    margin-left: 16.6666666667%;\n  }\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n  .col-md-offset-4 {\n    margin-left: 33.3333333333%;\n  }\n  .col-md-offset-5 {\n    margin-left: 41.6666666667%;\n  }\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n  .col-md-offset-7 {\n    margin-left: 58.3333333333%;\n  }\n  .col-md-offset-8 {\n    margin-left: 66.6666666667%;\n  }\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n  .col-md-offset-10 {\n    margin-left: 83.3333333333%;\n  }\n  .col-md-offset-11 {\n    margin-left: 91.6666666667%;\n  }\n  .col-md-offset-12 {\n    margin-left: 100%;\n  }\n}\n\n@media (min-width: 1200px) {\n  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {\n    float: left;\n  }\n  .col-lg-1 {\n    width: 8.3333333333%;\n  }\n  .col-lg-2 {\n    width: 16.6666666667%;\n  }\n  .col-lg-3 {\n    width: 25%;\n  }\n  .col-lg-4 {\n    width: 33.3333333333%;\n  }\n  .col-lg-5 {\n    width: 41.6666666667%;\n  }\n  .col-lg-6 {\n    width: 50%;\n  }\n  .col-lg-7 {\n    width: 58.3333333333%;\n  }\n  .col-lg-8 {\n    width: 66.6666666667%;\n  }\n  .col-lg-9 {\n    width: 75%;\n  }\n  .col-lg-10 {\n    width: 83.3333333333%;\n  }\n  .col-lg-11 {\n    width: 91.6666666667%;\n  }\n  .col-lg-12 {\n    width: 100%;\n  }\n  .col-lg-pull-0 {\n    right: auto;\n  }\n  .col-lg-pull-1 {\n    right: 8.3333333333%;\n  }\n  .col-lg-pull-2 {\n    right: 16.6666666667%;\n  }\n  .col-lg-pull-3 {\n    right: 25%;\n  }\n  .col-lg-pull-4 {\n    right: 33.3333333333%;\n  }\n  .col-lg-pull-5 {\n    right: 41.6666666667%;\n  }\n  .col-lg-pull-6 {\n    right: 50%;\n  }\n  .col-lg-pull-7 {\n    right: 58.3333333333%;\n  }\n  .col-lg-pull-8 {\n    right: 66.6666666667%;\n  }\n  .col-lg-pull-9 {\n    right: 75%;\n  }\n  .col-lg-pull-10 {\n    right: 83.3333333333%;\n  }\n  .col-lg-pull-11 {\n    right: 91.6666666667%;\n  }\n  .col-lg-pull-12 {\n    right: 100%;\n  }\n  .col-lg-push-0 {\n    left: auto;\n  }\n  .col-lg-push-1 {\n    left: 8.3333333333%;\n  }\n  .col-lg-push-2 {\n    left: 16.6666666667%;\n  }\n  .col-lg-push-3 {\n    left: 25%;\n  }\n  .col-lg-push-4 {\n    left: 33.3333333333%;\n  }\n  .col-lg-push-5 {\n    left: 41.6666666667%;\n  }\n  .col-lg-push-6 {\n    left: 50%;\n  }\n  .col-lg-push-7 {\n    left: 58.3333333333%;\n  }\n  .col-lg-push-8 {\n    left: 66.6666666667%;\n  }\n  .col-lg-push-9 {\n    left: 75%;\n  }\n  .col-lg-push-10 {\n    left: 83.3333333333%;\n  }\n  .col-lg-push-11 {\n    left: 91.6666666667%;\n  }\n  .col-lg-push-12 {\n    left: 100%;\n  }\n  .col-lg-offset-0 {\n    margin-left: 0%;\n  }\n  .col-lg-offset-1 {\n    margin-left: 8.3333333333%;\n  }\n  .col-lg-offset-2 {\n    margin-left: 16.6666666667%;\n  }\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n  .col-lg-offset-4 {\n    margin-left: 33.3333333333%;\n  }\n  .col-lg-offset-5 {\n    margin-left: 41.6666666667%;\n  }\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n  .col-lg-offset-7 {\n    margin-left: 58.3333333333%;\n  }\n  .col-lg-offset-8 {\n    margin-left: 66.6666666667%;\n  }\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n  .col-lg-offset-10 {\n    margin-left: 83.3333333333%;\n  }\n  .col-lg-offset-11 {\n    margin-left: 91.6666666667%;\n  }\n  .col-lg-offset-12 {\n    margin-left: 100%;\n  }\n}\n\ntable {\n  background-color: transparent;\n}\n\ncaption {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: #777777;\n  text-align: left;\n}\n\nth {\n  text-align: left;\n}\n\n.table {\n  width: 100%;\n  max-width: 100%;\n  margin-bottom: 20px;\n}\n\n.table > thead > tr > th,\n.table > thead > tr > td,\n.table > tbody > tr > th,\n.table > tbody > tr > td,\n.table > tfoot > tr > th,\n.table > tfoot > tr > td {\n  padding: 8px;\n  line-height: 1.428571429;\n  vertical-align: top;\n  border-top: 1px solid #ddd;\n}\n\n.table > thead > tr > th {\n  vertical-align: bottom;\n  border-bottom: 2px solid #ddd;\n}\n\n.table > caption + thead > tr:first-child > th,\n.table > caption + thead > tr:first-child > td,\n.table > colgroup + thead > tr:first-child > th,\n.table > colgroup + thead > tr:first-child > td,\n.table > thead:first-child > tr:first-child > th,\n.table > thead:first-child > tr:first-child > td {\n  border-top: 0;\n}\n\n.table > tbody + tbody {\n  border-top: 2px solid #ddd;\n}\n\n.table .table {\n  background-color: #fff;\n}\n\n.table-condensed > thead > tr > th,\n.table-condensed > thead > tr > td,\n.table-condensed > tbody > tr > th,\n.table-condensed > tbody > tr > td,\n.table-condensed > tfoot > tr > th,\n.table-condensed > tfoot > tr > td {\n  padding: 5px;\n}\n\n.table-bordered {\n  border: 1px solid #ddd;\n}\n\n.table-bordered > thead > tr > th,\n.table-bordered > thead > tr > td,\n.table-bordered > tbody > tr > th,\n.table-bordered > tbody > tr > td,\n.table-bordered > tfoot > tr > th,\n.table-bordered > tfoot > tr > td {\n  border: 1px solid #ddd;\n}\n\n.table-bordered > thead > tr > th,\n.table-bordered > thead > tr > td {\n  border-bottom-width: 2px;\n}\n\n.table-striped > tbody > tr:nth-of-type(odd) {\n  background-color: #f9f9f9;\n}\n\n.table-hover > tbody > tr:hover {\n  background-color: #f5f5f5;\n}\n\ntable col[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-column;\n}\n\ntable td[class*=\"col-\"],\ntable th[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-cell;\n}\n\n.table > thead > tr > td.active, .table > thead > tr > td.ax-active,\n.table > thead > tr > th.active,\n.table > thead > tr > th.ax-active,\n.table > thead > tr.active > td,\n.table > thead > tr.ax-active > td,\n.table > thead > tr.active > th,\n.table > thead > tr.ax-active > th,\n.table > tbody > tr > td.active,\n.table > tbody > tr > td.ax-active,\n.table > tbody > tr > th.active,\n.table > tbody > tr > th.ax-active,\n.table > tbody > tr.active > td,\n.table > tbody > tr.ax-active > td,\n.table > tbody > tr.active > th,\n.table > tbody > tr.ax-active > th,\n.table > tfoot > tr > td.active,\n.table > tfoot > tr > td.ax-active,\n.table > tfoot > tr > th.active,\n.table > tfoot > tr > th.ax-active,\n.table > tfoot > tr.active > td,\n.table > tfoot > tr.ax-active > td,\n.table > tfoot > tr.active > th,\n.table > tfoot > tr.ax-active > th {\n  background-color: #f5f5f5;\n}\n\n.table-hover > tbody > tr > td.active:hover, .table-hover > tbody > tr > td.ax-active:hover,\n.table-hover > tbody > tr > th.active:hover,\n.table-hover > tbody > tr > th.ax-active:hover,\n.table-hover > tbody > tr.active:hover > td,\n.table-hover > tbody > tr.ax-active:hover > td,\n.table-hover > tbody > tr:hover > .active,\n.table-hover > tbody > tr:hover > .ax-active,\n.table-hover > tbody > tr.active:hover > th,\n.table-hover > tbody > tr.ax-active:hover > th {\n  background-color: #e8e8e8;\n}\n\n.table > thead > tr > td.success,\n.table > thead > tr > th.success,\n.table > thead > tr.success > td,\n.table > thead > tr.success > th,\n.table > tbody > tr > td.success,\n.table > tbody > tr > th.success,\n.table > tbody > tr.success > td,\n.table > tbody > tr.success > th,\n.table > tfoot > tr > td.success,\n.table > tfoot > tr > th.success,\n.table > tfoot > tr.success > td,\n.table > tfoot > tr.success > th {\n  background-color: #dff0d8;\n}\n\n.table-hover > tbody > tr > td.success:hover,\n.table-hover > tbody > tr > th.success:hover,\n.table-hover > tbody > tr.success:hover > td,\n.table-hover > tbody > tr:hover > .success,\n.table-hover > tbody > tr.success:hover > th {\n  background-color: #d0e9c6;\n}\n\n.table > thead > tr > td.info,\n.table > thead > tr > th.info,\n.table > thead > tr.info > td,\n.table > thead > tr.info > th,\n.table > tbody > tr > td.info,\n.table > tbody > tr > th.info,\n.table > tbody > tr.info > td,\n.table > tbody > tr.info > th,\n.table > tfoot > tr > td.info,\n.table > tfoot > tr > th.info,\n.table > tfoot > tr.info > td,\n.table > tfoot > tr.info > th {\n  background-color: #d9edf7;\n}\n\n.table-hover > tbody > tr > td.info:hover,\n.table-hover > tbody > tr > th.info:hover,\n.table-hover > tbody > tr.info:hover > td,\n.table-hover > tbody > tr:hover > .info,\n.table-hover > tbody > tr.info:hover > th {\n  background-color: #c4e3f3;\n}\n\n.table > thead > tr > td.warning,\n.table > thead > tr > th.warning,\n.table > thead > tr.warning > td,\n.table > thead > tr.warning > th,\n.table > tbody > tr > td.warning,\n.table > tbody > tr > th.warning,\n.table > tbody > tr.warning > td,\n.table > tbody > tr.warning > th,\n.table > tfoot > tr > td.warning,\n.table > tfoot > tr > th.warning,\n.table > tfoot > tr.warning > td,\n.table > tfoot > tr.warning > th {\n  background-color: #fcf8e3;\n}\n\n.table-hover > tbody > tr > td.warning:hover,\n.table-hover > tbody > tr > th.warning:hover,\n.table-hover > tbody > tr.warning:hover > td,\n.table-hover > tbody > tr:hover > .warning,\n.table-hover > tbody > tr.warning:hover > th {\n  background-color: #faf2cc;\n}\n\n.table > thead > tr > td.danger,\n.table > thead > tr > th.danger,\n.table > thead > tr.danger > td,\n.table > thead > tr.danger > th,\n.table > tbody > tr > td.danger,\n.table > tbody > tr > th.danger,\n.table > tbody > tr.danger > td,\n.table > tbody > tr.danger > th,\n.table > tfoot > tr > td.danger,\n.table > tfoot > tr > th.danger,\n.table > tfoot > tr.danger > td,\n.table > tfoot > tr.danger > th {\n  background-color: #f2dede;\n}\n\n.table-hover > tbody > tr > td.danger:hover,\n.table-hover > tbody > tr > th.danger:hover,\n.table-hover > tbody > tr.danger:hover > td,\n.table-hover > tbody > tr:hover > .danger,\n.table-hover > tbody > tr.danger:hover > th {\n  background-color: #ebcccc;\n}\n\n.table-responsive {\n  overflow-x: auto;\n  min-height: 0.01%;\n}\n\n@media screen and (max-width: 767px) {\n  .table-responsive {\n    width: 100%;\n    margin-bottom: 15px;\n    overflow-y: hidden;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    border: 1px solid #ddd;\n  }\n  .table-responsive > .table {\n    margin-bottom: 0;\n  }\n  .table-responsive > .table > thead > tr > th,\n  .table-responsive > .table > thead > tr > td,\n  .table-responsive > .table > tbody > tr > th,\n  .table-responsive > .table > tbody > tr > td,\n  .table-responsive > .table > tfoot > tr > th,\n  .table-responsive > .table > tfoot > tr > td {\n    white-space: nowrap;\n  }\n  .table-responsive > .table-bordered {\n    border: 0;\n  }\n  .table-responsive > .table-bordered > thead > tr > th:first-child,\n  .table-responsive > .table-bordered > thead > tr > td:first-child,\n  .table-responsive > .table-bordered > tbody > tr > th:first-child,\n  .table-responsive > .table-bordered > tbody > tr > td:first-child,\n  .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n  .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n    border-left: 0;\n  }\n  .table-responsive > .table-bordered > thead > tr > th:last-child,\n  .table-responsive > .table-bordered > thead > tr > td:last-child,\n  .table-responsive > .table-bordered > tbody > tr > th:last-child,\n  .table-responsive > .table-bordered > tbody > tr > td:last-child,\n  .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n  .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n    border-right: 0;\n  }\n  .table-responsive > .table-bordered > tbody > tr:last-child > th,\n  .table-responsive > .table-bordered > tbody > tr:last-child > td,\n  .table-responsive > .table-bordered > tfoot > tr:last-child > th,\n  .table-responsive > .table-bordered > tfoot > tr:last-child > td {\n    border-bottom: 0;\n  }\n}\n\nfieldset {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  min-width: 0;\n}\n\nlegend {\n  display: block;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 21px;\n  line-height: inherit;\n  color: #333333;\n  border: 0;\n  border-bottom: 1px solid #e5e5e5;\n}\n\nlabel {\n  display: inline-block;\n  max-width: 100%;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\ninput[type=\"search\"] {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin: 4px 0 0;\n  margin-top: 1px \\9;\n  line-height: normal;\n}\n\ninput[type=\"file\"] {\n  display: block;\n}\n\ninput[type=\"range\"] {\n  display: block;\n  width: 100%;\n}\n\nselect[multiple],\nselect[size] {\n  height: auto;\n}\n\ninput[type=\"file\"]:focus,\ninput[type=\"radio\"]:focus,\ninput[type=\"checkbox\"]:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\n\noutput {\n  display: block;\n  padding-top: 7px;\n  font-size: 14px;\n  line-height: 1.428571429;\n  color: #555555;\n}\n\n.form-control {\n  display: block;\n  width: 100%;\n  height: 34px;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.428571429;\n  color: #555555;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n}\n\n.form-control:focus {\n  border-color: #66afe9;\n  outline: 0;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\n}\n\n.form-control::-moz-placeholder {\n  color: #999;\n  opacity: 1;\n}\n\n.form-control:-ms-input-placeholder {\n  color: #999;\n}\n\n.form-control::-webkit-input-placeholder {\n  color: #999;\n}\n\n.form-control::-ms-expand {\n  border: 0;\n  background-color: transparent;\n}\n\n.form-control[disabled], .form-control[readonly],\nfieldset[disabled] .form-control {\n  background-color: #eeeeee;\n  opacity: 1;\n}\n\n.form-control[disabled],\nfieldset[disabled] .form-control {\n  cursor: not-allowed;\n}\n\ntextarea.form-control {\n  height: auto;\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n}\n\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type=\"date\"].form-control,\n  input[type=\"time\"].form-control,\n  input[type=\"datetime-local\"].form-control,\n  input[type=\"month\"].form-control {\n    line-height: 34px;\n  }\n  input[type=\"date\"].input-sm, .input-group-sm > input[type=\"date\"].form-control,\n  .input-group-sm > input[type=\"date\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-sm input[type=\"date\"],\n  input[type=\"time\"].input-sm,\n  .input-group-sm > input[type=\"time\"].form-control,\n  .input-group-sm > input[type=\"time\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-sm\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-sm,\n  .input-group-sm > input[type=\"datetime-local\"].form-control,\n  .input-group-sm > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-sm\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-sm,\n  .input-group-sm > input[type=\"month\"].form-control,\n  .input-group-sm > input[type=\"month\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-sm\n  input[type=\"month\"] {\n    line-height: 30px;\n  }\n  input[type=\"date\"].input-lg, .input-group-lg > input[type=\"date\"].form-control,\n  .input-group-lg > input[type=\"date\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-lg input[type=\"date\"],\n  input[type=\"time\"].input-lg,\n  .input-group-lg > input[type=\"time\"].form-control,\n  .input-group-lg > input[type=\"time\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-lg\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-lg,\n  .input-group-lg > input[type=\"datetime-local\"].form-control,\n  .input-group-lg > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-lg\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-lg,\n  .input-group-lg > input[type=\"month\"].form-control,\n  .input-group-lg > input[type=\"month\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-lg\n  input[type=\"month\"] {\n    line-height: 46px;\n  }\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.radio,\n.checkbox {\n  position: relative;\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.radio label,\n.checkbox label {\n  min-height: 20px;\n  padding-left: 20px;\n  margin-bottom: 0;\n  font-weight: normal;\n  cursor: pointer;\n}\n\n.radio input[type=\"radio\"],\n.radio-inline input[type=\"radio\"],\n.checkbox input[type=\"checkbox\"],\n.checkbox-inline input[type=\"checkbox\"] {\n  position: absolute;\n  margin-left: -20px;\n  margin-top: 4px \\9;\n}\n\n.radio + .radio,\n.checkbox + .checkbox {\n  margin-top: -5px;\n}\n\n.radio-inline,\n.checkbox-inline {\n  position: relative;\n  display: inline-block;\n  padding-left: 20px;\n  margin-bottom: 0;\n  vertical-align: middle;\n  font-weight: normal;\n  cursor: pointer;\n}\n\n.radio-inline + .radio-inline,\n.checkbox-inline + .checkbox-inline {\n  margin-top: 0;\n  margin-left: 10px;\n}\n\ninput[type=\"radio\"][disabled], input[type=\"radio\"].disabled, input[type=\"radio\"][disabled],\ninput[type=\"radio\"].ax-disabled,\nfieldset[disabled] input[type=\"radio\"],\ninput[type=\"checkbox\"][disabled],\ninput[type=\"checkbox\"].disabled,\ninput[type=\"checkbox\"][disabled],\ninput[type=\"checkbox\"].ax-disabled,\nfieldset[disabled]\ninput[type=\"checkbox\"] {\n  cursor: not-allowed;\n}\n\n.radio-inline.disabled, .radio-inline[disabled],\n.radio-inline.ax-disabled,\nfieldset[disabled] .radio-inline,\n.checkbox-inline.disabled,\n.checkbox-inline[disabled],\n.checkbox-inline.ax-disabled,\nfieldset[disabled]\n.checkbox-inline {\n  cursor: not-allowed;\n}\n\n.radio.disabled label, .radio[disabled] label,\n.radio.ax-disabled label,\nfieldset[disabled] .radio label,\n.checkbox.disabled label, .checkbox[disabled] label,\n.checkbox.ax-disabled label,\nfieldset[disabled]\n.checkbox label {\n  cursor: not-allowed;\n}\n\n.form-control-static {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  margin-bottom: 0;\n  min-height: 34px;\n}\n\n.form-control-static.input-lg, .input-group-lg > .form-control-static.form-control,\n.input-group-lg > .form-control-static.input-group-addon,\n.input-group-lg > .input-group-btn > .form-control-static.btn, .form-control-static.input-sm, .input-group-sm > .form-control-static.form-control,\n.input-group-sm > .form-control-static.input-group-addon,\n.input-group-sm > .input-group-btn > .form-control-static.btn {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.input-sm, .input-group-sm > .form-control,\n.input-group-sm > .input-group-addon,\n.input-group-sm > .input-group-btn > .btn {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n\nselect.input-sm, .input-group-sm > select.form-control,\n.input-group-sm > select.input-group-addon,\n.input-group-sm > .input-group-btn > select.btn {\n  height: 30px;\n  line-height: 30px;\n}\n\ntextarea.input-sm, .input-group-sm > textarea.form-control,\n.input-group-sm > textarea.input-group-addon,\n.input-group-sm > .input-group-btn > textarea.btn,\nselect[multiple].input-sm,\n.input-group-sm > select[multiple].form-control,\n.input-group-sm > select[multiple].input-group-addon,\n.input-group-sm > .input-group-btn > select[multiple].btn {\n  height: auto;\n}\n\n.form-group-sm .form-control {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n\n.form-group-sm select.form-control {\n  height: 30px;\n  line-height: 30px;\n}\n\n.form-group-sm textarea.form-control,\n.form-group-sm select[multiple].form-control {\n  height: auto;\n}\n\n.form-group-sm .form-control-static {\n  height: 30px;\n  min-height: 32px;\n  padding: 6px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n}\n\n.input-lg, .input-group-lg > .form-control,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\n\nselect.input-lg, .input-group-lg > select.form-control,\n.input-group-lg > select.input-group-addon,\n.input-group-lg > .input-group-btn > select.btn {\n  height: 46px;\n  line-height: 46px;\n}\n\ntextarea.input-lg, .input-group-lg > textarea.form-control,\n.input-group-lg > textarea.input-group-addon,\n.input-group-lg > .input-group-btn > textarea.btn,\nselect[multiple].input-lg,\n.input-group-lg > select[multiple].form-control,\n.input-group-lg > select[multiple].input-group-addon,\n.input-group-lg > .input-group-btn > select[multiple].btn {\n  height: auto;\n}\n\n.form-group-lg .form-control {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\n\n.form-group-lg select.form-control {\n  height: 46px;\n  line-height: 46px;\n}\n\n.form-group-lg textarea.form-control,\n.form-group-lg select[multiple].form-control {\n  height: auto;\n}\n\n.form-group-lg .form-control-static {\n  height: 46px;\n  min-height: 38px;\n  padding: 11px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n}\n\n.has-feedback {\n  position: relative;\n}\n\n.has-feedback .form-control {\n  padding-right: 42.5px;\n}\n\n.form-control-feedback {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  display: block;\n  width: 34px;\n  height: 34px;\n  line-height: 34px;\n  text-align: center;\n  pointer-events: none;\n}\n\n.input-lg + .form-control-feedback, .input-group-lg > .form-control + .form-control-feedback,\n.input-group-lg > .input-group-addon + .form-control-feedback,\n.input-group-lg > .input-group-btn > .btn + .form-control-feedback,\n.input-group-lg + .form-control-feedback,\n.form-group-lg .form-control + .form-control-feedback {\n  width: 46px;\n  height: 46px;\n  line-height: 46px;\n}\n\n.input-sm + .form-control-feedback, .input-group-sm > .form-control + .form-control-feedback,\n.input-group-sm > .input-group-addon + .form-control-feedback,\n.input-group-sm > .input-group-btn > .btn + .form-control-feedback,\n.input-group-sm + .form-control-feedback,\n.form-group-sm .form-control + .form-control-feedback {\n  width: 30px;\n  height: 30px;\n  line-height: 30px;\n}\n\n.has-success .help-block,\n.has-success .control-label,\n.has-success .radio,\n.has-success .checkbox,\n.has-success .radio-inline,\n.has-success .checkbox-inline,\n.has-success.radio label,\n.has-success.checkbox label,\n.has-success.radio-inline label,\n.has-success.checkbox-inline label {\n  color: #3c763d;\n}\n\n.has-success .form-control {\n  border-color: #3c763d;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n\n.has-success .form-control:focus {\n  border-color: #2b542c;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;\n}\n\n.has-success .input-group-addon {\n  color: #3c763d;\n  border-color: #3c763d;\n  background-color: #dff0d8;\n}\n\n.has-success .form-control-feedback {\n  color: #3c763d;\n}\n\n.has-warning .help-block,\n.has-warning .control-label,\n.has-warning .radio,\n.has-warning .checkbox,\n.has-warning .radio-inline,\n.has-warning .checkbox-inline,\n.has-warning.radio label,\n.has-warning.checkbox label,\n.has-warning.radio-inline label,\n.has-warning.checkbox-inline label {\n  color: #8a6d3b;\n}\n\n.has-warning .form-control {\n  border-color: #8a6d3b;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n\n.has-warning .form-control:focus {\n  border-color: #66512c;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;\n}\n\n.has-warning .input-group-addon {\n  color: #8a6d3b;\n  border-color: #8a6d3b;\n  background-color: #fcf8e3;\n}\n\n.has-warning .form-control-feedback {\n  color: #8a6d3b;\n}\n\n.has-error .help-block,\n.has-error .control-label,\n.has-error .radio,\n.has-error .checkbox,\n.has-error .radio-inline,\n.has-error .checkbox-inline,\n.has-error.radio label,\n.has-error.checkbox label,\n.has-error.radio-inline label,\n.has-error.checkbox-inline label {\n  color: #a94442;\n}\n\n.has-error .form-control {\n  border-color: #a94442;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n\n.has-error .form-control:focus {\n  border-color: #843534;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;\n}\n\n.has-error .input-group-addon {\n  color: #a94442;\n  border-color: #a94442;\n  background-color: #f2dede;\n}\n\n.has-error .form-control-feedback {\n  color: #a94442;\n}\n\n.has-feedback label ~ .form-control-feedback {\n  top: 25px;\n}\n\n.has-feedback label.sr-only ~ .form-control-feedback {\n  top: 0;\n}\n\n.help-block {\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: #737373;\n}\n\n@media (min-width: 768px) {\n  .form-inline .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle;\n  }\n  .form-inline .form-control-static {\n    display: inline-block;\n  }\n  .form-inline .input-group {\n    display: inline-table;\n    vertical-align: middle;\n  }\n  .form-inline .input-group .input-group-addon,\n  .form-inline .input-group .input-group-btn,\n  .form-inline .input-group .form-control {\n    width: auto;\n  }\n  .form-inline .input-group > .form-control {\n    width: 100%;\n  }\n  .form-inline .control-label {\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .radio,\n  .form-inline .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .radio label,\n  .form-inline .checkbox label {\n    padding-left: 0;\n  }\n  .form-inline .radio input[type=\"radio\"],\n  .form-inline .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0;\n  }\n  .form-inline .has-feedback .form-control-feedback {\n    top: 0;\n  }\n}\n\n.form-horizontal .radio,\n.form-horizontal .checkbox,\n.form-horizontal .radio-inline,\n.form-horizontal .checkbox-inline {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 7px;\n}\n\n.form-horizontal .radio,\n.form-horizontal .checkbox {\n  min-height: 27px;\n}\n\n.form-horizontal .form-group {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n\n.form-horizontal .form-group:before, .form-horizontal .form-group:after {\n  content: \" \";\n  display: table;\n}\n\n.form-horizontal .form-group:after {\n  clear: both;\n}\n\n@media (min-width: 768px) {\n  .form-horizontal .control-label {\n    text-align: right;\n    margin-bottom: 0;\n    padding-top: 7px;\n  }\n}\n\n.form-horizontal .has-feedback .form-control-feedback {\n  right: 15px;\n}\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-lg .control-label {\n    padding-top: 11px;\n    font-size: 18px;\n  }\n}\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-sm .control-label {\n    padding-top: 6px;\n    font-size: 12px;\n  }\n}\n\n.btn {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n      touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.428571429;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.btn:focus, .btn.focus, .btn:active:focus, .btn:active.focus, .btn.active:focus, .btn.ax-active:focus, .btn.active.focus, .btn.focus.ax-active {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\n\n.btn:hover, .btn:focus, .btn.focus {\n  color: #333;\n  text-decoration: none;\n}\n\n.btn:active, .btn.active, .btn.ax-active {\n  outline: 0;\n  background-image: none;\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n}\n\n.btn.disabled, .btn[disabled],\n.btn.ax-disabled, .btn[disabled],\nfieldset[disabled] .btn {\n  cursor: not-allowed;\n  opacity: 0.65;\n  filter: alpha(opacity=65);\n  box-shadow: none;\n}\n\na.btn.disabled, a.btn[disabled],\na.btn.ax-disabled,\nfieldset[disabled] a.btn {\n  pointer-events: none;\n}\n\n.btn-default {\n  color: #333;\n  background-color: #fff;\n  border-color: #ccc;\n}\n\n.btn-default:focus, .btn-default.focus {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #8c8c8c;\n}\n\n.btn-default:hover {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #adadad;\n}\n\n.btn-default:active, .btn-default.active, .btn-default.ax-active,\n.open > .btn-default.dropdown-toggle {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #adadad;\n}\n\n.btn-default:active:hover, .btn-default:active:focus, .btn-default:active.focus, .btn-default.active:hover, .btn-default.ax-active:hover, .btn-default.active:focus, .btn-default.ax-active:focus, .btn-default.active.focus, .btn-default.focus.ax-active,\n.open > .btn-default.dropdown-toggle:hover,\n.open > .btn-default.dropdown-toggle:focus,\n.open > .btn-default.dropdown-toggle.focus {\n  color: #333;\n  background-color: #d4d4d4;\n  border-color: #8c8c8c;\n}\n\n.btn-default:active, .btn-default.active, .btn-default.ax-active,\n.open > .btn-default.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-default.disabled:hover, .btn-default[disabled]:hover,\n.btn-default.ax-disabled:hover, .btn-default.disabled:focus, .btn-default[disabled]:focus,\n.btn-default.ax-disabled:focus, .btn-default.disabled.focus, .btn-default.focus[disabled],\n.btn-default.focus.ax-disabled, .btn-default[disabled]:hover, .btn-default[disabled]:focus, .btn-default[disabled].focus,\nfieldset[disabled] .btn-default:hover,\nfieldset[disabled] .btn-default:focus,\nfieldset[disabled] .btn-default.focus {\n  background-color: #fff;\n  border-color: #ccc;\n}\n\n.btn-default .badge {\n  color: #fff;\n  background-color: #333;\n}\n\n.btn-primary {\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #2e6da4;\n}\n\n.btn-primary:focus, .btn-primary.focus {\n  color: #fff;\n  background-color: #286090;\n  border-color: #122b40;\n}\n\n.btn-primary:hover {\n  color: #fff;\n  background-color: #286090;\n  border-color: #204d74;\n}\n\n.btn-primary:active, .btn-primary.active, .btn-primary.ax-active,\n.open > .btn-primary.dropdown-toggle {\n  color: #fff;\n  background-color: #286090;\n  border-color: #204d74;\n}\n\n.btn-primary:active:hover, .btn-primary:active:focus, .btn-primary:active.focus, .btn-primary.active:hover, .btn-primary.ax-active:hover, .btn-primary.active:focus, .btn-primary.ax-active:focus, .btn-primary.active.focus, .btn-primary.focus.ax-active,\n.open > .btn-primary.dropdown-toggle:hover,\n.open > .btn-primary.dropdown-toggle:focus,\n.open > .btn-primary.dropdown-toggle.focus {\n  color: #fff;\n  background-color: #204d74;\n  border-color: #122b40;\n}\n\n.btn-primary:active, .btn-primary.active, .btn-primary.ax-active,\n.open > .btn-primary.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-primary.disabled:hover, .btn-primary[disabled]:hover,\n.btn-primary.ax-disabled:hover, .btn-primary.disabled:focus, .btn-primary[disabled]:focus,\n.btn-primary.ax-disabled:focus, .btn-primary.disabled.focus, .btn-primary.focus[disabled],\n.btn-primary.focus.ax-disabled, .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, .btn-primary[disabled].focus,\nfieldset[disabled] .btn-primary:hover,\nfieldset[disabled] .btn-primary:focus,\nfieldset[disabled] .btn-primary.focus {\n  background-color: #337ab7;\n  border-color: #2e6da4;\n}\n\n.btn-primary .badge {\n  color: #337ab7;\n  background-color: #fff;\n}\n\n.btn-success {\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n}\n\n.btn-success:focus, .btn-success.focus {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #255625;\n}\n\n.btn-success:hover {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #398439;\n}\n\n.btn-success:active, .btn-success.active, .btn-success.ax-active,\n.open > .btn-success.dropdown-toggle {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #398439;\n}\n\n.btn-success:active:hover, .btn-success:active:focus, .btn-success:active.focus, .btn-success.active:hover, .btn-success.ax-active:hover, .btn-success.active:focus, .btn-success.ax-active:focus, .btn-success.active.focus, .btn-success.focus.ax-active,\n.open > .btn-success.dropdown-toggle:hover,\n.open > .btn-success.dropdown-toggle:focus,\n.open > .btn-success.dropdown-toggle.focus {\n  color: #fff;\n  background-color: #398439;\n  border-color: #255625;\n}\n\n.btn-success:active, .btn-success.active, .btn-success.ax-active,\n.open > .btn-success.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-success.disabled:hover, .btn-success[disabled]:hover,\n.btn-success.ax-disabled:hover, .btn-success.disabled:focus, .btn-success[disabled]:focus,\n.btn-success.ax-disabled:focus, .btn-success.disabled.focus, .btn-success.focus[disabled],\n.btn-success.focus.ax-disabled, .btn-success[disabled]:hover, .btn-success[disabled]:focus, .btn-success[disabled].focus,\nfieldset[disabled] .btn-success:hover,\nfieldset[disabled] .btn-success:focus,\nfieldset[disabled] .btn-success.focus {\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n}\n\n.btn-success .badge {\n  color: #5cb85c;\n  background-color: #fff;\n}\n\n.btn-info {\n  color: #fff;\n  background-color: #5bc0de;\n  border-color: #46b8da;\n}\n\n.btn-info:focus, .btn-info.focus {\n  color: #fff;\n  background-color: #31b0d5;\n  border-color: #1b6d85;\n}\n\n.btn-info:hover {\n  color: #fff;\n  background-color: #31b0d5;\n  border-color: #269abc;\n}\n\n.btn-info:active, .btn-info.active, .btn-info.ax-active,\n.open > .btn-info.dropdown-toggle {\n  color: #fff;\n  background-color: #31b0d5;\n  border-color: #269abc;\n}\n\n.btn-info:active:hover, .btn-info:active:focus, .btn-info:active.focus, .btn-info.active:hover, .btn-info.ax-active:hover, .btn-info.active:focus, .btn-info.ax-active:focus, .btn-info.active.focus, .btn-info.focus.ax-active,\n.open > .btn-info.dropdown-toggle:hover,\n.open > .btn-info.dropdown-toggle:focus,\n.open > .btn-info.dropdown-toggle.focus {\n  color: #fff;\n  background-color: #269abc;\n  border-color: #1b6d85;\n}\n\n.btn-info:active, .btn-info.active, .btn-info.ax-active,\n.open > .btn-info.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-info.disabled:hover, .btn-info[disabled]:hover,\n.btn-info.ax-disabled:hover, .btn-info.disabled:focus, .btn-info[disabled]:focus,\n.btn-info.ax-disabled:focus, .btn-info.disabled.focus, .btn-info.focus[disabled],\n.btn-info.focus.ax-disabled, .btn-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled].focus,\nfieldset[disabled] .btn-info:hover,\nfieldset[disabled] .btn-info:focus,\nfieldset[disabled] .btn-info.focus {\n  background-color: #5bc0de;\n  border-color: #46b8da;\n}\n\n.btn-info .badge {\n  color: #5bc0de;\n  background-color: #fff;\n}\n\n.btn-warning {\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236;\n}\n\n.btn-warning:focus, .btn-warning.focus {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #985f0d;\n}\n\n.btn-warning:hover {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #d58512;\n}\n\n.btn-warning:active, .btn-warning.active, .btn-warning.ax-active,\n.open > .btn-warning.dropdown-toggle {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #d58512;\n}\n\n.btn-warning:active:hover, .btn-warning:active:focus, .btn-warning:active.focus, .btn-warning.active:hover, .btn-warning.ax-active:hover, .btn-warning.active:focus, .btn-warning.ax-active:focus, .btn-warning.active.focus, .btn-warning.focus.ax-active,\n.open > .btn-warning.dropdown-toggle:hover,\n.open > .btn-warning.dropdown-toggle:focus,\n.open > .btn-warning.dropdown-toggle.focus {\n  color: #fff;\n  background-color: #d58512;\n  border-color: #985f0d;\n}\n\n.btn-warning:active, .btn-warning.active, .btn-warning.ax-active,\n.open > .btn-warning.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-warning.disabled:hover, .btn-warning[disabled]:hover,\n.btn-warning.ax-disabled:hover, .btn-warning.disabled:focus, .btn-warning[disabled]:focus,\n.btn-warning.ax-disabled:focus, .btn-warning.disabled.focus, .btn-warning.focus[disabled],\n.btn-warning.focus.ax-disabled, .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, .btn-warning[disabled].focus,\nfieldset[disabled] .btn-warning:hover,\nfieldset[disabled] .btn-warning:focus,\nfieldset[disabled] .btn-warning.focus {\n  background-color: #f0ad4e;\n  border-color: #eea236;\n}\n\n.btn-warning .badge {\n  color: #f0ad4e;\n  background-color: #fff;\n}\n\n.btn-danger {\n  color: #fff;\n  background-color: #d9534f;\n  border-color: #d43f3a;\n}\n\n.btn-danger:focus, .btn-danger.focus {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #761c19;\n}\n\n.btn-danger:hover {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #ac2925;\n}\n\n.btn-danger:active, .btn-danger.active, .btn-danger.ax-active,\n.open > .btn-danger.dropdown-toggle {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #ac2925;\n}\n\n.btn-danger:active:hover, .btn-danger:active:focus, .btn-danger:active.focus, .btn-danger.active:hover, .btn-danger.ax-active:hover, .btn-danger.active:focus, .btn-danger.ax-active:focus, .btn-danger.active.focus, .btn-danger.focus.ax-active,\n.open > .btn-danger.dropdown-toggle:hover,\n.open > .btn-danger.dropdown-toggle:focus,\n.open > .btn-danger.dropdown-toggle.focus {\n  color: #fff;\n  background-color: #ac2925;\n  border-color: #761c19;\n}\n\n.btn-danger:active, .btn-danger.active, .btn-danger.ax-active,\n.open > .btn-danger.dropdown-toggle {\n  background-image: none;\n}\n\n.btn-danger.disabled:hover, .btn-danger[disabled]:hover,\n.btn-danger.ax-disabled:hover, .btn-danger.disabled:focus, .btn-danger[disabled]:focus,\n.btn-danger.ax-disabled:focus, .btn-danger.disabled.focus, .btn-danger.focus[disabled],\n.btn-danger.focus.ax-disabled, .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-danger[disabled].focus,\nfieldset[disabled] .btn-danger:hover,\nfieldset[disabled] .btn-danger:focus,\nfieldset[disabled] .btn-danger.focus {\n  background-color: #d9534f;\n  border-color: #d43f3a;\n}\n\n.btn-danger .badge {\n  color: #d9534f;\n  background-color: #fff;\n}\n\n.btn-link {\n  color: #337ab7;\n  font-weight: normal;\n  border-radius: 0;\n}\n\n.btn-link, .btn-link:active, .btn-link.active, .btn-link.ax-active, .btn-link[disabled],\nfieldset[disabled] .btn-link {\n  background-color: transparent;\n  box-shadow: none;\n}\n\n.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active {\n  border-color: transparent;\n}\n\n.btn-link:hover, .btn-link:focus {\n  color: #23527c;\n  text-decoration: underline;\n  background-color: transparent;\n}\n\n.btn-link[disabled]:hover, .btn-link[disabled]:focus,\nfieldset[disabled] .btn-link:hover,\nfieldset[disabled] .btn-link:focus {\n  color: #777777;\n  text-decoration: none;\n}\n\n.btn-lg, .btn-group-lg > .btn {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\n\n.btn-sm, .btn-group-sm > .btn {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n\n.btn-xs, .btn-group-xs > .btn {\n  padding: 1px 5px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n\n.btn-block {\n  display: block;\n  width: 100%;\n}\n\n.btn-block + .btn-block {\n  margin-top: 5px;\n}\n\ninput[type=\"submit\"].btn-block,\ninput[type=\"reset\"].btn-block,\ninput[type=\"button\"].btn-block {\n  width: 100%;\n}\n\n.fade {\n  opacity: 0;\n  -webkit-transition: opacity 0.15s linear;\n  transition: opacity 0.15s linear;\n}\n\n.fade.in {\n  opacity: 1;\n}\n\n.collapse {\n  display: none;\n}\n\n.collapse.in {\n  display: block;\n}\n\ntr.collapse.in {\n  display: table-row;\n}\n\ntbody.collapse.in {\n  display: table-row-group;\n}\n\n.collapsing {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  -webkit-transition-property: height, visibility;\n  transition-property: height, visibility;\n  -webkit-transition-duration: 0.35s;\n  transition-duration: 0.35s;\n  -webkit-transition-timing-function: ease;\n  transition-timing-function: ease;\n}\n\n@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url(" + __webpack_require__(82) + ");\n  src: url(" + __webpack_require__(82) + "?#iefix) format(\"embedded-opentype\"), url(" + __webpack_require__(167) + ") format(\"woff2\"), url(" + __webpack_require__(166) + ") format(\"woff\"), url(" + __webpack_require__(165) + ") format(\"truetype\"), url(" + __webpack_require__(173) + "#glyphicons_halflingsregular) format(\"svg\");\n}\n\n.glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.glyphicon-asterisk:before {\n  content: \"*\";\n}\n\n.glyphicon-plus:before {\n  content: \"+\";\n}\n\n.glyphicon-euro:before,\n.glyphicon-eur:before {\n  content: \"\\20AC\";\n}\n\n.glyphicon-minus:before {\n  content: \"\\2212\";\n}\n\n.glyphicon-cloud:before {\n  content: \"\\2601\";\n}\n\n.glyphicon-envelope:before {\n  content: \"\\2709\";\n}\n\n.glyphicon-pencil:before {\n  content: \"\\270F\";\n}\n\n.glyphicon-glass:before {\n  content: \"\\E001\";\n}\n\n.glyphicon-music:before {\n  content: \"\\E002\";\n}\n\n.glyphicon-search:before {\n  content: \"\\E003\";\n}\n\n.glyphicon-heart:before {\n  content: \"\\E005\";\n}\n\n.glyphicon-star:before {\n  content: \"\\E006\";\n}\n\n.glyphicon-star-empty:before {\n  content: \"\\E007\";\n}\n\n.glyphicon-user:before {\n  content: \"\\E008\";\n}\n\n.glyphicon-film:before {\n  content: \"\\E009\";\n}\n\n.glyphicon-th-large:before {\n  content: \"\\E010\";\n}\n\n.glyphicon-th:before {\n  content: \"\\E011\";\n}\n\n.glyphicon-th-list:before {\n  content: \"\\E012\";\n}\n\n.glyphicon-ok:before {\n  content: \"\\E013\";\n}\n\n.glyphicon-remove:before {\n  content: \"\\E014\";\n}\n\n.glyphicon-zoom-in:before {\n  content: \"\\E015\";\n}\n\n.glyphicon-zoom-out:before {\n  content: \"\\E016\";\n}\n\n.glyphicon-off:before {\n  content: \"\\E017\";\n}\n\n.glyphicon-signal:before {\n  content: \"\\E018\";\n}\n\n.glyphicon-cog:before {\n  content: \"\\E019\";\n}\n\n.glyphicon-trash:before {\n  content: \"\\E020\";\n}\n\n.glyphicon-home:before {\n  content: \"\\E021\";\n}\n\n.glyphicon-file:before {\n  content: \"\\E022\";\n}\n\n.glyphicon-time:before {\n  content: \"\\E023\";\n}\n\n.glyphicon-road:before {\n  content: \"\\E024\";\n}\n\n.glyphicon-download-alt:before {\n  content: \"\\E025\";\n}\n\n.glyphicon-download:before {\n  content: \"\\E026\";\n}\n\n.glyphicon-upload:before {\n  content: \"\\E027\";\n}\n\n.glyphicon-inbox:before {\n  content: \"\\E028\";\n}\n\n.glyphicon-play-circle:before {\n  content: \"\\E029\";\n}\n\n.glyphicon-repeat:before {\n  content: \"\\E030\";\n}\n\n.glyphicon-refresh:before {\n  content: \"\\E031\";\n}\n\n.glyphicon-list-alt:before {\n  content: \"\\E032\";\n}\n\n.glyphicon-lock:before {\n  content: \"\\E033\";\n}\n\n.glyphicon-flag:before {\n  content: \"\\E034\";\n}\n\n.glyphicon-headphones:before {\n  content: \"\\E035\";\n}\n\n.glyphicon-volume-off:before {\n  content: \"\\E036\";\n}\n\n.glyphicon-volume-down:before {\n  content: \"\\E037\";\n}\n\n.glyphicon-volume-up:before {\n  content: \"\\E038\";\n}\n\n.glyphicon-qrcode:before {\n  content: \"\\E039\";\n}\n\n.glyphicon-barcode:before {\n  content: \"\\E040\";\n}\n\n.glyphicon-tag:before {\n  content: \"\\E041\";\n}\n\n.glyphicon-tags:before {\n  content: \"\\E042\";\n}\n\n.glyphicon-book:before {\n  content: \"\\E043\";\n}\n\n.glyphicon-bookmark:before {\n  content: \"\\E044\";\n}\n\n.glyphicon-print:before {\n  content: \"\\E045\";\n}\n\n.glyphicon-camera:before {\n  content: \"\\E046\";\n}\n\n.glyphicon-font:before {\n  content: \"\\E047\";\n}\n\n.glyphicon-bold:before {\n  content: \"\\E048\";\n}\n\n.glyphicon-italic:before {\n  content: \"\\E049\";\n}\n\n.glyphicon-text-height:before {\n  content: \"\\E050\";\n}\n\n.glyphicon-text-width:before {\n  content: \"\\E051\";\n}\n\n.glyphicon-align-left:before {\n  content: \"\\E052\";\n}\n\n.glyphicon-align-center:before {\n  content: \"\\E053\";\n}\n\n.glyphicon-align-right:before {\n  content: \"\\E054\";\n}\n\n.glyphicon-align-justify:before {\n  content: \"\\E055\";\n}\n\n.glyphicon-list:before {\n  content: \"\\E056\";\n}\n\n.glyphicon-indent-left:before {\n  content: \"\\E057\";\n}\n\n.glyphicon-indent-right:before {\n  content: \"\\E058\";\n}\n\n.glyphicon-facetime-video:before {\n  content: \"\\E059\";\n}\n\n.glyphicon-picture:before {\n  content: \"\\E060\";\n}\n\n.glyphicon-map-marker:before {\n  content: \"\\E062\";\n}\n\n.glyphicon-adjust:before {\n  content: \"\\E063\";\n}\n\n.glyphicon-tint:before {\n  content: \"\\E064\";\n}\n\n.glyphicon-edit:before {\n  content: \"\\E065\";\n}\n\n.glyphicon-share:before {\n  content: \"\\E066\";\n}\n\n.glyphicon-check:before {\n  content: \"\\E067\";\n}\n\n.glyphicon-move:before {\n  content: \"\\E068\";\n}\n\n.glyphicon-step-backward:before {\n  content: \"\\E069\";\n}\n\n.glyphicon-fast-backward:before {\n  content: \"\\E070\";\n}\n\n.glyphicon-backward:before {\n  content: \"\\E071\";\n}\n\n.glyphicon-play:before {\n  content: \"\\E072\";\n}\n\n.glyphicon-pause:before {\n  content: \"\\E073\";\n}\n\n.glyphicon-stop:before {\n  content: \"\\E074\";\n}\n\n.glyphicon-forward:before {\n  content: \"\\E075\";\n}\n\n.glyphicon-fast-forward:before {\n  content: \"\\E076\";\n}\n\n.glyphicon-step-forward:before {\n  content: \"\\E077\";\n}\n\n.glyphicon-eject:before {\n  content: \"\\E078\";\n}\n\n.glyphicon-chevron-left:before {\n  content: \"\\E079\";\n}\n\n.glyphicon-chevron-right:before {\n  content: \"\\E080\";\n}\n\n.glyphicon-plus-sign:before {\n  content: \"\\E081\";\n}\n\n.glyphicon-minus-sign:before {\n  content: \"\\E082\";\n}\n\n.glyphicon-remove-sign:before {\n  content: \"\\E083\";\n}\n\n.glyphicon-ok-sign:before {\n  content: \"\\E084\";\n}\n\n.glyphicon-question-sign:before {\n  content: \"\\E085\";\n}\n\n.glyphicon-info-sign:before {\n  content: \"\\E086\";\n}\n\n.glyphicon-screenshot:before {\n  content: \"\\E087\";\n}\n\n.glyphicon-remove-circle:before {\n  content: \"\\E088\";\n}\n\n.glyphicon-ok-circle:before {\n  content: \"\\E089\";\n}\n\n.glyphicon-ban-circle:before {\n  content: \"\\E090\";\n}\n\n.glyphicon-arrow-left:before {\n  content: \"\\E091\";\n}\n\n.glyphicon-arrow-right:before {\n  content: \"\\E092\";\n}\n\n.glyphicon-arrow-up:before {\n  content: \"\\E093\";\n}\n\n.glyphicon-arrow-down:before {\n  content: \"\\E094\";\n}\n\n.glyphicon-share-alt:before {\n  content: \"\\E095\";\n}\n\n.glyphicon-resize-full:before {\n  content: \"\\E096\";\n}\n\n.glyphicon-resize-small:before {\n  content: \"\\E097\";\n}\n\n.glyphicon-exclamation-sign:before {\n  content: \"\\E101\";\n}\n\n.glyphicon-gift:before {\n  content: \"\\E102\";\n}\n\n.glyphicon-leaf:before {\n  content: \"\\E103\";\n}\n\n.glyphicon-fire:before {\n  content: \"\\E104\";\n}\n\n.glyphicon-eye-open:before {\n  content: \"\\E105\";\n}\n\n.glyphicon-eye-close:before {\n  content: \"\\E106\";\n}\n\n.glyphicon-warning-sign:before {\n  content: \"\\E107\";\n}\n\n.glyphicon-plane:before {\n  content: \"\\E108\";\n}\n\n.glyphicon-calendar:before {\n  content: \"\\E109\";\n}\n\n.glyphicon-random:before {\n  content: \"\\E110\";\n}\n\n.glyphicon-comment:before {\n  content: \"\\E111\";\n}\n\n.glyphicon-magnet:before {\n  content: \"\\E112\";\n}\n\n.glyphicon-chevron-up:before {\n  content: \"\\E113\";\n}\n\n.glyphicon-chevron-down:before {\n  content: \"\\E114\";\n}\n\n.glyphicon-retweet:before {\n  content: \"\\E115\";\n}\n\n.glyphicon-shopping-cart:before {\n  content: \"\\E116\";\n}\n\n.glyphicon-folder-close:before {\n  content: \"\\E117\";\n}\n\n.glyphicon-folder-open:before {\n  content: \"\\E118\";\n}\n\n.glyphicon-resize-vertical:before {\n  content: \"\\E119\";\n}\n\n.glyphicon-resize-horizontal:before {\n  content: \"\\E120\";\n}\n\n.glyphicon-hdd:before {\n  content: \"\\E121\";\n}\n\n.glyphicon-bullhorn:before {\n  content: \"\\E122\";\n}\n\n.glyphicon-bell:before {\n  content: \"\\E123\";\n}\n\n.glyphicon-certificate:before {\n  content: \"\\E124\";\n}\n\n.glyphicon-thumbs-up:before {\n  content: \"\\E125\";\n}\n\n.glyphicon-thumbs-down:before {\n  content: \"\\E126\";\n}\n\n.glyphicon-hand-right:before {\n  content: \"\\E127\";\n}\n\n.glyphicon-hand-left:before {\n  content: \"\\E128\";\n}\n\n.glyphicon-hand-up:before {\n  content: \"\\E129\";\n}\n\n.glyphicon-hand-down:before {\n  content: \"\\E130\";\n}\n\n.glyphicon-circle-arrow-right:before {\n  content: \"\\E131\";\n}\n\n.glyphicon-circle-arrow-left:before {\n  content: \"\\E132\";\n}\n\n.glyphicon-circle-arrow-up:before {\n  content: \"\\E133\";\n}\n\n.glyphicon-circle-arrow-down:before {\n  content: \"\\E134\";\n}\n\n.glyphicon-globe:before {\n  content: \"\\E135\";\n}\n\n.glyphicon-wrench:before {\n  content: \"\\E136\";\n}\n\n.glyphicon-tasks:before {\n  content: \"\\E137\";\n}\n\n.glyphicon-filter:before {\n  content: \"\\E138\";\n}\n\n.glyphicon-briefcase:before {\n  content: \"\\E139\";\n}\n\n.glyphicon-fullscreen:before {\n  content: \"\\E140\";\n}\n\n.glyphicon-dashboard:before {\n  content: \"\\E141\";\n}\n\n.glyphicon-paperclip:before {\n  content: \"\\E142\";\n}\n\n.glyphicon-heart-empty:before {\n  content: \"\\E143\";\n}\n\n.glyphicon-link:before {\n  content: \"\\E144\";\n}\n\n.glyphicon-phone:before {\n  content: \"\\E145\";\n}\n\n.glyphicon-pushpin:before {\n  content: \"\\E146\";\n}\n\n.glyphicon-usd:before {\n  content: \"\\E148\";\n}\n\n.glyphicon-gbp:before {\n  content: \"\\E149\";\n}\n\n.glyphicon-sort:before {\n  content: \"\\E150\";\n}\n\n.glyphicon-sort-by-alphabet:before {\n  content: \"\\E151\";\n}\n\n.glyphicon-sort-by-alphabet-alt:before {\n  content: \"\\E152\";\n}\n\n.glyphicon-sort-by-order:before {\n  content: \"\\E153\";\n}\n\n.glyphicon-sort-by-order-alt:before {\n  content: \"\\E154\";\n}\n\n.glyphicon-sort-by-attributes:before {\n  content: \"\\E155\";\n}\n\n.glyphicon-sort-by-attributes-alt:before {\n  content: \"\\E156\";\n}\n\n.glyphicon-unchecked:before {\n  content: \"\\E157\";\n}\n\n.glyphicon-expand:before {\n  content: \"\\E158\";\n}\n\n.glyphicon-collapse-down:before {\n  content: \"\\E159\";\n}\n\n.glyphicon-collapse-up:before {\n  content: \"\\E160\";\n}\n\n.glyphicon-log-in:before {\n  content: \"\\E161\";\n}\n\n.glyphicon-flash:before {\n  content: \"\\E162\";\n}\n\n.glyphicon-log-out:before {\n  content: \"\\E163\";\n}\n\n.glyphicon-new-window:before {\n  content: \"\\E164\";\n}\n\n.glyphicon-record:before {\n  content: \"\\E165\";\n}\n\n.glyphicon-save:before {\n  content: \"\\E166\";\n}\n\n.glyphicon-open:before {\n  content: \"\\E167\";\n}\n\n.glyphicon-saved:before {\n  content: \"\\E168\";\n}\n\n.glyphicon-import:before {\n  content: \"\\E169\";\n}\n\n.glyphicon-export:before {\n  content: \"\\E170\";\n}\n\n.glyphicon-send:before {\n  content: \"\\E171\";\n}\n\n.glyphicon-floppy-disk:before {\n  content: \"\\E172\";\n}\n\n.glyphicon-floppy-saved:before {\n  content: \"\\E173\";\n}\n\n.glyphicon-floppy-remove:before {\n  content: \"\\E174\";\n}\n\n.glyphicon-floppy-save:before {\n  content: \"\\E175\";\n}\n\n.glyphicon-floppy-open:before {\n  content: \"\\E176\";\n}\n\n.glyphicon-credit-card:before {\n  content: \"\\E177\";\n}\n\n.glyphicon-transfer:before {\n  content: \"\\E178\";\n}\n\n.glyphicon-cutlery:before {\n  content: \"\\E179\";\n}\n\n.glyphicon-header:before {\n  content: \"\\E180\";\n}\n\n.glyphicon-compressed:before {\n  content: \"\\E181\";\n}\n\n.glyphicon-earphone:before {\n  content: \"\\E182\";\n}\n\n.glyphicon-phone-alt:before {\n  content: \"\\E183\";\n}\n\n.glyphicon-tower:before {\n  content: \"\\E184\";\n}\n\n.glyphicon-stats:before {\n  content: \"\\E185\";\n}\n\n.glyphicon-sd-video:before {\n  content: \"\\E186\";\n}\n\n.glyphicon-hd-video:before {\n  content: \"\\E187\";\n}\n\n.glyphicon-subtitles:before {\n  content: \"\\E188\";\n}\n\n.glyphicon-sound-stereo:before {\n  content: \"\\E189\";\n}\n\n.glyphicon-sound-dolby:before {\n  content: \"\\E190\";\n}\n\n.glyphicon-sound-5-1:before {\n  content: \"\\E191\";\n}\n\n.glyphicon-sound-6-1:before {\n  content: \"\\E192\";\n}\n\n.glyphicon-sound-7-1:before {\n  content: \"\\E193\";\n}\n\n.glyphicon-copyright-mark:before {\n  content: \"\\E194\";\n}\n\n.glyphicon-registration-mark:before {\n  content: \"\\E195\";\n}\n\n.glyphicon-cloud-download:before {\n  content: \"\\E197\";\n}\n\n.glyphicon-cloud-upload:before {\n  content: \"\\E198\";\n}\n\n.glyphicon-tree-conifer:before {\n  content: \"\\E199\";\n}\n\n.glyphicon-tree-deciduous:before {\n  content: \"\\E200\";\n}\n\n.glyphicon-cd:before {\n  content: \"\\E201\";\n}\n\n.glyphicon-save-file:before {\n  content: \"\\E202\";\n}\n\n.glyphicon-open-file:before {\n  content: \"\\E203\";\n}\n\n.glyphicon-level-up:before {\n  content: \"\\E204\";\n}\n\n.glyphicon-copy:before {\n  content: \"\\E205\";\n}\n\n.glyphicon-paste:before {\n  content: \"\\E206\";\n}\n\n.glyphicon-alert:before {\n  content: \"\\E209\";\n}\n\n.glyphicon-equalizer:before {\n  content: \"\\E210\";\n}\n\n.glyphicon-king:before {\n  content: \"\\E211\";\n}\n\n.glyphicon-queen:before {\n  content: \"\\E212\";\n}\n\n.glyphicon-pawn:before {\n  content: \"\\E213\";\n}\n\n.glyphicon-bishop:before {\n  content: \"\\E214\";\n}\n\n.glyphicon-knight:before {\n  content: \"\\E215\";\n}\n\n.glyphicon-baby-formula:before {\n  content: \"\\E216\";\n}\n\n.glyphicon-tent:before {\n  content: \"\\26FA\";\n}\n\n.glyphicon-blackboard:before {\n  content: \"\\E218\";\n}\n\n.glyphicon-bed:before {\n  content: \"\\E219\";\n}\n\n.glyphicon-apple:before {\n  content: \"\\F8FF\";\n}\n\n.glyphicon-erase:before {\n  content: \"\\E221\";\n}\n\n.glyphicon-hourglass:before {\n  content: \"\\231B\";\n}\n\n.glyphicon-lamp:before {\n  content: \"\\E223\";\n}\n\n.glyphicon-duplicate:before {\n  content: \"\\E224\";\n}\n\n.glyphicon-piggy-bank:before {\n  content: \"\\E225\";\n}\n\n.glyphicon-scissors:before {\n  content: \"\\E226\";\n}\n\n.glyphicon-bitcoin:before {\n  content: \"\\E227\";\n}\n\n.glyphicon-btc:before {\n  content: \"\\E227\";\n}\n\n.glyphicon-xbt:before {\n  content: \"\\E227\";\n}\n\n.glyphicon-yen:before {\n  content: \"\\A5\";\n}\n\n.glyphicon-jpy:before {\n  content: \"\\A5\";\n}\n\n.glyphicon-ruble:before {\n  content: \"\\20BD\";\n}\n\n.glyphicon-rub:before {\n  content: \"\\20BD\";\n}\n\n.glyphicon-scale:before {\n  content: \"\\E230\";\n}\n\n.glyphicon-ice-lolly:before {\n  content: \"\\E231\";\n}\n\n.glyphicon-ice-lolly-tasted:before {\n  content: \"\\E232\";\n}\n\n.glyphicon-education:before {\n  content: \"\\E233\";\n}\n\n.glyphicon-option-horizontal:before {\n  content: \"\\E234\";\n}\n\n.glyphicon-option-vertical:before {\n  content: \"\\E235\";\n}\n\n.glyphicon-menu-hamburger:before {\n  content: \"\\E236\";\n}\n\n.glyphicon-modal-window:before {\n  content: \"\\E237\";\n}\n\n.glyphicon-oil:before {\n  content: \"\\E238\";\n}\n\n.glyphicon-grain:before {\n  content: \"\\E239\";\n}\n\n.glyphicon-sunglasses:before {\n  content: \"\\E240\";\n}\n\n.glyphicon-text-size:before {\n  content: \"\\E241\";\n}\n\n.glyphicon-text-color:before {\n  content: \"\\E242\";\n}\n\n.glyphicon-text-background:before {\n  content: \"\\E243\";\n}\n\n.glyphicon-object-align-top:before {\n  content: \"\\E244\";\n}\n\n.glyphicon-object-align-bottom:before {\n  content: \"\\E245\";\n}\n\n.glyphicon-object-align-horizontal:before {\n  content: \"\\E246\";\n}\n\n.glyphicon-object-align-left:before {\n  content: \"\\E247\";\n}\n\n.glyphicon-object-align-vertical:before {\n  content: \"\\E248\";\n}\n\n.glyphicon-object-align-right:before {\n  content: \"\\E249\";\n}\n\n.glyphicon-triangle-right:before {\n  content: \"\\E250\";\n}\n\n.glyphicon-triangle-left:before {\n  content: \"\\E251\";\n}\n\n.glyphicon-triangle-bottom:before {\n  content: \"\\E252\";\n}\n\n.glyphicon-triangle-top:before {\n  content: \"\\E253\";\n}\n\n.glyphicon-console:before {\n  content: \"\\E254\";\n}\n\n.glyphicon-superscript:before {\n  content: \"\\E255\";\n}\n\n.glyphicon-subscript:before {\n  content: \"\\E256\";\n}\n\n.glyphicon-menu-left:before {\n  content: \"\\E257\";\n}\n\n.glyphicon-menu-right:before {\n  content: \"\\E258\";\n}\n\n.glyphicon-menu-down:before {\n  content: \"\\E259\";\n}\n\n.glyphicon-menu-up:before {\n  content: \"\\E260\";\n}\n\n.caret {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 2px;\n  vertical-align: middle;\n  border-top: 4px dashed;\n  border-top: 4px solid \\9;\n  border-right: 4px solid transparent;\n  border-left: 4px solid transparent;\n}\n\n.dropup,\n.dropdown {\n  position: relative;\n}\n\n.dropdown-toggle:focus {\n  outline: 0;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 160px;\n  padding: 5px 0;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  text-align: left;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box;\n}\n\n.dropdown-menu.pull-right {\n  right: 0;\n  left: auto;\n}\n\n.dropdown-menu .divider {\n  height: 1px;\n  margin: 9px 0;\n  overflow: hidden;\n  background-color: #e5e5e5;\n}\n\n.dropdown-menu > li > a {\n  display: block;\n  padding: 3px 20px;\n  clear: both;\n  font-weight: normal;\n  line-height: 1.428571429;\n  color: #333333;\n  white-space: nowrap;\n}\n\n.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {\n  text-decoration: none;\n  color: #262626;\n  background-color: #f5f5f5;\n}\n\n.dropdown-menu > .active > a, .dropdown-menu > .ax-active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .ax-active > a:hover, .dropdown-menu > .active > a:focus, .dropdown-menu > .ax-active > a:focus {\n  color: #fff;\n  text-decoration: none;\n  outline: 0;\n  background-color: #337ab7;\n}\n\n.dropdown-menu > .disabled > a, .dropdown-menu > [disabled] > a, .dropdown-menu >\n.ax-disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > [disabled] > a:hover, .dropdown-menu >\n.ax-disabled > a:hover, .dropdown-menu > .disabled > a:focus, .dropdown-menu > [disabled] > a:focus, .dropdown-menu >\n.ax-disabled > a:focus {\n  color: #777777;\n}\n\n.dropdown-menu > .disabled > a:hover, .dropdown-menu > [disabled] > a:hover, .dropdown-menu >\n.ax-disabled > a:hover, .dropdown-menu > .disabled > a:focus, .dropdown-menu > [disabled] > a:focus, .dropdown-menu >\n.ax-disabled > a:focus {\n  text-decoration: none;\n  background-color: transparent;\n  background-image: none;\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n  cursor: not-allowed;\n}\n\n.open > .dropdown-menu {\n  display: block;\n}\n\n.open > a {\n  outline: 0;\n}\n\n.dropdown-menu-right {\n  left: auto;\n  right: 0;\n}\n\n.dropdown-menu-left {\n  left: 0;\n  right: auto;\n}\n\n.dropdown-header {\n  display: block;\n  padding: 3px 20px;\n  font-size: 12px;\n  line-height: 1.428571429;\n  color: #777777;\n  white-space: nowrap;\n}\n\n.dropdown-backdrop {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  z-index: 990;\n}\n\n.pull-right > .dropdown-menu {\n  right: 0;\n  left: auto;\n}\n\n.dropup .caret,\n.navbar-fixed-bottom .dropdown .caret {\n  border-top: 0;\n  border-bottom: 4px dashed;\n  border-bottom: 4px solid \\9;\n  content: \"\";\n}\n\n.dropup .dropdown-menu,\n.navbar-fixed-bottom .dropdown .dropdown-menu {\n  top: auto;\n  bottom: 100%;\n  margin-bottom: 2px;\n}\n\n@media (min-width: 768px) {\n  .navbar-right .dropdown-menu {\n    right: 0;\n    left: auto;\n  }\n  .navbar-right .dropdown-menu-left {\n    left: 0;\n    right: auto;\n  }\n}\n\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.btn-group > .btn,\n.btn-group-vertical > .btn {\n  position: relative;\n  float: left;\n}\n\n.btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active, .btn-group > .btn.ax-active,\n.btn-group-vertical > .btn:hover,\n.btn-group-vertical > .btn:focus,\n.btn-group-vertical > .btn:active,\n.btn-group-vertical > .btn.active,\n.btn-group-vertical > .btn.ax-active {\n  z-index: 2;\n}\n\n.btn-group .btn + .btn,\n.btn-group .btn + .btn-group,\n.btn-group .btn-group + .btn,\n.btn-group .btn-group + .btn-group {\n  margin-left: -1px;\n}\n\n.btn-toolbar {\n  margin-left: -5px;\n}\n\n.btn-toolbar:before, .btn-toolbar:after {\n  content: \" \";\n  display: table;\n}\n\n.btn-toolbar:after {\n  clear: both;\n}\n\n.btn-toolbar .btn,\n.btn-toolbar .btn-group,\n.btn-toolbar .input-group {\n  float: left;\n}\n\n.btn-toolbar > .btn,\n.btn-toolbar > .btn-group,\n.btn-toolbar > .input-group {\n  margin-left: 5px;\n}\n\n.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {\n  border-radius: 0;\n}\n\n.btn-group > .btn:first-child {\n  margin-left: 0;\n}\n\n.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.btn-group > .btn:last-child:not(:first-child),\n.btn-group > .dropdown-toggle:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.btn-group > .btn-group {\n  float: left;\n}\n\n.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0;\n}\n\n.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.btn-group .dropdown-toggle:active,\n.btn-group.open .dropdown-toggle {\n  outline: 0;\n}\n\n.btn-group > .btn + .dropdown-toggle {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.btn-group > .btn-lg + .dropdown-toggle, .btn-group-lg.btn-group > .btn + .dropdown-toggle {\n  padding-left: 12px;\n  padding-right: 12px;\n}\n\n.btn-group.open .dropdown-toggle {\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n}\n\n.btn-group.open .dropdown-toggle.btn-link {\n  box-shadow: none;\n}\n\n.btn .caret {\n  margin-left: 0;\n}\n\n.btn-lg .caret, .btn-group-lg > .btn .caret {\n  border-width: 5px 5px 0;\n  border-bottom-width: 0;\n}\n\n.dropup .btn-lg .caret, .dropup .btn-group-lg > .btn .caret {\n  border-width: 0 5px 5px;\n}\n\n.btn-group-vertical > .btn,\n.btn-group-vertical > .btn-group,\n.btn-group-vertical > .btn-group > .btn {\n  display: block;\n  float: none;\n  width: 100%;\n  max-width: 100%;\n}\n\n.btn-group-vertical > .btn-group:before, .btn-group-vertical > .btn-group:after {\n  content: \" \";\n  display: table;\n}\n\n.btn-group-vertical > .btn-group:after {\n  clear: both;\n}\n\n.btn-group-vertical > .btn-group > .btn {\n  float: none;\n}\n\n.btn-group-vertical > .btn + .btn,\n.btn-group-vertical > .btn + .btn-group,\n.btn-group-vertical > .btn-group + .btn,\n.btn-group-vertical > .btn-group + .btn-group {\n  margin-top: -1px;\n  margin-left: 0;\n}\n\n.btn-group-vertical > .btn:not(:first-child):not(:last-child) {\n  border-radius: 0;\n}\n\n.btn-group-vertical > .btn:first-child:not(:last-child) {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.btn-group-vertical > .btn:last-child:not(:first-child) {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n\n.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0;\n}\n\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.btn-group-justified {\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: separate;\n}\n\n.btn-group-justified > .btn,\n.btn-group-justified > .btn-group {\n  float: none;\n  display: table-cell;\n  width: 1%;\n}\n\n.btn-group-justified > .btn-group .btn {\n  width: 100%;\n}\n\n.btn-group-justified > .btn-group .dropdown-menu {\n  left: auto;\n}\n\n[data-toggle=\"buttons\"] > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"checkbox\"] {\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  pointer-events: none;\n}\n\n.input-group {\n  position: relative;\n  display: table;\n  border-collapse: separate;\n}\n\n.input-group[class*=\"col-\"] {\n  float: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.input-group .form-control {\n  position: relative;\n  z-index: 2;\n  float: left;\n  width: 100%;\n  margin-bottom: 0;\n}\n\n.input-group .form-control:focus {\n  z-index: 3;\n}\n\n.input-group-addon,\n.input-group-btn,\n.input-group .form-control {\n  display: table-cell;\n}\n\n.input-group-addon:not(:first-child):not(:last-child),\n.input-group-btn:not(:first-child):not(:last-child),\n.input-group .form-control:not(:first-child):not(:last-child) {\n  border-radius: 0;\n}\n\n.input-group-addon,\n.input-group-btn {\n  width: 1%;\n  white-space: nowrap;\n  vertical-align: middle;\n}\n\n.input-group-addon {\n  padding: 6px 12px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1;\n  color: #555555;\n  text-align: center;\n  background-color: #eeeeee;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.input-group-addon.input-sm,\n.input-group-sm > .input-group-addon,\n.input-group-sm > .input-group-btn > .input-group-addon.btn {\n  padding: 5px 10px;\n  font-size: 12px;\n  border-radius: 3px;\n}\n\n.input-group-addon.input-lg,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .input-group-addon.btn {\n  padding: 10px 16px;\n  font-size: 18px;\n  border-radius: 6px;\n}\n\n.input-group-addon input[type=\"radio\"],\n.input-group-addon input[type=\"checkbox\"] {\n  margin-top: 0;\n}\n\n.input-group .form-control:first-child,\n.input-group-addon:first-child,\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group > .btn,\n.input-group-btn:first-child > .dropdown-toggle,\n.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),\n.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.input-group-addon:first-child {\n  border-right: 0;\n}\n\n.input-group .form-control:last-child,\n.input-group-addon:last-child,\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group > .btn,\n.input-group-btn:last-child > .dropdown-toggle,\n.input-group-btn:first-child > .btn:not(:first-child),\n.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.input-group-addon:last-child {\n  border-left: 0;\n}\n\n.input-group-btn {\n  position: relative;\n  font-size: 0;\n  white-space: nowrap;\n}\n\n.input-group-btn > .btn {\n  position: relative;\n}\n\n.input-group-btn > .btn + .btn {\n  margin-left: -1px;\n}\n\n.input-group-btn > .btn:hover, .input-group-btn > .btn:focus, .input-group-btn > .btn:active {\n  z-index: 2;\n}\n\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group {\n  margin-right: -1px;\n}\n\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group {\n  z-index: 2;\n  margin-left: -1px;\n}\n\n.nav {\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style: none;\n}\n\n.nav:before, .nav:after {\n  content: \" \";\n  display: table;\n}\n\n.nav:after {\n  clear: both;\n}\n\n.nav > li {\n  position: relative;\n  display: block;\n}\n\n.nav > li > a {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n}\n\n.nav > li > a:hover, .nav > li > a:focus {\n  text-decoration: none;\n  background-color: #eeeeee;\n}\n\n.nav > li.disabled > a, .nav > li[disabled] > a, .nav >\nli.ax-disabled > a {\n  color: #777777;\n}\n\n.nav > li.disabled > a:hover, .nav > li[disabled] > a:hover, .nav >\nli.ax-disabled > a:hover, .nav > li.disabled > a:focus, .nav > li[disabled] > a:focus, .nav >\nli.ax-disabled > a:focus {\n  color: #777777;\n  text-decoration: none;\n  background-color: transparent;\n  cursor: not-allowed;\n}\n\n.nav .open > a, .nav .open > a:hover, .nav .open > a:focus {\n  background-color: #eeeeee;\n  border-color: #337ab7;\n}\n\n.nav .nav-divider {\n  height: 1px;\n  margin: 9px 0;\n  overflow: hidden;\n  background-color: #e5e5e5;\n}\n\n.nav > li > a > img {\n  max-width: none;\n}\n\n.nav-tabs {\n  border-bottom: 1px solid #ddd;\n}\n\n.nav-tabs > li {\n  float: left;\n  margin-bottom: -1px;\n}\n\n.nav-tabs > li > a {\n  margin-right: 2px;\n  line-height: 1.428571429;\n  border: 1px solid transparent;\n  border-radius: 4px 4px 0 0;\n}\n\n.nav-tabs > li > a:hover {\n  border-color: #eeeeee #eeeeee #ddd;\n}\n\n.nav-tabs > li.active > a, .nav-tabs > li.ax-active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.ax-active > a:hover, .nav-tabs > li.active > a:focus, .nav-tabs > li.ax-active > a:focus {\n  color: #555555;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-bottom-color: transparent;\n  cursor: default;\n}\n\n.nav-pills > li {\n  float: left;\n}\n\n.nav-pills > li > a {\n  border-radius: 4px;\n}\n\n.nav-pills > li + li {\n  margin-left: 2px;\n}\n\n.nav-pills > li.active > a, .nav-pills > li.ax-active > a, .nav-pills > li.active > a:hover, .nav-pills > li.ax-active > a:hover, .nav-pills > li.active > a:focus, .nav-pills > li.ax-active > a:focus {\n  color: #fff;\n  background-color: #337ab7;\n}\n\n.nav-stacked > li {\n  float: none;\n}\n\n.nav-stacked > li + li {\n  margin-top: 2px;\n  margin-left: 0;\n}\n\n.nav-justified, .nav-tabs.nav-justified {\n  width: 100%;\n}\n\n.nav-justified > li, .nav-tabs.nav-justified > li {\n  float: none;\n}\n\n.nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n  text-align: center;\n  margin-bottom: 5px;\n}\n\n.nav-justified > .dropdown .dropdown-menu {\n  top: auto;\n  left: auto;\n}\n\n@media (min-width: 768px) {\n  .nav-justified > li, .nav-tabs.nav-justified > li {\n    display: table-cell;\n    width: 1%;\n  }\n  .nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n    margin-bottom: 0;\n  }\n}\n\n.nav-tabs-justified, .nav-tabs.nav-justified {\n  border-bottom: 0;\n}\n\n.nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n  margin-right: 0;\n  border-radius: 4px;\n}\n\n.nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a, .nav-tabs-justified > .ax-active > a, .nav-tabs.nav-justified > .ax-active > a,\n.nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n.nav-tabs-justified > .ax-active > a:hover, .nav-tabs.nav-justified > .ax-active > a:hover,\n.nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus,\n.nav-tabs-justified > .ax-active > a:focus, .nav-tabs.nav-justified > .ax-active > a:focus {\n  border: 1px solid #ddd;\n}\n\n@media (min-width: 768px) {\n  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n    border-bottom: 1px solid #ddd;\n    border-radius: 4px 4px 0 0;\n  }\n  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a, .nav-tabs-justified > .ax-active > a, .nav-tabs.nav-justified > .ax-active > a,\n  .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n  .nav-tabs-justified > .ax-active > a:hover, .nav-tabs.nav-justified > .ax-active > a:hover,\n  .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus,\n  .nav-tabs-justified > .ax-active > a:focus, .nav-tabs.nav-justified > .ax-active > a:focus {\n    border-bottom-color: #fff;\n  }\n}\n\n.tab-content > .tab-pane {\n  display: none;\n}\n\n.tab-content > .active, .tab-content > .ax-active {\n  display: block;\n}\n\n.nav-tabs .dropdown-menu {\n  margin-top: -1px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.navbar {\n  position: relative;\n  min-height: 50px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n}\n\n.navbar:before, .navbar:after {\n  content: \" \";\n  display: table;\n}\n\n.navbar:after {\n  clear: both;\n}\n\n@media (min-width: 768px) {\n  .navbar {\n    border-radius: 4px;\n  }\n}\n\n.navbar-header:before, .navbar-header:after {\n  content: \" \";\n  display: table;\n}\n\n.navbar-header:after {\n  clear: both;\n}\n\n@media (min-width: 768px) {\n  .navbar-header {\n    float: left;\n  }\n}\n\n.navbar-collapse {\n  overflow-x: visible;\n  padding-right: 15px;\n  padding-left: 15px;\n  border-top: 1px solid transparent;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  -webkit-overflow-scrolling: touch;\n}\n\n.navbar-collapse:before, .navbar-collapse:after {\n  content: \" \";\n  display: table;\n}\n\n.navbar-collapse:after {\n  clear: both;\n}\n\n.navbar-collapse.in {\n  overflow-y: auto;\n}\n\n@media (min-width: 768px) {\n  .navbar-collapse {\n    width: auto;\n    border-top: 0;\n    box-shadow: none;\n  }\n  .navbar-collapse.collapse {\n    display: block !important;\n    height: auto !important;\n    padding-bottom: 0;\n    overflow: visible !important;\n  }\n  .navbar-collapse.in {\n    overflow-y: visible;\n  }\n  .navbar-fixed-top .navbar-collapse,\n  .navbar-static-top .navbar-collapse,\n  .navbar-fixed-bottom .navbar-collapse {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n.navbar-fixed-top .navbar-collapse,\n.navbar-fixed-bottom .navbar-collapse {\n  max-height: 340px;\n}\n\n@media (max-device-width: 480px) and (orientation: landscape) {\n  .navbar-fixed-top .navbar-collapse,\n  .navbar-fixed-bottom .navbar-collapse {\n    max-height: 200px;\n  }\n}\n\n.container > .navbar-header,\n.container > .navbar-collapse,\n.container-fluid > .navbar-header,\n.container-fluid > .navbar-collapse {\n  margin-right: -15px;\n  margin-left: -15px;\n}\n\n@media (min-width: 768px) {\n  .container > .navbar-header,\n  .container > .navbar-collapse,\n  .container-fluid > .navbar-header,\n  .container-fluid > .navbar-collapse {\n    margin-right: 0;\n    margin-left: 0;\n  }\n}\n\n.navbar-static-top {\n  z-index: 1000;\n  border-width: 0 0 1px;\n}\n\n@media (min-width: 768px) {\n  .navbar-static-top {\n    border-radius: 0;\n  }\n}\n\n.navbar-fixed-top,\n.navbar-fixed-bottom {\n  position: fixed;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n@media (min-width: 768px) {\n  .navbar-fixed-top,\n  .navbar-fixed-bottom {\n    border-radius: 0;\n  }\n}\n\n.navbar-fixed-top {\n  top: 0;\n  border-width: 0 0 1px;\n}\n\n.navbar-fixed-bottom {\n  bottom: 0;\n  margin-bottom: 0;\n  border-width: 1px 0 0;\n}\n\n.navbar-brand {\n  float: left;\n  padding: 15px 15px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 50px;\n}\n\n.navbar-brand:hover, .navbar-brand:focus {\n  text-decoration: none;\n}\n\n.navbar-brand > img {\n  display: block;\n}\n\n@media (min-width: 768px) {\n  .navbar > .container .navbar-brand,\n  .navbar > .container-fluid .navbar-brand {\n    margin-left: -15px;\n  }\n}\n\n.navbar-toggle {\n  position: relative;\n  float: right;\n  margin-right: 15px;\n  padding: 9px 10px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  background-color: transparent;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n}\n\n.navbar-toggle:focus {\n  outline: 0;\n}\n\n.navbar-toggle .icon-bar {\n  display: block;\n  width: 22px;\n  height: 2px;\n  border-radius: 1px;\n}\n\n.navbar-toggle .icon-bar + .icon-bar {\n  margin-top: 4px;\n}\n\n@media (min-width: 768px) {\n  .navbar-toggle {\n    display: none;\n  }\n}\n\n.navbar-nav {\n  margin: 7.5px -15px;\n}\n\n.navbar-nav > li > a {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  line-height: 20px;\n}\n\n@media (max-width: 767px) {\n  .navbar-nav .open .dropdown-menu {\n    position: static;\n    float: none;\n    width: auto;\n    margin-top: 0;\n    background-color: transparent;\n    border: 0;\n    box-shadow: none;\n  }\n  .navbar-nav .open .dropdown-menu > li > a,\n  .navbar-nav .open .dropdown-menu .dropdown-header {\n    padding: 5px 15px 5px 25px;\n  }\n  .navbar-nav .open .dropdown-menu > li > a {\n    line-height: 20px;\n  }\n  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropdown-menu > li > a:focus {\n    background-image: none;\n  }\n}\n\n@media (min-width: 768px) {\n  .navbar-nav {\n    float: left;\n    margin: 0;\n  }\n  .navbar-nav > li {\n    float: left;\n  }\n  .navbar-nav > li > a {\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n}\n\n.navbar-form {\n  margin-left: -15px;\n  margin-right: -15px;\n  padding: 10px 15px;\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n@media (min-width: 768px) {\n  .navbar-form .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle;\n  }\n  .navbar-form .form-control-static {\n    display: inline-block;\n  }\n  .navbar-form .input-group {\n    display: inline-table;\n    vertical-align: middle;\n  }\n  .navbar-form .input-group .input-group-addon,\n  .navbar-form .input-group .input-group-btn,\n  .navbar-form .input-group .form-control {\n    width: auto;\n  }\n  .navbar-form .input-group > .form-control {\n    width: 100%;\n  }\n  .navbar-form .control-label {\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .radio,\n  .navbar-form .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .radio label,\n  .navbar-form .checkbox label {\n    padding-left: 0;\n  }\n  .navbar-form .radio input[type=\"radio\"],\n  .navbar-form .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0;\n  }\n  .navbar-form .has-feedback .form-control-feedback {\n    top: 0;\n  }\n}\n\n@media (max-width: 767px) {\n  .navbar-form .form-group {\n    margin-bottom: 5px;\n  }\n  .navbar-form .form-group:last-child {\n    margin-bottom: 0;\n  }\n}\n\n@media (min-width: 768px) {\n  .navbar-form {\n    width: auto;\n    border: 0;\n    margin-left: 0;\n    margin-right: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    box-shadow: none;\n  }\n}\n\n.navbar-nav > li > .dropdown-menu {\n  margin-top: 0;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {\n  margin-bottom: 0;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.navbar-btn {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.navbar-btn.btn-sm, .btn-group-sm > .navbar-btn.btn {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.navbar-btn.btn-xs, .btn-group-xs > .navbar-btn.btn {\n  margin-top: 14px;\n  margin-bottom: 14px;\n}\n\n.navbar-text {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n\n@media (min-width: 768px) {\n  .navbar-text {\n    float: left;\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n}\n\n@media (min-width: 768px) {\n  .navbar-left {\n    float: left !important;\n  }\n  .navbar-right {\n    float: right !important;\n    margin-right: -15px;\n  }\n  .navbar-right ~ .navbar-right {\n    margin-right: 0;\n  }\n}\n\n.navbar-default {\n  background-color: #f8f8f8;\n  border-color: #e7e7e7;\n}\n\n.navbar-default .navbar-brand {\n  color: #777;\n}\n\n.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n\n.navbar-default .navbar-text {\n  color: #777;\n}\n\n.navbar-default .navbar-nav > li > a {\n  color: #777;\n}\n\n.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n}\n\n.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .ax-active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .ax-active > a:hover, .navbar-default .navbar-nav > .active > a:focus, .navbar-default .navbar-nav > .ax-active > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n\n.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > [disabled] > a, .navbar-default .navbar-nav >\n.ax-disabled > a, .navbar-default .navbar-nav > .disabled > a:hover, .navbar-default .navbar-nav > [disabled] > a:hover, .navbar-default .navbar-nav >\n.ax-disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus, .navbar-default .navbar-nav > [disabled] > a:focus, .navbar-default .navbar-nav >\n.ax-disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n\n.navbar-default .navbar-toggle {\n  border-color: #ddd;\n}\n\n.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus {\n  background-color: #ddd;\n}\n\n.navbar-default .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n\n.navbar-default .navbar-collapse,\n.navbar-default .navbar-form {\n  border-color: #e7e7e7;\n}\n\n.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {\n  background-color: #e7e7e7;\n  color: #555;\n}\n\n@media (max-width: 767px) {\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-default .navbar-nav .open .dropdown-menu > .ax-active > a, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .ax-active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-default .navbar-nav .open .dropdown-menu > .ax-active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-default .navbar-nav .open .dropdown-menu > [disabled] > a, .navbar-default .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > [disabled] > a:hover, .navbar-default .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-default .navbar-nav .open .dropdown-menu > [disabled] > a:focus, .navbar-default .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n\n.navbar-default .navbar-link {\n  color: #777;\n}\n\n.navbar-default .navbar-link:hover {\n  color: #333;\n}\n\n.navbar-default .btn-link {\n  color: #777;\n}\n\n.navbar-default .btn-link:hover, .navbar-default .btn-link:focus {\n  color: #333;\n}\n\n.navbar-default .btn-link[disabled]:hover, .navbar-default .btn-link[disabled]:focus,\nfieldset[disabled] .navbar-default .btn-link:hover,\nfieldset[disabled] .navbar-default .btn-link:focus {\n  color: #ccc;\n}\n\n.navbar-inverse {\n  background-color: #222;\n  border-color: #090909;\n}\n\n.navbar-inverse .navbar-brand {\n  color: #9d9d9d;\n}\n\n.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus {\n  color: #fff;\n  background-color: transparent;\n}\n\n.navbar-inverse .navbar-text {\n  color: #9d9d9d;\n}\n\n.navbar-inverse .navbar-nav > li > a {\n  color: #9d9d9d;\n}\n\n.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {\n  color: #fff;\n  background-color: transparent;\n}\n\n.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .ax-active > a, .navbar-inverse .navbar-nav > .active > a:hover, .navbar-inverse .navbar-nav > .ax-active > a:hover, .navbar-inverse .navbar-nav > .active > a:focus, .navbar-inverse .navbar-nav > .ax-active > a:focus {\n  color: #fff;\n  background-color: #090909;\n}\n\n.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > [disabled] > a, .navbar-inverse .navbar-nav >\n.ax-disabled > a, .navbar-inverse .navbar-nav > .disabled > a:hover, .navbar-inverse .navbar-nav > [disabled] > a:hover, .navbar-inverse .navbar-nav >\n.ax-disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus, .navbar-inverse .navbar-nav > [disabled] > a:focus, .navbar-inverse .navbar-nav >\n.ax-disabled > a:focus {\n  color: #444;\n  background-color: transparent;\n}\n\n.navbar-inverse .navbar-toggle {\n  border-color: #333;\n}\n\n.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {\n  background-color: #333;\n}\n\n.navbar-inverse .navbar-toggle .icon-bar {\n  background-color: #fff;\n}\n\n.navbar-inverse .navbar-collapse,\n.navbar-inverse .navbar-form {\n  border-color: #101010;\n}\n\n.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .open > a:hover, .navbar-inverse .navbar-nav > .open > a:focus {\n  background-color: #090909;\n  color: #fff;\n}\n\n@media (max-width: 767px) {\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {\n    border-color: #090909;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu .divider {\n    background-color: #090909;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {\n    color: #9d9d9d;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #fff;\n    background-color: transparent;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .ax-active > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .ax-active > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-inverse .navbar-nav .open .dropdown-menu > .ax-active > a:focus {\n    color: #fff;\n    background-color: #090909;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-inverse .navbar-nav .open .dropdown-menu > [disabled] > a, .navbar-inverse .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > [disabled] > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-inverse .navbar-nav .open .dropdown-menu > [disabled] > a:focus, .navbar-inverse .navbar-nav .open .dropdown-menu >\n  .ax-disabled > a:focus {\n    color: #444;\n    background-color: transparent;\n  }\n}\n\n.navbar-inverse .navbar-link {\n  color: #9d9d9d;\n}\n\n.navbar-inverse .navbar-link:hover {\n  color: #fff;\n}\n\n.navbar-inverse .btn-link {\n  color: #9d9d9d;\n}\n\n.navbar-inverse .btn-link:hover, .navbar-inverse .btn-link:focus {\n  color: #fff;\n}\n\n.navbar-inverse .btn-link[disabled]:hover, .navbar-inverse .btn-link[disabled]:focus,\nfieldset[disabled] .navbar-inverse .btn-link:hover,\nfieldset[disabled] .navbar-inverse .btn-link:focus {\n  color: #444;\n}\n\n.breadcrumb {\n  padding: 8px 15px;\n  margin-bottom: 20px;\n  list-style: none;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n}\n\n.breadcrumb > li {\n  display: inline-block;\n}\n\n.breadcrumb > li + li:before {\n  content: \"/\\A0\";\n  padding: 0 5px;\n  color: #ccc;\n}\n\n.breadcrumb > .active, .breadcrumb > .ax-active {\n  color: #777777;\n}\n\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px;\n}\n\n.pagination > li {\n  display: inline;\n}\n\n.pagination > li > a,\n.pagination > li > span {\n  position: relative;\n  float: left;\n  padding: 6px 12px;\n  line-height: 1.428571429;\n  text-decoration: none;\n  color: #337ab7;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  margin-left: -1px;\n}\n\n.pagination > li:first-child > a,\n.pagination > li:first-child > span {\n  margin-left: 0;\n  border-bottom-left-radius: 4px;\n  border-top-left-radius: 4px;\n}\n\n.pagination > li:last-child > a,\n.pagination > li:last-child > span {\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.pagination > li > a:hover, .pagination > li > a:focus,\n.pagination > li > span:hover,\n.pagination > li > span:focus {\n  z-index: 2;\n  color: #23527c;\n  background-color: #eeeeee;\n  border-color: #ddd;\n}\n\n.pagination > .active > a, .pagination > .ax-active > a, .pagination > .active > a:hover, .pagination > .ax-active > a:hover, .pagination > .active > a:focus, .pagination > .ax-active > a:focus,\n.pagination > .active > span,\n.pagination > .ax-active > span,\n.pagination > .active > span:hover,\n.pagination > .ax-active > span:hover,\n.pagination > .active > span:focus,\n.pagination > .ax-active > span:focus {\n  z-index: 3;\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #337ab7;\n  cursor: default;\n}\n\n.pagination > .disabled > span, .pagination > [disabled] > span, .pagination >\n.ax-disabled > span,\n.pagination > .disabled > span:hover,\n.pagination > [disabled] > span:hover,\n.pagination >\n.ax-disabled > span:hover,\n.pagination > .disabled > span:focus,\n.pagination > [disabled] > span:focus,\n.pagination >\n.ax-disabled > span:focus,\n.pagination > .disabled > a,\n.pagination > [disabled] > a,\n.pagination >\n.ax-disabled > a,\n.pagination > .disabled > a:hover,\n.pagination > [disabled] > a:hover,\n.pagination >\n.ax-disabled > a:hover,\n.pagination > .disabled > a:focus,\n.pagination > [disabled] > a:focus,\n.pagination >\n.ax-disabled > a:focus {\n  color: #777777;\n  background-color: #fff;\n  border-color: #ddd;\n  cursor: not-allowed;\n}\n\n.pagination-lg > li > a,\n.pagination-lg > li > span {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n}\n\n.pagination-lg > li:first-child > a,\n.pagination-lg > li:first-child > span {\n  border-bottom-left-radius: 6px;\n  border-top-left-radius: 6px;\n}\n\n.pagination-lg > li:last-child > a,\n.pagination-lg > li:last-child > span {\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n.pagination-sm > li > a,\n.pagination-sm > li > span {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n}\n\n.pagination-sm > li:first-child > a,\n.pagination-sm > li:first-child > span {\n  border-bottom-left-radius: 3px;\n  border-top-left-radius: 3px;\n}\n\n.pagination-sm > li:last-child > a,\n.pagination-sm > li:last-child > span {\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.pager {\n  padding-left: 0;\n  margin: 20px 0;\n  list-style: none;\n  text-align: center;\n}\n\n.pager:before, .pager:after {\n  content: \" \";\n  display: table;\n}\n\n.pager:after {\n  clear: both;\n}\n\n.pager li {\n  display: inline;\n}\n\n.pager li > a,\n.pager li > span {\n  display: inline-block;\n  padding: 5px 14px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 15px;\n}\n\n.pager li > a:hover,\n.pager li > a:focus {\n  text-decoration: none;\n  background-color: #eeeeee;\n}\n\n.pager .next > a,\n.pager .next > span {\n  float: right;\n}\n\n.pager .previous > a,\n.pager .previous > span {\n  float: left;\n}\n\n.pager .disabled > a, .pager [disabled] > a, .pager\n.ax-disabled > a,\n.pager .disabled > a:hover,\n.pager [disabled] > a:hover,\n.pager\n.ax-disabled > a:hover,\n.pager .disabled > a:focus,\n.pager [disabled] > a:focus,\n.pager\n.ax-disabled > a:focus,\n.pager .disabled > span,\n.pager [disabled] > span,\n.pager\n.ax-disabled > span {\n  color: #777777;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n\n.label {\n  display: inline;\n  padding: .2em .6em .3em;\n  font-size: 75%;\n  font-weight: bold;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: .25em;\n}\n\n.label:empty {\n  display: none;\n}\n\n.btn .label {\n  position: relative;\n  top: -1px;\n}\n\na.label:hover, a.label:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.label-default {\n  background-color: #777777;\n}\n\n.label-default[href]:hover, .label-default[href]:focus {\n  background-color: #5e5e5e;\n}\n\n.label-primary {\n  background-color: #337ab7;\n}\n\n.label-primary[href]:hover, .label-primary[href]:focus {\n  background-color: #286090;\n}\n\n.label-success {\n  background-color: #5cb85c;\n}\n\n.label-success[href]:hover, .label-success[href]:focus {\n  background-color: #449d44;\n}\n\n.label-info {\n  background-color: #5bc0de;\n}\n\n.label-info[href]:hover, .label-info[href]:focus {\n  background-color: #31b0d5;\n}\n\n.label-warning {\n  background-color: #f0ad4e;\n}\n\n.label-warning[href]:hover, .label-warning[href]:focus {\n  background-color: #ec971f;\n}\n\n.label-danger {\n  background-color: #d9534f;\n}\n\n.label-danger[href]:hover, .label-danger[href]:focus {\n  background-color: #c9302c;\n}\n\n.badge {\n  display: inline-block;\n  min-width: 10px;\n  padding: 3px 7px;\n  font-size: 12px;\n  font-weight: bold;\n  color: #fff;\n  line-height: 1;\n  vertical-align: middle;\n  white-space: nowrap;\n  text-align: center;\n  background-color: #777777;\n  border-radius: 10px;\n}\n\n.badge:empty {\n  display: none;\n}\n\n.btn .badge {\n  position: relative;\n  top: -1px;\n}\n\n.btn-xs .badge, .btn-group-xs > .btn .badge,\n.btn-group-xs > .btn .badge {\n  top: 0;\n  padding: 1px 5px;\n}\n\n.list-group-item.active > .badge, .list-group-item.ax-active > .badge,\n.nav-pills > .active > a > .badge,\n.nav-pills > .ax-active > a > .badge {\n  color: #337ab7;\n  background-color: #fff;\n}\n\n.list-group-item > .badge {\n  float: right;\n}\n\n.list-group-item > .badge + .badge {\n  margin-right: 5px;\n}\n\n.nav-pills > li > a > .badge {\n  margin-left: 3px;\n}\n\na.badge:hover, a.badge:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.jumbotron {\n  padding-top: 30px;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n  color: inherit;\n  background-color: #eeeeee;\n}\n\n.jumbotron h1,\n.jumbotron .h1 {\n  color: inherit;\n}\n\n.jumbotron p {\n  margin-bottom: 15px;\n  font-size: 21px;\n  font-weight: 200;\n}\n\n.jumbotron > hr {\n  border-top-color: #d5d5d5;\n}\n\n.container .jumbotron,\n.container-fluid .jumbotron {\n  border-radius: 6px;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.jumbotron .container {\n  max-width: 100%;\n}\n\n@media screen and (min-width: 768px) {\n  .jumbotron {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n  .container .jumbotron,\n  .container-fluid .jumbotron {\n    padding-left: 60px;\n    padding-right: 60px;\n  }\n  .jumbotron h1,\n  .jumbotron .h1 {\n    font-size: 63px;\n  }\n}\n\n.thumbnail {\n  display: block;\n  padding: 4px;\n  margin-bottom: 20px;\n  line-height: 1.428571429;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: border 0.2s ease-in-out;\n  transition: border 0.2s ease-in-out;\n}\n\n.thumbnail > img,\n.thumbnail a > img {\n  display: block;\n  max-width: 100%;\n  height: auto;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.thumbnail .caption {\n  padding: 9px;\n  color: #333333;\n}\n\na.thumbnail:hover,\na.thumbnail:focus,\na.thumbnail.active,\na.thumbnail.ax-active {\n  border-color: #337ab7;\n}\n\n@-webkit-keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n\n.progress {\n  overflow: hidden;\n  height: 20px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.progress-bar {\n  float: left;\n  width: 0%;\n  height: 100%;\n  font-size: 12px;\n  line-height: 20px;\n  color: #fff;\n  text-align: center;\n  background-color: #337ab7;\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  -webkit-transition: width 0.6s ease;\n  transition: width 0.6s ease;\n}\n\n.progress-striped .progress-bar,\n.progress-bar-striped {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: 40px 40px;\n}\n\n.progress.active .progress-bar, .progress.ax-active .progress-bar,\n.progress-bar.active,\n.progress-bar.ax-active {\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\n  animation: progress-bar-stripes 2s linear infinite;\n}\n\n.progress-bar-success {\n  background-color: #5cb85c;\n}\n\n.progress-striped .progress-bar-success {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n\n.progress-bar-info {\n  background-color: #5bc0de;\n}\n\n.progress-striped .progress-bar-info {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n\n.progress-bar-warning {\n  background-color: #f0ad4e;\n}\n\n.progress-striped .progress-bar-warning {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n\n.progress-bar-danger {\n  background-color: #d9534f;\n}\n\n.progress-striped .progress-bar-danger {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n\n.media {\n  margin-top: 15px;\n}\n\n.media:first-child {\n  margin-top: 0;\n}\n\n.media,\n.media-body {\n  zoom: 1;\n  overflow: hidden;\n}\n\n.media-body {\n  width: 10000px;\n}\n\n.media-object {\n  display: block;\n}\n\n.media-object.img-thumbnail {\n  max-width: none;\n}\n\n.media-right,\n.media > .pull-right {\n  padding-left: 10px;\n}\n\n.media-left,\n.media > .pull-left {\n  padding-right: 10px;\n}\n\n.media-left,\n.media-right,\n.media-body {\n  display: table-cell;\n  vertical-align: top;\n}\n\n.media-middle {\n  vertical-align: middle;\n}\n\n.media-bottom {\n  vertical-align: bottom;\n}\n\n.media-heading {\n  margin-top: 0;\n  margin-bottom: 5px;\n}\n\n.media-list {\n  padding-left: 0;\n  list-style: none;\n}\n\n.list-group {\n  margin-bottom: 20px;\n  padding-left: 0;\n}\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n}\n\n.list-group-item:first-child {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n}\n\n.list-group-item:last-child {\n  margin-bottom: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n\na.list-group-item,\nbutton.list-group-item {\n  color: #555;\n}\n\na.list-group-item .list-group-item-heading,\nbutton.list-group-item .list-group-item-heading {\n  color: #333;\n}\n\na.list-group-item:hover, a.list-group-item:focus,\nbutton.list-group-item:hover,\nbutton.list-group-item:focus {\n  text-decoration: none;\n  color: #555;\n  background-color: #f5f5f5;\n}\n\nbutton.list-group-item {\n  width: 100%;\n  text-align: left;\n}\n\n.list-group-item.disabled, .list-group-item[disabled],\n.list-group-item.ax-disabled, .list-group-item.disabled:hover, .list-group-item[disabled]:hover,\n.list-group-item.ax-disabled:hover, .list-group-item.disabled:focus, .list-group-item[disabled]:focus,\n.list-group-item.ax-disabled:focus {\n  background-color: #eeeeee;\n  color: #777777;\n  cursor: not-allowed;\n}\n\n.list-group-item.disabled .list-group-item-heading, .list-group-item[disabled] .list-group-item-heading,\n.list-group-item.ax-disabled .list-group-item-heading, .list-group-item.disabled:hover .list-group-item-heading, .list-group-item[disabled]:hover .list-group-item-heading,\n.list-group-item.ax-disabled:hover .list-group-item-heading, .list-group-item.disabled:focus .list-group-item-heading, .list-group-item[disabled]:focus .list-group-item-heading,\n.list-group-item.ax-disabled:focus .list-group-item-heading {\n  color: inherit;\n}\n\n.list-group-item.disabled .list-group-item-text, .list-group-item[disabled] .list-group-item-text,\n.list-group-item.ax-disabled .list-group-item-text, .list-group-item.disabled:hover .list-group-item-text, .list-group-item[disabled]:hover .list-group-item-text,\n.list-group-item.ax-disabled:hover .list-group-item-text, .list-group-item.disabled:focus .list-group-item-text, .list-group-item[disabled]:focus .list-group-item-text,\n.list-group-item.ax-disabled:focus .list-group-item-text {\n  color: #777777;\n}\n\n.list-group-item.active, .list-group-item.ax-active, .list-group-item.active:hover, .list-group-item.ax-active:hover, .list-group-item.active:focus, .list-group-item.ax-active:focus {\n  z-index: 2;\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #337ab7;\n}\n\n.list-group-item.active .list-group-item-heading, .list-group-item.ax-active .list-group-item-heading,\n.list-group-item.active .list-group-item-heading > small, .list-group-item.ax-active .list-group-item-heading > small,\n.list-group-item.active .list-group-item-heading > .small, .list-group-item.ax-active .list-group-item-heading > .small, .list-group-item.active:hover .list-group-item-heading, .list-group-item.ax-active:hover .list-group-item-heading,\n.list-group-item.active:hover .list-group-item-heading > small, .list-group-item.ax-active:hover .list-group-item-heading > small,\n.list-group-item.active:hover .list-group-item-heading > .small, .list-group-item.ax-active:hover .list-group-item-heading > .small, .list-group-item.active:focus .list-group-item-heading, .list-group-item.ax-active:focus .list-group-item-heading,\n.list-group-item.active:focus .list-group-item-heading > small, .list-group-item.ax-active:focus .list-group-item-heading > small,\n.list-group-item.active:focus .list-group-item-heading > .small, .list-group-item.ax-active:focus .list-group-item-heading > .small {\n  color: inherit;\n}\n\n.list-group-item.active .list-group-item-text, .list-group-item.ax-active .list-group-item-text, .list-group-item.active:hover .list-group-item-text, .list-group-item.ax-active:hover .list-group-item-text, .list-group-item.active:focus .list-group-item-text, .list-group-item.ax-active:focus .list-group-item-text {\n  color: #c7ddef;\n}\n\n.list-group-item-success {\n  color: #3c763d;\n  background-color: #dff0d8;\n}\n\na.list-group-item-success,\nbutton.list-group-item-success {\n  color: #3c763d;\n}\n\na.list-group-item-success .list-group-item-heading,\nbutton.list-group-item-success .list-group-item-heading {\n  color: inherit;\n}\n\na.list-group-item-success:hover, a.list-group-item-success:focus,\nbutton.list-group-item-success:hover,\nbutton.list-group-item-success:focus {\n  color: #3c763d;\n  background-color: #d0e9c6;\n}\n\na.list-group-item-success.active, a.list-group-item-success.ax-active, a.list-group-item-success.active:hover, a.list-group-item-success.ax-active:hover, a.list-group-item-success.active:focus, a.list-group-item-success.ax-active:focus,\nbutton.list-group-item-success.active,\nbutton.list-group-item-success.ax-active,\nbutton.list-group-item-success.active:hover,\nbutton.list-group-item-success.ax-active:hover,\nbutton.list-group-item-success.active:focus,\nbutton.list-group-item-success.ax-active:focus {\n  color: #fff;\n  background-color: #3c763d;\n  border-color: #3c763d;\n}\n\n.list-group-item-info {\n  color: #31708f;\n  background-color: #d9edf7;\n}\n\na.list-group-item-info,\nbutton.list-group-item-info {\n  color: #31708f;\n}\n\na.list-group-item-info .list-group-item-heading,\nbutton.list-group-item-info .list-group-item-heading {\n  color: inherit;\n}\n\na.list-group-item-info:hover, a.list-group-item-info:focus,\nbutton.list-group-item-info:hover,\nbutton.list-group-item-info:focus {\n  color: #31708f;\n  background-color: #c4e3f3;\n}\n\na.list-group-item-info.active, a.list-group-item-info.ax-active, a.list-group-item-info.active:hover, a.list-group-item-info.ax-active:hover, a.list-group-item-info.active:focus, a.list-group-item-info.ax-active:focus,\nbutton.list-group-item-info.active,\nbutton.list-group-item-info.ax-active,\nbutton.list-group-item-info.active:hover,\nbutton.list-group-item-info.ax-active:hover,\nbutton.list-group-item-info.active:focus,\nbutton.list-group-item-info.ax-active:focus {\n  color: #fff;\n  background-color: #31708f;\n  border-color: #31708f;\n}\n\n.list-group-item-warning {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n}\n\na.list-group-item-warning,\nbutton.list-group-item-warning {\n  color: #8a6d3b;\n}\n\na.list-group-item-warning .list-group-item-heading,\nbutton.list-group-item-warning .list-group-item-heading {\n  color: inherit;\n}\n\na.list-group-item-warning:hover, a.list-group-item-warning:focus,\nbutton.list-group-item-warning:hover,\nbutton.list-group-item-warning:focus {\n  color: #8a6d3b;\n  background-color: #faf2cc;\n}\n\na.list-group-item-warning.active, a.list-group-item-warning.ax-active, a.list-group-item-warning.active:hover, a.list-group-item-warning.ax-active:hover, a.list-group-item-warning.active:focus, a.list-group-item-warning.ax-active:focus,\nbutton.list-group-item-warning.active,\nbutton.list-group-item-warning.ax-active,\nbutton.list-group-item-warning.active:hover,\nbutton.list-group-item-warning.ax-active:hover,\nbutton.list-group-item-warning.active:focus,\nbutton.list-group-item-warning.ax-active:focus {\n  color: #fff;\n  background-color: #8a6d3b;\n  border-color: #8a6d3b;\n}\n\n.list-group-item-danger {\n  color: #a94442;\n  background-color: #f2dede;\n}\n\na.list-group-item-danger,\nbutton.list-group-item-danger {\n  color: #a94442;\n}\n\na.list-group-item-danger .list-group-item-heading,\nbutton.list-group-item-danger .list-group-item-heading {\n  color: inherit;\n}\n\na.list-group-item-danger:hover, a.list-group-item-danger:focus,\nbutton.list-group-item-danger:hover,\nbutton.list-group-item-danger:focus {\n  color: #a94442;\n  background-color: #ebcccc;\n}\n\na.list-group-item-danger.active, a.list-group-item-danger.ax-active, a.list-group-item-danger.active:hover, a.list-group-item-danger.ax-active:hover, a.list-group-item-danger.active:focus, a.list-group-item-danger.ax-active:focus,\nbutton.list-group-item-danger.active,\nbutton.list-group-item-danger.ax-active,\nbutton.list-group-item-danger.active:hover,\nbutton.list-group-item-danger.ax-active:hover,\nbutton.list-group-item-danger.active:focus,\nbutton.list-group-item-danger.ax-active:focus {\n  color: #fff;\n  background-color: #a94442;\n  border-color: #a94442;\n}\n\n.list-group-item-heading {\n  margin-top: 0;\n  margin-bottom: 5px;\n}\n\n.list-group-item-text {\n  margin-bottom: 0;\n  line-height: 1.3;\n}\n\n.panel {\n  margin-bottom: 20px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n\n.panel-body {\n  padding: 15px;\n}\n\n.panel-body:before, .panel-body:after {\n  content: \" \";\n  display: table;\n}\n\n.panel-body:after {\n  clear: both;\n}\n\n.panel-heading {\n  padding: 10px 15px;\n  border-bottom: 1px solid transparent;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n\n.panel-heading > .dropdown .dropdown-toggle {\n  color: inherit;\n}\n\n.panel-title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 16px;\n  color: inherit;\n}\n\n.panel-title > a,\n.panel-title > small,\n.panel-title > .small,\n.panel-title > small > a,\n.panel-title > .small > a {\n  color: inherit;\n}\n\n.panel-footer {\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-top: 1px solid #ddd;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.panel > .list-group,\n.panel > .panel-collapse > .list-group {\n  margin-bottom: 0;\n}\n\n.panel > .list-group .list-group-item,\n.panel > .panel-collapse > .list-group .list-group-item {\n  border-width: 1px 0;\n  border-radius: 0;\n}\n\n.panel > .list-group:first-child .list-group-item:first-child,\n.panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {\n  border-top: 0;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n\n.panel > .list-group:last-child .list-group-item:last-child,\n.panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {\n  border-bottom: 0;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.panel-heading + .list-group .list-group-item:first-child {\n  border-top-width: 0;\n}\n\n.list-group + .panel-footer {\n  border-top-width: 0;\n}\n\n.panel > .table,\n.panel > .table-responsive > .table,\n.panel > .panel-collapse > .table {\n  margin-bottom: 0;\n}\n\n.panel > .table caption,\n.panel > .table-responsive > .table caption,\n.panel > .panel-collapse > .table caption {\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.panel > .table:first-child,\n.panel > .table-responsive:first-child > .table:first-child {\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n\n.panel > .table:first-child > thead:first-child > tr:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n\n.panel > .table:first-child > thead:first-child > tr:first-child td:first-child,\n.panel > .table:first-child > thead:first-child > tr:first-child th:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {\n  border-top-left-radius: 3px;\n}\n\n.panel > .table:first-child > thead:first-child > tr:first-child td:last-child,\n.panel > .table:first-child > thead:first-child > tr:first-child th:last-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {\n  border-top-right-radius: 3px;\n}\n\n.panel > .table:last-child,\n.panel > .table-responsive:last-child > .table:last-child {\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.panel > .table:last-child > tbody:last-child > tr:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n.panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {\n  border-bottom-left-radius: 3px;\n}\n\n.panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n.panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {\n  border-bottom-right-radius: 3px;\n}\n\n.panel > .panel-body + .table,\n.panel > .panel-body + .table-responsive,\n.panel > .table + .panel-body,\n.panel > .table-responsive + .panel-body {\n  border-top: 1px solid #ddd;\n}\n\n.panel > .table > tbody:first-child > tr:first-child th,\n.panel > .table > tbody:first-child > tr:first-child td {\n  border-top: 0;\n}\n\n.panel > .table-bordered,\n.panel > .table-responsive > .table-bordered {\n  border: 0;\n}\n\n.panel > .table-bordered > thead > tr > th:first-child,\n.panel > .table-bordered > thead > tr > td:first-child,\n.panel > .table-bordered > tbody > tr > th:first-child,\n.panel > .table-bordered > tbody > tr > td:first-child,\n.panel > .table-bordered > tfoot > tr > th:first-child,\n.panel > .table-bordered > tfoot > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > thead > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > thead > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n  border-left: 0;\n}\n\n.panel > .table-bordered > thead > tr > th:last-child,\n.panel > .table-bordered > thead > tr > td:last-child,\n.panel > .table-bordered > tbody > tr > th:last-child,\n.panel > .table-bordered > tbody > tr > td:last-child,\n.panel > .table-bordered > tfoot > tr > th:last-child,\n.panel > .table-bordered > tfoot > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > thead > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > thead > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n  border-right: 0;\n}\n\n.panel > .table-bordered > thead > tr:first-child > td,\n.panel > .table-bordered > thead > tr:first-child > th,\n.panel > .table-bordered > tbody > tr:first-child > td,\n.panel > .table-bordered > tbody > tr:first-child > th,\n.panel > .table-responsive > .table-bordered > thead > tr:first-child > td,\n.panel > .table-responsive > .table-bordered > thead > tr:first-child > th,\n.panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,\n.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {\n  border-bottom: 0;\n}\n\n.panel > .table-bordered > tbody > tr:last-child > td,\n.panel > .table-bordered > tbody > tr:last-child > th,\n.panel > .table-bordered > tfoot > tr:last-child > td,\n.panel > .table-bordered > tfoot > tr:last-child > th,\n.panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,\n.panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,\n.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,\n.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {\n  border-bottom: 0;\n}\n\n.panel > .table-responsive {\n  border: 0;\n  margin-bottom: 0;\n}\n\n.panel-group {\n  margin-bottom: 20px;\n}\n\n.panel-group .panel {\n  margin-bottom: 0;\n  border-radius: 4px;\n}\n\n.panel-group .panel + .panel {\n  margin-top: 5px;\n}\n\n.panel-group .panel-heading {\n  border-bottom: 0;\n}\n\n.panel-group .panel-heading + .panel-collapse > .panel-body,\n.panel-group .panel-heading + .panel-collapse > .list-group {\n  border-top: 1px solid #ddd;\n}\n\n.panel-group .panel-footer {\n  border-top: 0;\n}\n\n.panel-group .panel-footer + .panel-collapse .panel-body {\n  border-bottom: 1px solid #ddd;\n}\n\n.panel-default {\n  border-color: #ddd;\n}\n\n.panel-default > .panel-heading {\n  color: #333333;\n  background-color: #f5f5f5;\n  border-color: #ddd;\n}\n\n.panel-default > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #ddd;\n}\n\n.panel-default > .panel-heading .badge {\n  color: #f5f5f5;\n  background-color: #333333;\n}\n\n.panel-default > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #ddd;\n}\n\n.panel-primary {\n  border-color: #337ab7;\n}\n\n.panel-primary > .panel-heading {\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #337ab7;\n}\n\n.panel-primary > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #337ab7;\n}\n\n.panel-primary > .panel-heading .badge {\n  color: #337ab7;\n  background-color: #fff;\n}\n\n.panel-primary > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #337ab7;\n}\n\n.panel-success {\n  border-color: #d6e9c6;\n}\n\n.panel-success > .panel-heading {\n  color: #3c763d;\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n}\n\n.panel-success > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #d6e9c6;\n}\n\n.panel-success > .panel-heading .badge {\n  color: #dff0d8;\n  background-color: #3c763d;\n}\n\n.panel-success > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #d6e9c6;\n}\n\n.panel-info {\n  border-color: #bce8f1;\n}\n\n.panel-info > .panel-heading {\n  color: #31708f;\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n}\n\n.panel-info > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #bce8f1;\n}\n\n.panel-info > .panel-heading .badge {\n  color: #d9edf7;\n  background-color: #31708f;\n}\n\n.panel-info > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #bce8f1;\n}\n\n.panel-warning {\n  border-color: #faebcc;\n}\n\n.panel-warning > .panel-heading {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n}\n\n.panel-warning > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #faebcc;\n}\n\n.panel-warning > .panel-heading .badge {\n  color: #fcf8e3;\n  background-color: #8a6d3b;\n}\n\n.panel-warning > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #faebcc;\n}\n\n.panel-danger {\n  border-color: #ebccd1;\n}\n\n.panel-danger > .panel-heading {\n  color: #a94442;\n  background-color: #f2dede;\n  border-color: #ebccd1;\n}\n\n.panel-danger > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #ebccd1;\n}\n\n.panel-danger > .panel-heading .badge {\n  color: #f2dede;\n  background-color: #a94442;\n}\n\n.panel-danger > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #ebccd1;\n}\n\n.well {\n  min-height: 20px;\n  padding: 19px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n\n.well blockquote {\n  border-color: #ddd;\n  border-color: rgba(0, 0, 0, 0.15);\n}\n\n.well-lg {\n  padding: 24px;\n  border-radius: 6px;\n}\n\n.well-sm {\n  padding: 9px;\n  border-radius: 3px;\n}\n\n.close {\n  float: right;\n  font-size: 21px;\n  font-weight: bold;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.2;\n  filter: alpha(opacity=20);\n}\n\n.close:hover, .close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n}\n\nbutton.close {\n  padding: 0;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  -webkit-appearance: none;\n}\n\n.alert {\n  padding: 15px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n  border-radius: 4px;\n}\n\n.alert h4 {\n  margin-top: 0;\n  color: inherit;\n}\n\n.alert .alert-link {\n  font-weight: bold;\n}\n\n.alert > p,\n.alert > ul {\n  margin-bottom: 0;\n}\n\n.alert > p + p {\n  margin-top: 5px;\n}\n\n.alert-dismissable,\n.alert-dismissible {\n  padding-right: 35px;\n}\n\n.alert-dismissable .close,\n.alert-dismissible .close {\n  position: relative;\n  top: -2px;\n  right: -21px;\n  color: inherit;\n}\n\n.alert-success {\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  color: #3c763d;\n}\n\n.alert-success hr {\n  border-top-color: #c9e2b3;\n}\n\n.alert-success .alert-link {\n  color: #2b542c;\n}\n\n.alert-info {\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  color: #31708f;\n}\n\n.alert-info hr {\n  border-top-color: #a6e1ec;\n}\n\n.alert-info .alert-link {\n  color: #245269;\n}\n\n.alert-warning {\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n  color: #8a6d3b;\n}\n\n.alert-warning hr {\n  border-top-color: #f7e1b5;\n}\n\n.alert-warning .alert-link {\n  color: #66512c;\n}\n\n.alert-danger {\n  background-color: #f2dede;\n  border-color: #ebccd1;\n  color: #a94442;\n}\n\n.alert-danger hr {\n  border-top-color: #e4b9c0;\n}\n\n.alert-danger .alert-link {\n  color: #843534;\n}\n\n.modal-open {\n  overflow: hidden;\n}\n\n.modal {\n  display: none;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1050;\n  -webkit-overflow-scrolling: touch;\n  outline: 0;\n}\n\n.modal.fade .modal-dialog {\n  -webkit-transform: translate(0, -25%);\n  -ms-transform: translate(0, -25%);\n  transform: translate(0, -25%);\n  -webkit-transition: -webkit-transform 0.3s ease-out;\n  transition: -webkit-transform 0.3s ease-out;\n  transition: transform 0.3s ease-out;\n  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;\n}\n\n.modal.in .modal-dialog {\n  -webkit-transform: translate(0, 0);\n  -ms-transform: translate(0, 0);\n  transform: translate(0, 0);\n}\n\n.modal-open .modal {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: 10px;\n}\n\n.modal-content {\n  position: relative;\n  background-color: #fff;\n  border: 1px solid #999;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  background-clip: padding-box;\n  outline: 0;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000;\n}\n\n.modal-backdrop.fade {\n  opacity: 0;\n  filter: alpha(opacity=0);\n}\n\n.modal-backdrop.in {\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n}\n\n.modal-header {\n  padding: 15px;\n  border-bottom: 1px solid #e5e5e5;\n}\n\n.modal-header:before, .modal-header:after {\n  content: \" \";\n  display: table;\n}\n\n.modal-header:after {\n  clear: both;\n}\n\n.modal-header .close {\n  margin-top: -2px;\n}\n\n.modal-title {\n  margin: 0;\n  line-height: 1.428571429;\n}\n\n.modal-body {\n  position: relative;\n  padding: 15px;\n}\n\n.modal-footer {\n  padding: 15px;\n  text-align: right;\n  border-top: 1px solid #e5e5e5;\n}\n\n.modal-footer:before, .modal-footer:after {\n  content: \" \";\n  display: table;\n}\n\n.modal-footer:after {\n  clear: both;\n}\n\n.modal-footer .btn + .btn {\n  margin-left: 5px;\n  margin-bottom: 0;\n}\n\n.modal-footer .btn-group .btn + .btn {\n  margin-left: -1px;\n}\n\n.modal-footer .btn-block + .btn-block {\n  margin-left: 0;\n}\n\n.modal-scrollbar-measure {\n  position: absolute;\n  top: -9999px;\n  width: 50px;\n  height: 50px;\n  overflow: scroll;\n}\n\n@media (min-width: 768px) {\n  .modal-dialog {\n    width: 600px;\n    margin: 30px auto;\n  }\n  .modal-content {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n  }\n  .modal-sm {\n    width: 300px;\n  }\n}\n\n@media (min-width: 992px) {\n  .modal-lg {\n    width: 900px;\n  }\n}\n\n.tooltip {\n  position: absolute;\n  z-index: 1070;\n  display: block;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.428571429;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 12px;\n  opacity: 0;\n  filter: alpha(opacity=0);\n}\n\n.tooltip.in {\n  opacity: 0.9;\n  filter: alpha(opacity=90);\n}\n\n.tooltip.top {\n  margin-top: -3px;\n  padding: 5px 0;\n}\n\n.tooltip.right {\n  margin-left: 3px;\n  padding: 0 5px;\n}\n\n.tooltip.bottom {\n  margin-top: 3px;\n  padding: 5px 0;\n}\n\n.tooltip.left {\n  margin-left: -3px;\n  padding: 0 5px;\n}\n\n.tooltip-inner {\n  max-width: 200px;\n  padding: 3px 8px;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 4px;\n}\n\n.tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n\n.tooltip.top .tooltip-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n\n.tooltip.top-left .tooltip-arrow {\n  bottom: 0;\n  right: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n\n.tooltip.top-right .tooltip-arrow {\n  bottom: 0;\n  left: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n\n.tooltip.right .tooltip-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-width: 5px 5px 5px 0;\n  border-right-color: #000;\n}\n\n.tooltip.left .tooltip-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-width: 5px 0 5px 5px;\n  border-left-color: #000;\n}\n\n.tooltip.bottom .tooltip-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n\n.tooltip.bottom-left .tooltip-arrow {\n  top: 0;\n  right: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n\n.tooltip.bottom-right .tooltip-arrow {\n  top: 0;\n  left: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n\n.popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1060;\n  display: none;\n  max-width: 276px;\n  padding: 1px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.428571429;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 14px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n}\n\n.popover.top {\n  margin-top: -10px;\n}\n\n.popover.right {\n  margin-left: 10px;\n}\n\n.popover.bottom {\n  margin-top: 10px;\n}\n\n.popover.left {\n  margin-left: -10px;\n}\n\n.popover-title {\n  margin: 0;\n  padding: 8px 14px;\n  font-size: 14px;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #ebebeb;\n  border-radius: 5px 5px 0 0;\n}\n\n.popover-content {\n  padding: 9px 14px;\n}\n\n.popover > .arrow, .popover > .arrow:after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n\n.popover > .arrow {\n  border-width: 11px;\n}\n\n.popover > .arrow:after {\n  border-width: 10px;\n  content: \"\";\n}\n\n.popover.top > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-bottom-width: 0;\n  border-top-color: #999999;\n  border-top-color: rgba(0, 0, 0, 0.25);\n  bottom: -11px;\n}\n\n.popover.top > .arrow:after {\n  content: \" \";\n  bottom: 1px;\n  margin-left: -10px;\n  border-bottom-width: 0;\n  border-top-color: #fff;\n}\n\n.popover.right > .arrow {\n  top: 50%;\n  left: -11px;\n  margin-top: -11px;\n  border-left-width: 0;\n  border-right-color: #999999;\n  border-right-color: rgba(0, 0, 0, 0.25);\n}\n\n.popover.right > .arrow:after {\n  content: \" \";\n  left: 1px;\n  bottom: -10px;\n  border-left-width: 0;\n  border-right-color: #fff;\n}\n\n.popover.bottom > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-top-width: 0;\n  border-bottom-color: #999999;\n  border-bottom-color: rgba(0, 0, 0, 0.25);\n  top: -11px;\n}\n\n.popover.bottom > .arrow:after {\n  content: \" \";\n  top: 1px;\n  margin-left: -10px;\n  border-top-width: 0;\n  border-bottom-color: #fff;\n}\n\n.popover.left > .arrow {\n  top: 50%;\n  right: -11px;\n  margin-top: -11px;\n  border-right-width: 0;\n  border-left-color: #999999;\n  border-left-color: rgba(0, 0, 0, 0.25);\n}\n\n.popover.left > .arrow:after {\n  content: \" \";\n  right: 1px;\n  border-right-width: 0;\n  border-left-color: #fff;\n  bottom: -10px;\n}\n\n.carousel {\n  position: relative;\n}\n\n.carousel-inner {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n}\n\n.carousel-inner > .item {\n  display: none;\n  position: relative;\n  -webkit-transition: 0.6s ease-in-out left;\n  transition: 0.6s ease-in-out left;\n}\n\n.carousel-inner > .item > img,\n.carousel-inner > .item > a > img {\n  display: block;\n  max-width: 100%;\n  height: auto;\n  line-height: 1;\n}\n\n@media all and (transform-3d), (-webkit-transform-3d) {\n  .carousel-inner > .item {\n    -webkit-transition: -webkit-transform 0.6s ease-in-out;\n    transition: -webkit-transform 0.6s ease-in-out;\n    transition: transform 0.6s ease-in-out;\n    transition: transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-perspective: 1000px;\n    perspective: 1000px;\n  }\n  .carousel-inner > .item.next, .carousel-inner > .item.active.right, .carousel-inner > .item.right.ax-active {\n    -webkit-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0);\n    left: 0;\n  }\n  .carousel-inner > .item.prev, .carousel-inner > .item.active.left, .carousel-inner > .item.left.ax-active {\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n    left: 0;\n  }\n  .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .carousel-inner > .item.active, .carousel-inner > .item.ax-active {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    left: 0;\n  }\n}\n\n.carousel-inner > .active, .carousel-inner > .ax-active,\n.carousel-inner > .next,\n.carousel-inner > .prev {\n  display: block;\n}\n\n.carousel-inner > .active, .carousel-inner > .ax-active {\n  left: 0;\n}\n\n.carousel-inner > .next,\n.carousel-inner > .prev {\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.carousel-inner > .next {\n  left: 100%;\n}\n\n.carousel-inner > .prev {\n  left: -100%;\n}\n\n.carousel-inner > .next.left,\n.carousel-inner > .prev.right {\n  left: 0;\n}\n\n.carousel-inner > .active.left, .carousel-inner > .left.ax-active {\n  left: -100%;\n}\n\n.carousel-inner > .active.right, .carousel-inner > .right.ax-active {\n  left: 100%;\n}\n\n.carousel-control {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 15%;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n  font-size: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n  background-color: transparent;\n}\n\n.carousel-control.left {\n  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n  background-repeat: repeat-x;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);\n}\n\n.carousel-control.right {\n  left: auto;\n  right: 0;\n  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n  background-repeat: repeat-x;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);\n}\n\n.carousel-control:hover, .carousel-control:focus {\n  outline: 0;\n  color: #fff;\n  text-decoration: none;\n  opacity: 0.9;\n  filter: alpha(opacity=90);\n}\n\n.carousel-control .icon-prev,\n.carousel-control .icon-next,\n.carousel-control .glyphicon-chevron-left,\n.carousel-control .glyphicon-chevron-right {\n  position: absolute;\n  top: 50%;\n  margin-top: -10px;\n  z-index: 5;\n  display: inline-block;\n}\n\n.carousel-control .icon-prev,\n.carousel-control .glyphicon-chevron-left {\n  left: 50%;\n  margin-left: -10px;\n}\n\n.carousel-control .icon-next,\n.carousel-control .glyphicon-chevron-right {\n  right: 50%;\n  margin-right: -10px;\n}\n\n.carousel-control .icon-prev,\n.carousel-control .icon-next {\n  width: 20px;\n  height: 20px;\n  line-height: 1;\n  font-family: serif;\n}\n\n.carousel-control .icon-prev:before {\n  content: '\\2039';\n}\n\n.carousel-control .icon-next:before {\n  content: '\\203A';\n}\n\n.carousel-indicators {\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  z-index: 15;\n  width: 60%;\n  margin-left: -30%;\n  padding-left: 0;\n  list-style: none;\n  text-align: center;\n}\n\n.carousel-indicators li {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  margin: 1px;\n  text-indent: -999px;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: #000 \\9;\n  background-color: transparent;\n}\n\n.carousel-indicators .active, .carousel-indicators .ax-active {\n  margin: 0;\n  width: 12px;\n  height: 12px;\n  background-color: #fff;\n}\n\n.carousel-caption {\n  position: absolute;\n  left: 15%;\n  right: 15%;\n  bottom: 20px;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n}\n\n.carousel-caption .btn {\n  text-shadow: none;\n}\n\n@media screen and (min-width: 768px) {\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 30px;\n    height: 30px;\n    margin-top: -10px;\n    font-size: 30px;\n  }\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .icon-prev {\n    margin-left: -10px;\n  }\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-next {\n    margin-right: -10px;\n  }\n  .carousel-caption {\n    left: 20%;\n    right: 20%;\n    padding-bottom: 30px;\n  }\n  .carousel-indicators {\n    bottom: 20px;\n  }\n}\n\n.clearfix:before, .clearfix:after {\n  content: \" \";\n  display: table;\n}\n\n.clearfix:after {\n  clear: both;\n}\n\n.center-block {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.pull-right {\n  float: right !important;\n}\n\n.pull-left {\n  float: left !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n.show, .ax-show {\n  display: block !important;\n}\n\n.invisible, .ax-invisible {\n  visibility: hidden;\n}\n\n.text-hide, .ax-text-hide {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0;\n}\n\n.hidden, .ax-hide, .ax-omitted {\n  display: none !important;\n}\n\n.affix {\n  position: fixed;\n}\n\n@-ms-viewport {\n  width: device-width;\n}\n\n.visible-xs {\n  display: none !important;\n}\n\n.visible-sm {\n  display: none !important;\n}\n\n.visible-md {\n  display: none !important;\n}\n\n.visible-lg {\n  display: none !important;\n}\n\n.visible-xs-block,\n.visible-xs-inline,\n.visible-xs-inline-block,\n.visible-sm-block,\n.visible-sm-inline,\n.visible-sm-inline-block,\n.visible-md-block,\n.visible-md-inline,\n.visible-md-inline-block,\n.visible-lg-block,\n.visible-lg-inline,\n.visible-lg-inline-block {\n  display: none !important;\n}\n\n@media (max-width: 767px) {\n  .visible-xs {\n    display: block !important;\n  }\n  table.visible-xs {\n    display: table !important;\n  }\n  tr.visible-xs {\n    display: table-row !important;\n  }\n  th.visible-xs,\n  td.visible-xs {\n    display: table-cell !important;\n  }\n}\n\n@media (max-width: 767px) {\n  .visible-xs-block {\n    display: block !important;\n  }\n}\n\n@media (max-width: 767px) {\n  .visible-xs-inline {\n    display: inline !important;\n  }\n}\n\n@media (max-width: 767px) {\n  .visible-xs-inline-block {\n    display: inline-block !important;\n  }\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm {\n    display: block !important;\n  }\n  table.visible-sm {\n    display: table !important;\n  }\n  tr.visible-sm {\n    display: table-row !important;\n  }\n  th.visible-sm,\n  td.visible-sm {\n    display: table-cell !important;\n  }\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-block {\n    display: block !important;\n  }\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline {\n    display: inline !important;\n  }\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline-block {\n    display: inline-block !important;\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md {\n    display: block !important;\n  }\n  table.visible-md {\n    display: table !important;\n  }\n  tr.visible-md {\n    display: table-row !important;\n  }\n  th.visible-md,\n  td.visible-md {\n    display: table-cell !important;\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-block {\n    display: block !important;\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline {\n    display: inline !important;\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline-block {\n    display: inline-block !important;\n  }\n}\n\n@media (min-width: 1200px) {\n  .visible-lg {\n    display: block !important;\n  }\n  table.visible-lg {\n    display: table !important;\n  }\n  tr.visible-lg {\n    display: table-row !important;\n  }\n  th.visible-lg,\n  td.visible-lg {\n    display: table-cell !important;\n  }\n}\n\n@media (min-width: 1200px) {\n  .visible-lg-block {\n    display: block !important;\n  }\n}\n\n@media (min-width: 1200px) {\n  .visible-lg-inline {\n    display: inline !important;\n  }\n}\n\n@media (min-width: 1200px) {\n  .visible-lg-inline-block {\n    display: inline-block !important;\n  }\n}\n\n@media (max-width: 767px) {\n  .hidden-xs {\n    display: none !important;\n  }\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .hidden-sm {\n    display: none !important;\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .hidden-md {\n    display: none !important;\n  }\n}\n\n@media (min-width: 1200px) {\n  .hidden-lg {\n    display: none !important;\n  }\n}\n\n.visible-print {\n  display: none !important;\n}\n\n@media print {\n  .visible-print {\n    display: block !important;\n  }\n  table.visible-print {\n    display: table !important;\n  }\n  tr.visible-print {\n    display: table-row !important;\n  }\n  th.visible-print,\n  td.visible-print {\n    display: table-cell !important;\n  }\n}\n\n.visible-print-block {\n  display: none !important;\n}\n\n@media print {\n  .visible-print-block {\n    display: block !important;\n  }\n}\n\n.visible-print-inline {\n  display: none !important;\n}\n\n@media print {\n  .visible-print-inline {\n    display: inline !important;\n  }\n}\n\n.visible-print-inline-block {\n  display: none !important;\n}\n\n@media print {\n  .visible-print-inline-block {\n    display: inline-block !important;\n  }\n}\n\n@media print {\n  .hidden-print {\n    display: none !important;\n  }\n}\n\n@-webkit-keyframes ax-spin-around {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes ax-spin-around {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n.ax-invisible {\n  visibility: hidden !important;\n}\n\n[readonly],\n.ax-readonly {\n  color: #555555 !important;\n  cursor: default !important;\n}\n\n[disabled],\n.ax-disabled {\n  cursor: default !important;\n  pointer-events: none;\n  color: #555555 !important;\n}\n\n.ax-error {\n  color: #a94442 !important;\n}\n\nselect[readonly], select.ax-readonly,\ntextarea[readonly],\ntextarea.ax-readonly,\ninput[type=\"text\"][readonly],\ninput[type=\"text\"].ax-readonly {\n  background: #777777;\n  border-color: #555555;\n}\n\nselect[disabled], select.ax-disabled,\ntextarea[disabled],\ntextarea.ax-disabled,\ninput[type=\"text\"][disabled],\ninput[type=\"text\"].ax-disabled {\n  background: #777777;\n  border-color: #555555;\n}\n\nselect.ax-error,\ntextarea.ax-error,\ninput[type=\"text\"].ax-error {\n  background: transparent;\n  border-color: #a94442;\n}\n\n.table .ax-error {\n  color: #a94442 !important;\n}\n\n.table input[type=\"text\"][readonly],\n.table input[type=\"text\"][readonly] .ax-error, .table input[type=\"text\"].ax-readonly,\n.table input[type=\"text\"].ax-readonly .ax-error, .table input[type=\"text\"][disabled],\n.table input[type=\"text\"][disabled] .ax-error, .table input[type=\"text\"].ax-disabled,\n.table input[type=\"text\"].ax-disabled .ax-error {\n  border-color: transparent !important;\n}\n\n.ax-icon-previous:before {\n  content: \"\\F0A8\";\n}\n\n.ax-icon-previous-primary:before {\n  content: \"\\F0A8\";\n}\n\n.ax-icon-next:before {\n  content: \"\\F0A9\";\n}\n\n.ax-icon-next-primary:before {\n  content: \"\\F0A9\";\n}\n\n.ax-icon-add:before {\n  content: \"\\F067\";\n}\n\n.ax-icon-delete:before {\n  content: \"\\F057\";\n}\n\n.ax-icon-ok:before {\n  content: \"\\F058\";\n}\n\n.ax-icon-apply:before {\n  content: \"\\F058\";\n}\n\n.ax-icon-cancel:before {\n  content: \"\\F057\";\n}\n\n.ax-icon-yes:before {\n  content: \"\\F058\";\n}\n\n.ax-icon-no:before {\n  content: \"\\F057\";\n}\n\n.ax-icon-finish:before {\n  content: \"\\F058\";\n}\n\n.ax-icon-info:before {\n  content: \"\\F05A\";\n}\n\n.ax-icon-warn:before {\n  content: \"\\F071\";\n}\n\n.ax-icon-help:before {\n  content: \"\\F059\";\n}\n\n.ax-icon-print:before {\n  content: \"\\F02F\";\n}\n\n.ax-text-ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n/*# sourceMappingURL=theme.css.map */", ""]);

// exports


/***/ }),

/***/ 165:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/glyphicons-halflings-regular.ttf";

/***/ }),

/***/ 166:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/glyphicons-halflings-regular.woff";

/***/ }),

/***/ 167:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/glyphicons-halflings-regular.woff2";

/***/ }),

/***/ 168:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.eot";

/***/ }),

/***/ 169:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.eot";

/***/ }),

/***/ 170:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.ttf";

/***/ }),

/***/ 171:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.woff2";

/***/ }),

/***/ 172:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.woff";

/***/ }),

/***/ 173:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/glyphicons-halflings-regular.svg";

/***/ }),

/***/ 174:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fontawesome-webfont.svg";

/***/ }),

/***/ 175:
/***/ (function(module, exports, __webpack_require__) {

exports.parse = __webpack_require__(176);
exports.stringify = __webpack_require__(177);


/***/ }),

/***/ 176:
/***/ (function(module, exports) {

var at, // The index of the current character
    ch, // The current character
    escapee = {
        '"':  '"',
        '\\': '\\',
        '/':  '/',
        b:    '\b',
        f:    '\f',
        n:    '\n',
        r:    '\r',
        t:    '\t'
    },
    text,

    error = function (m) {
        // Call error when something is wrong.
        throw {
            name:    'SyntaxError',
            message: m,
            at:      at,
            text:    text
        };
    },
    
    next = function (c) {
        // If a c parameter is provided, verify that it matches the current character.
        if (c && c !== ch) {
            error("Expected '" + c + "' instead of '" + ch + "'");
        }
        
        // Get the next character. When there are no more characters,
        // return the empty string.
        
        ch = text.charAt(at);
        at += 1;
        return ch;
    },
    
    number = function () {
        // Parse a number value.
        var number,
            string = '';
        
        if (ch === '-') {
            string = '-';
            next('-');
        }
        while (ch >= '0' && ch <= '9') {
            string += ch;
            next();
        }
        if (ch === '.') {
            string += '.';
            while (next() && ch >= '0' && ch <= '9') {
                string += ch;
            }
        }
        if (ch === 'e' || ch === 'E') {
            string += ch;
            next();
            if (ch === '-' || ch === '+') {
                string += ch;
                next();
            }
            while (ch >= '0' && ch <= '9') {
                string += ch;
                next();
            }
        }
        number = +string;
        if (!isFinite(number)) {
            error("Bad number");
        } else {
            return number;
        }
    },
    
    string = function () {
        // Parse a string value.
        var hex,
            i,
            string = '',
            uffff;
        
        // When parsing for string values, we must look for " and \ characters.
        if (ch === '"') {
            while (next()) {
                if (ch === '"') {
                    next();
                    return string;
                } else if (ch === '\\') {
                    next();
                    if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                            hex = parseInt(next(), 16);
                            if (!isFinite(hex)) {
                                break;
                            }
                            uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                    } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                    } else {
                        break;
                    }
                } else {
                    string += ch;
                }
            }
        }
        error("Bad string");
    },

    white = function () {

// Skip whitespace.

        while (ch && ch <= ' ') {
            next();
        }
    },

    word = function () {

// true, false, or null.

        switch (ch) {
        case 't':
            next('t');
            next('r');
            next('u');
            next('e');
            return true;
        case 'f':
            next('f');
            next('a');
            next('l');
            next('s');
            next('e');
            return false;
        case 'n':
            next('n');
            next('u');
            next('l');
            next('l');
            return null;
        }
        error("Unexpected '" + ch + "'");
    },

    value,  // Place holder for the value function.

    array = function () {

// Parse an array value.

        var array = [];

        if (ch === '[') {
            next('[');
            white();
            if (ch === ']') {
                next(']');
                return array;   // empty array
            }
            while (ch) {
                array.push(value());
                white();
                if (ch === ']') {
                    next(']');
                    return array;
                }
                next(',');
                white();
            }
        }
        error("Bad array");
    },

    object = function () {

// Parse an object value.

        var key,
            object = {};

        if (ch === '{') {
            next('{');
            white();
            if (ch === '}') {
                next('}');
                return object;   // empty object
            }
            while (ch) {
                key = string();
                white();
                next(':');
                if (Object.hasOwnProperty.call(object, key)) {
                    error('Duplicate key "' + key + '"');
                }
                object[key] = value();
                white();
                if (ch === '}') {
                    next('}');
                    return object;
                }
                next(',');
                white();
            }
        }
        error("Bad object");
    };

value = function () {

// Parse a JSON value. It could be an object, an array, a string, a number,
// or a word.

    white();
    switch (ch) {
    case '{':
        return object();
    case '[':
        return array();
    case '"':
        return string();
    case '-':
        return number();
    default:
        return ch >= '0' && ch <= '9' ? number() : word();
    }
};

// Return the json_parse function. It will have access to all of the above
// functions and variables.

module.exports = function (source, reviver) {
    var result;
    
    text = source;
    at = 0;
    ch = ' ';
    result = value();
    white();
    if (ch) {
        error("Syntax error");
    }

    // If there is a reviver function, we recursively walk the new structure,
    // passing each name/value pair to the reviver function for possible
    // transformation, starting with a temporary root object that holds the result
    // in an empty key. If there is not a reviver function, we simply return the
    // result.

    return typeof reviver === 'function' ? (function walk(holder, key) {
        var k, v, value = holder[key];
        if (value && typeof value === 'object') {
            for (k in value) {
                if (Object.prototype.hasOwnProperty.call(value, k)) {
                    v = walk(value, k);
                    if (v !== undefined) {
                        value[k] = v;
                    } else {
                        delete value[k];
                    }
                }
            }
        }
        return reviver.call(holder, key, value);
    }({'': result}, '')) : result;
};


/***/ }),

/***/ 177:
/***/ (function(module, exports) {

var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    gap,
    indent,
    meta = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
    },
    rep;

function quote(string) {
    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.
    
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c :
            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
}

function str(key, holder) {
    // Produce a string from holder[key].
    var i,          // The loop counter.
        k,          // The member key.
        v,          // The member value.
        length,
        mind = gap,
        partial,
        value = holder[key];
    
    // If the value has a toJSON method, call it to obtain a replacement value.
    if (value && typeof value === 'object' &&
            typeof value.toJSON === 'function') {
        value = value.toJSON(key);
    }
    
    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.
    if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
    }
    
    // What happens next depends on the value's type.
    switch (typeof value) {
        case 'string':
            return quote(value);
        
        case 'number':
            // JSON numbers must be finite. Encode non-finite numbers as null.
            return isFinite(value) ? String(value) : 'null';
        
        case 'boolean':
        case 'null':
            // If the value is a boolean or null, convert it to a string. Note:
            // typeof null does not produce 'null'. The case is included here in
            // the remote chance that this gets fixed someday.
            return String(value);
            
        case 'object':
            if (!value) return 'null';
            gap += indent;
            partial = [];
            
            // Array.isArray
            if (Object.prototype.toString.apply(value) === '[object Array]') {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }
                
                // Join all of the elements together, separated with commas, and
                // wrap them in brackets.
                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }
            
            // If the replacer is an array, use it to select the members to be
            // stringified.
            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            else {
                // Otherwise, iterate through all of the keys in the object.
                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            
        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0 ? '{}' : gap ?
            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
            '{' + partial.join(',') + '}';
        gap = mind;
        return v;
    }
}

module.exports = function (value, replacer, space) {
    var i;
    gap = '';
    indent = '';
    
    // If the space parameter is a number, make an indent string containing that
    // many spaces.
    if (typeof space === 'number') {
        for (i = 0; i < space; i += 1) {
            indent += ' ';
        }
    }
    // If the space parameter is a string, it will be used as the indent string.
    else if (typeof space === 'string') {
        indent = space;
    }

    // If there is a replacer, it must be a function or an array.
    // Otherwise, throw an error.
    rep = replacer;
    if (replacer && typeof replacer !== 'function'
    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
        throw new Error('JSON.stringify');
    }
    
    // Make a fake root object containing our value under the key of ''.
    // Return the result of stringifying the value.
    return str('', {'': value});
};


/***/ }),

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

var resource = __webpack_require__( 185 );
module.exports = typeof resource === 'string' ? resource : null;

/***/ }),

/***/ 179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * Instatiate an Ajv instance with the configuration required by LaxarJS.
 * @module ajv
 */


Object.defineProperty(exports, "__esModule", {
   value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.create = create;

var _ajv = __webpack_require__(117);

var _ajv2 = _interopRequireDefault(_ajv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// JSON schema formats:
var TOPIC_IDENTIFIER = '([a-z][+a-zA-Z0-9]*|[A-Z][+A-Z0-9]*)';
var SUB_TOPIC_FORMAT = '^' + TOPIC_IDENTIFIER + '$';
var TOPIC_FORMAT = '^(' + TOPIC_IDENTIFIER + '(-' + TOPIC_IDENTIFIER + ')*)$';
var FLAG_TOPIC_FORMAT = '^[!]?(' + TOPIC_IDENTIFIER + '(-' + TOPIC_IDENTIFIER + ')*)$';
// simplified RFC-5646 language-tag matcher with underscore/dash relaxation:
// the parts are: language *("-"|"_" script|region|constant) *("-"|"_" extension|privateuse)
var LANGUAGE_TAG_FORMAT = /^[a-z]{2,8}([-_][a-z0-9]{2,8})*([-_][a-z0-9][-_][a-z0-9]{2,8})*$/i;

var AJV_FORMATS = {
   // allows 'myTopic', 'myTopic-mySubTopic-SUB_0815+OK' and variations:
   'topic': stringTest(TOPIC_FORMAT),

   // allows 'mySubTopic0815', 'MY_SUB_TOPIC+OK' and variations:
   'sub-topic': stringTest(SUB_TOPIC_FORMAT),

   // allows 'myTopic', '!myTopic-mySubTopic-SUB_0815+OK' and variations:
   'flag-topic': stringTest(FLAG_TOPIC_FORMAT),

   // allows 'de_DE', 'en-x-laxarJS' and such:
   'language-tag': stringTest(LANGUAGE_TAG_FORMAT)
};

var AX_FORMAT = 'axFormat';

// ajv currently does not support formats for non-string types,
// so we pre-process schemas to use "custom validation keywords" instead.
var CUSTOM_KEYWORD_FORMATS = {
   // checks that object keys have the 'topic' format:
   'topic-map': keyTest(TOPIC_FORMAT),
   // checks that object keys have the 'language-tag' format:
   'localization': keyTest(LANGUAGE_TAG_FORMAT)
};

/**
 * @return {Ajv} an Ajv instance
 */
function create() {
   var ajv = new _ajv2.default({ jsonPointers: true, useDefaults: true });

   Object.keys(AJV_FORMATS).forEach(function (key) {
      ajv.addFormat(key, AJV_FORMATS[key]);
   });

   ajv.addKeyword(AX_FORMAT, {
      type: 'object',
      validate: validateKeywordFormat,
      errors: false
   });

   return {
      compile: compile,
      error: error
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function compile(schema, sourceRef) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var _options$isFeaturesVa = options.isFeaturesValidator,
          isFeaturesValidator = _options$isFeaturesVa === undefined ? false : _options$isFeaturesVa;


      if (!schema.$schema) {
         throw new Error('JSON schema for artifact "' + sourceRef + '" is missing "$schema" property');
      }
      if (isFeaturesValidator) {
         setAdditionalPropertiesDefault(schema);
      }
      translateCustomKeywordFormats(schema);

      try {
         var validate = ajv.compile(schema);
         return isFeaturesValidator ? decorateValidate(validate, schema, setFirstLevelDefaults) : validate;
      } catch (e) {
         throw new Error('Failed to compile JSON schema for artifact "' + sourceRef + '":\n' + e);
      }
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function error(message, errors) {
      var trim = function trim(_) {
         return _.replace(/^\s+/, '').replace(/\s+$/, '');
      };
      var ajvMessage = ajv.errorsText(errors, { dataVar: '' });
      var error = new Error(message + ': ' + trim(ajvMessage) + ' ' + JSON.stringify(errors.map(function (e) {
         return e.params;
      })));
      error.name = 'ValidationError';
      error.errors = errors;
      return error;
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function setAdditionalPropertiesDefault(schema) {
   var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

   return applyToSchemas(schema, function (schema) {
      if (('properties' in schema || 'patternProperties' in schema) && !('additionalProperties' in schema)) {
         schema.additionalProperties = value;
      }
   });
}

function translateCustomKeywordFormats(schema) {
   return applyToSchemas(schema, function (schema) {
      if (schema.format && schema.format in CUSTOM_KEYWORD_FORMATS) {
         schema[AX_FORMAT] = schema.format;
         delete schema.format;
      }
   });
}

function applyToSchemas(schema, callback) {

   return applyRecursively(schema);

   function applyRecursively(schema) {
      if ((typeof schema === 'undefined' ? 'undefined' : _typeof(schema)) === 'object') {
         callback(schema);

         if (schema.items) {
            applyRecursively(schema.items);
         }
         if (schema.properties) {
            forEachValue(schema.properties, applyRecursively);
         }
         if (schema.patternProperties) {
            forEachValue(schema.patternProperties, applyRecursively);
         }
         if (schema.additionalProperties) {
            applyRecursively(schema.additionalProperties);
         }
      }
      return schema;
   }

   function forEachValue(object, callback) {
      return Object.keys(object).forEach(function (key) {
         return callback(object[key], key, object);
      });
   }
}

function decorateValidate(validate, schema, decorator) {
   var f = function f(object, rootPointer) {
      decorator(schema, object);
      var result = validate(object, rootPointer);
      if (!result) {
         f.errors = validate.errors;
      }
      return result;
   };
   return f;
}

function validateKeywordFormat(format, object) {
   return CUSTOM_KEYWORD_FORMATS[format](object);
}

function setFirstLevelDefaults(schema, object) {
   Object.keys(schema.properties || {}).forEach(function (key) {
      if (object[key] !== undefined) {
         return;
      }
      if (schema.properties[key].type === 'object') {
         object[key] = {};
      } else if (schema.properties[key].type === 'array') {
         object[key] = [];
      }
   });
}

function stringTest(format) {
   var pattern = new RegExp(format);
   return function (string) {
      return typeof string !== 'string' || pattern.test(string);
   };
}

function keyTest(format) {
   var pattern = new RegExp(format);
   return function (object) {
      return Object.keys(object).every(function (key) {
         return pattern.test(key);
      });
   };
}
//# sourceMappingURL=data:application/json;base64,

/***/ }),

/***/ 180:
/***/ (function(module, exports) {

/**
 * Expose `pathtoRegexp`.
 */

module.exports = pathtoRegexp;

/**
 * Match matching groups in a regular expression.
 */
var MATCHING_GROUP_REGEXP = /\((?!\?)/g;

/**
 * Normalize the given path string,
 * returning a regular expression.
 *
 * An empty array should be passed,
 * which will contain the placeholder
 * key names. For example "/user/:id" will
 * then contain ["id"].
 *
 * @param  {String|RegExp|Array} path
 * @param  {Array} keys
 * @param  {Object} options
 * @return {RegExp}
 * @api private
 */

function pathtoRegexp(path, keys, options) {
  options = options || {};
  keys = keys || [];
  var strict = options.strict;
  var end = options.end !== false;
  var flags = options.sensitive ? '' : 'i';
  var extraOffset = 0;
  var keysOffset = keys.length;
  var i = 0;
  var name = 0;
  var m;

  if (path instanceof RegExp) {
    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {
      keys.push({
        name: name++,
        optional: false,
        offset: m.index
      });
    }

    return path;
  }

  if (Array.isArray(path)) {
    // Map array parts into regexps and return their source. We also pass
    // the same keys and options instance into every generation to get
    // consistent matching groups before we join the sources together.
    path = path.map(function (value) {
      return pathtoRegexp(value, keys, options).source;
    });

    return new RegExp('(?:' + path.join('|') + ')', flags);
  }

  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))
    .replace(/\/\(/g, '/(?:')
    .replace(/([\/\.])/g, '\\$1')
    .replace(/(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {
      slash = slash || '';
      format = format || '';
      capture = capture || '([^\\/' + format + ']+?)';
      optional = optional || '';

      keys.push({
        name: key,
        optional: !!optional,
        offset: offset + extraOffset
      });

      var result = ''
        + (optional ? '' : slash)
        + '(?:'
        + format + (optional ? slash : '') + capture
        + (star ? '((?:[\\/' + format + '].+?)?)' : '')
        + ')'
        + optional;

      extraOffset += result.length - match.length;

      return result;
    })
    .replace(/\*/g, function (star, index) {
      var len = keys.length

      while (len-- > keysOffset && keys[len].offset > index) {
        keys[len].offset += 3; // Replacement length minus asterisk length.
      }

      return '(.*)';
    });

  // This is a workaround for handling unnamed matching groups.
  while (m = MATCHING_GROUP_REGEXP.exec(path)) {
    var escapeCount = 0;
    var index = m.index;

    while (path.charAt(--index) === '\\') {
      escapeCount++;
    }

    // It's possible to escape the bracket.
    if (escapeCount % 2 === 1) {
      continue;
    }

    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {
      keys.splice(keysOffset + i, 0, {
        name: name++, // Unnamed matching groups must be consistently linear.
        optional: false,
        offset: m.index
      });
    }

    i++;
  }

  // If the path is non-ending, match until the end or a slash.
  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\/|$)'));

  return new RegExp(path, flags);
};


/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return punycode;
		}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42)(module), __webpack_require__(115)))

/***/ }),

/***/ 182:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ 183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),

/***/ 184:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(182);
exports.encode = exports.stringify = __webpack_require__(183);


/***/ }),

/***/ 185:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(162);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(84)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./theme.css", function() {
			var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./theme.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 186:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(181);
var util = __webpack_require__(187);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(184);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),

/***/ 187:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),

/***/ 20:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export codeIsUnreachable */
/* unused harmony export state */
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * The *assert* module provides some simple assertion methods for type checks, truthyness tests and guards
 * invalid code paths.
 * When importing the module as `default` module, it is the {@link assert} function itself.
 *
 * When requiring `laxar`, it is available as `laxar.assert`.
 *
 * @module assert
 */

/**
 * Constructor for an Assertion.
 *
 * @param {*} subject
 *    the object assertions are made for
 * @param {String} [optionalDetails]
 *    details that should be printed in case no specific details are given for an assertion method
 *
 * @constructor
 * @private
 */
function Assertion(subject, optionalDetails) {
   this.subject_ = subject;
   this.details_ = optionalDetails || null;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Throws an error if the subject is `null` or `undefined`.
 *
 * @param {String} [optionalDetails]
 *    details to append to the error message
 *
 * @return {Assertion}
 *    this instance
 */
Assertion.prototype.isNotNull = function isNotNull(optionalDetails) {
   if (this.subject_ == null) {
      fail('Expected value to be defined and not null.', optionalDetails || this.details_);
   }

   return this;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Throws an error if the subject is not of the given type. No error is thrown for `null` or `undefined`.
 *
 * @param {Function} type
 *    the expected type of the subject
 * @param {String} [optionalDetails]
 *    details to append to the error message
 *
 * @return {Assertion}
 *    this instance
 */
Assertion.prototype.hasType = function hasType(type, optionalDetails) {
   if (typeof this.subject_ === 'undefined' || this.subject_ === null) {
      return this;
   }

   if (typeof type !== 'function') {
      fail('type must be a constructor function. Got ' + (typeof type === 'undefined' ? 'undefined' : _typeof(type)) + '.');
   }

   if (!checkType(this.subject_, type)) {
      var actualString = functionName(this.subject_.constructor);
      var expectedString = functionName(type);

      fail('Expected value to be an instance of "' + expectedString + '" but was "' + actualString + '".', optionalDetails || this.details_);
   }

   return this;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Throws an error if the subject is no object or the given property is not defined on it.
 *
 * @param {String} property
 *    the property that is expected for the subject
 * @param {String} [optionalDetails]
 *    details to append to the error message
 *
 * @return {Assertion}
 *    this instance
 */
Assertion.prototype.hasProperty = function hasProperty(property, optionalDetails) {
   if (_typeof(this.subject_) !== 'object') {
      fail('value must be an object. Got ' + _typeof(this.subject_) + '.');
   }

   if (!(property in this.subject_)) {
      fail('value is missing mandatory property "' + property + '".', optionalDetails || this.details_);
   }

   return this;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function fail(message, optionalDetails) {
   var details = '';
   if (optionalDetails) {
      var detailString = (typeof optionalDetails === 'undefined' ? 'undefined' : _typeof(optionalDetails)) === 'object' ? JSON.stringify(optionalDetails) : optionalDetails;
      details = ' Details: ' + detailString;
   }
   throw new Error('Assertion error: ' + message + details);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var TYPE_TO_CONSTRUCTOR = {
   'string': String,
   'number': Number,
   'boolean': Boolean,
   'function': Function
};
function checkType(subject, type) {
   if ((typeof subject === 'undefined' ? 'undefined' : _typeof(subject)) === 'object') {
      return subject instanceof type;
   }

   var actualType = TYPE_TO_CONSTRUCTOR[typeof subject === 'undefined' ? 'undefined' : _typeof(subject)];
   return actualType === type;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var FUNCTION_NAME_MATCHER = /^function ([^(]*)\(/i;
function functionName(func) {
   var match = FUNCTION_NAME_MATCHER.exec(func.toString().trim());
   return match[1].length ? match[1] : 'n/a';
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Creates and returns a new `Assertion` instance for the given `subject`.
 *
 * **Note**: this function is no member of the module, but the module itself. Thus when using `assert` via
 * laxar, `assert` is will be no simple object, but this function having the other functions as
 * properties.
 *
 * Example:
 * ```js
 * define( [ 'laxar' ], function( ax ) {
 *    ax.assert( ax.assert ).hasType( Function );
 *    ax.assert.state( typeof ax.assert.codeIsUnreachable === 'function' );
 * } );
 * ```
 *
 * @param {*} subject
 *    the object assertions are made for
 * @param {String} [optionalDetails]
 *    details that should be printed in case no specific details are given when calling an assertion method
 *
 * @return {Assertion}
 *    the assertion instance
 */
function assert(subject, optionalDetails) {
   return new Assertion(subject, optionalDetails);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Marks a code path as erroneous by throwing an error when reached.
 *
 * @param {String} [optionalDetails]
 *    details to append to the error message
 */
assert.codeIsUnreachable = function codeIsUnreachable(optionalDetails) {
   fail('Code should be unreachable!', optionalDetails);
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Throws an error if the given expression is falsy.
 *
 * @param {*} expression
 *    the expression to test for truthyness
 * @param {String} [optionalDetails]
 *    details to append to the error message
 */
assert.state = function state(expression, optionalDetails) {
   if (!expression) {
      fail('State does not hold.', optionalDetails);
   }
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/* harmony default export */ __webpack_exports__["a"] = assert;
var codeIsUnreachable = assert.codeIsUnreachable;
var state = assert.state;

/***/ }),

/***/ 24:
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ 31:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_laxar__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_laxar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_laxar__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_laxar_tooling_lib_ajv__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_laxar_tooling_lib_ajv___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_laxar_tooling_lib_ajv__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEST_WIDGET_ID", function() { return TEST_WIDGET_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixtures", function() { return fixtures; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eventBus", function() { return eventBus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "widget", function() { return widget; });
/* harmony export (immutable) */ __webpack_exports__["tearDown"] = tearDown;
/* harmony export (immutable) */ __webpack_exports__["triggerStartupEvents"] = triggerStartupEvents;
/* harmony export (immutable) */ __webpack_exports__["setupForWidget"] = setupForWidget;
/* harmony export (immutable) */ __webpack_exports__["createSetupForWidget"] = createSetupForWidget;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */
/**
 * A testing framework for LaxarJS widgets.
 *
 * @module laxar-mocks
 */





var widgetPrivateApi = {};

// The AngularJS adapter messes with the regular Promise API.
// To guarantee AngularJS-free scheduling of `widget.render` we need to hold on to the original.
var Promise = window.Promise;
var nextTick = function nextTick(f) {
   Promise.resolve().then(f);
};

var noOp = function noOp() {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * The ID used for the widget instance loaded in the test environment.
 *
 * @name TEST_WIDGET_ID
 * @type {String}
 */
var TEST_WIDGET_ID = 'test-widget';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Can be used to specify setup-fixtures for widget/activity tests.
 *
 * Spec-runners may add entries to this map to provision widget specs with options that will automatically be
 * picked up by `setupForWidget`. For example, the laxar-mocks spec-loader for webpack puts the `artifacts`,
 * `adapter` and `descriptor` options here.
 *
 * Options passed by the spec-test to {@link #setupForWidget} will take precedence over these values.
 *
 * @name fixtures
 * @type {Object}
 */
var fixtures = {};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var eventBus = void 0;

var adapterInstancePromise = void 0;
var adapter = void 0;
var anchorElement = void 0;
var artifacts = void 0;
var configuration = void 0;
var laxarServices = void 0;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * The API to instrument and inspect the widget under test. In addition to the listed methods it has all
 * injections for the specific widget technology set as properties. E.g. for every widget technology there
 * will be `axEventBus` and `axContext` properties, but for AngularJS widgets there will be an additional
 * `$scope` property. Note that these are only available after `load()` has been called and the widget
 * controller is loaded.
 *
 * The methods of the event bus instance available as `axEventBus` are already provided with
 * [Jasmine spies](http://jasmine.github.io/2.3/introduction.html#section-Spies).
 *
 * @name Widget
 */
var widget = {

   /**
    * Allows the user to configures the widget features before loading.
    *
    * Configuration may be specified using
    *  - a configuration object, similar to a `features` key within a page descriptor,
    *  - a combination of feature path and value, allowing to conveniently override individual values.
    *
    * Shorthands may be used:
    *
    * ```js
    * beforeEach( () => {
    *    testing.widget.configure( 'search.resource', 'search' );
    * } );
    * ```
    *
    * If no previous configuration was given for other `search` sub-keys, this is equivalent to the following:
    *
    * ```js
    * beforeEach( () => {
    *    testing.widget.configure( {
    *       search: {
    *          resource: 'search'
    *       }
    *    } );
    * } );
    * ```
    *
    * @param {String|Object} keyOrConfiguration
    *    either an object for the full features configuration or the path to the property to configure
    * @param {*} [optionalValue]
    *    if `keyOrConfiguration` is a string, this is the value to set the feature configuration to
    *
    * @memberOf Widget
    */
   configure: function configure(keyOrConfiguration, optionalValue) {
      if (!widgetPrivateApi.configure) {
         throw new Error('laxar-mocks: createSetupForWidget needs to be called prior to configure.');
      }
      widgetPrivateApi.configure(keyOrConfiguration, optionalValue);
   },


   /**
    * Loads the given widget and instantiates its controller. As this function is asynchronous, it receives
    * a Jasmine `done` callback that is called when the widget is ready.
    *
    * The instance ID (`axContext.widget.id`) for widgets loaded by laxar-mocks is always `testWidget`.
    * Their containing widget area is always `content`.
    *
    * The simplest way to call this function is by passing it to its own `beforeEach` call:
    * ```js
    * beforeEach( testing.widget.load );
    * ```
    *
    * @param {Function} done
    *    callback to notify Jasmine that the asynchronous widget loading has finished
    *
    * @memberOf Widget
    */
   load: function load(done) {
      if (!widgetPrivateApi.load) {
         throw new Error('laxar-mocks: createSetupForWidget needs to be called prior to load.');
      }
      if (typeof done !== 'function') {
         throw new Error('laxar-mocks: widget.load must be called with a Jasmine done-callback function.');
      }
      widgetPrivateApi.load().catch(handleErrorForJasmine).then(function () {
         return nextTick(done);
      });
   },


   /**
    * Renders the widget's template by calling the appropriate widget adapter and appends it within a
    * container div to the test's DOM. The widget DOM fragement will be returned in order to simulate
    * user interaction on it. Calling `tearDown()` will remove it again.
    *
    * Note that calling this method for an activity has no effect and hence is unnessecary.
    *
    * @return {Node}
    *    the widget DOM fragment
    *
    * @memberOf Widget
    */
   render: function render() {
      widgetPrivateApi.renderTo(anchorElement);
      return anchorElement.firstChild;
   }
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function decoratedAdapter(adapter) {
   return {
      technology: adapter.technology,
      bootstrap: function bootstrap(artifacts, services, domRoot) {
         laxarServices = services;
         eventBus = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["a" /* createAxEventBusMock */])();
         var adapterFactory = adapter.bootstrap(artifacts, services, domRoot);
         return Object.assign({}, adapterFactory, {
            serviceDecorators: createServiceDecoratorsFactory(adapterFactory),
            create: function create() {
               adapterInstancePromise = Promise.resolve(adapterFactory.create.apply(adapterFactory, arguments));
               return adapterInstancePromise;
            }
         });
      }
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function createServiceDecoratorsFactory(adapterFactory) {
      return function serviceDecorators() {
         return Object.assign({}, (adapterFactory.serviceDecorators || noOp)(), {
            axAreaHelper: function axAreaHelper() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["b" /* createAxAreaHelperMock */])({ widget: { id: TEST_WIDGET_ID } });
            },
            axAssets: function axAssets() {
               var assets = artifacts.widgets[0].assets;

               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["c" /* createAxAssetsMock */])(assets);
            },
            axConfiguration: function axConfiguration() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["d" /* createAxConfigurationMock */])(configuration);
            },
            axEventBus: function axEventBus(eventBus) {
               var methods = ['subscribe', 'publish', 'publishAndGatherReplies', 'addInspector'];
               methods.forEach(function (method) {
                  spyOn(eventBus, method).and.callThrough();
               });
               return eventBus;
            },
            axFlowService: function axFlowService() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["e" /* createAxFlowServiceMock */])();
            },
            axGlobalEventBus: function axGlobalEventBus() {
               return eventBus;
            },
            axGlobalLog: function axGlobalLog() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["f" /* createAxLogMock */])();
            },
            axGlobalStorage: function axGlobalStorage() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["g" /* createAxGlobalStorageMock */])();
            },
            axHeartbeat: function axHeartbeat() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["h" /* createAxHeartbeatMock */])();
            },
            axI18n: function axI18n(i18n) {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["i" /* createAxI18nMock */])(i18n);
            },
            axLog: function axLog() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["f" /* createAxLogMock */])();
            },
            axStorage: function axStorage() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["j" /* createAxStorageMock */])();
            },
            axVisibility: function axVisibility() {
               return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_laxar_laxar_widget_service_mocks__["k" /* createAxVisibilityMock */])({ eventBus: eventBus, widget: { area: 'content' } });
            }
         });
      };
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Removes any DOM fragments of the widget and calls the appropriate destructors. It is advised to call
 * this once in an `afterEach` call. Passing this function directly to `afterEach` works as well.
 *
 * Example.
 * ```js
 * afterEach( axMocks.tearDown );
 * ```
 */
function tearDown() {
   widgetPrivateApi.destroy();
   if (anchorElement && anchorElement.parentElement) {
      anchorElement.parentElement.removeChild(anchorElement);
      anchorElement = null;
   }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

var defaultEvents = [{
   topic: 'didChangeLocale',
   subtopics: {
      'default': {
         locale: 'default',
         languageTag: 'en'
      }
   }
}, {
   topic: 'didChangeLocale',
   subtopics: {
      'default': {
         theme: 'default'
      }
   }
}, {
   topic: 'beginLifecycleRequest',
   subtopics: {
      'default': {
         lifecycleId: 'default'
      }
   }
}, {
   topic: 'didChangeAreaVisibility',
   subtopics: {
      'content.true': {
         area: 'content',
         visible: true
      }
   }
}, {
   topic: 'didNavigate',
   subtopics: {
      testing: {
         place: 'testing',
         target: '_self',
         data: {}
      }
   }
}];

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Triggers all events normally published by the runtime after instantiation of the controller. This
 * includes the following events, listed with their payloads in the order they are published:
 *
 * ###### Default Lifecycle Events
 *
 * **1. didChangeLocale.default:**
 * ```js
 * {
 *    locale: 'default',
 *    languageTag: 'en'
 * }
 * ```
 *
 * **2. didChangeTheme.default:**
 * ```js
 * {
 *    theme: 'default'
 * }
 * ```
 *
 * **3. beginLifecycleRequest.default:**
 * ```js
 * {
 *    lifecycleId: 'default'
 * }
 * ```
 *
 * **4. didChangeAreaVisibility.content.true:**
 * ```js
 * {
 *    area: 'content',
 *    visible: true
 * }
 * ```
 *
 * **5. didNavigate.testing:**
 * ```js
 * {
 *    place: 'testing',
 *    target: '_self',
 *    data: {}
 * }
 * ```
 *
 * ###### Customizing the Lifecycle Events
 *
 * Via the `optionalEvents` argument it is possible to add events with different topic suffixes, to
 * overwrite events defined above, or to completely prevent from triggering any of the events. To do so
 * pass a map, where the primary topics are the keys where each value is a map from topic suffix to
 * payload. If the value is `null`, the specific event is not published.
 *
 * Example:
 * ```js
 * axMocks.triggerStartupEvents( {
 *    didChangeLocale: {
 *       alternative: {
 *          locale: 'alternative',
 *          languageTag: 'de'
 *       }
 *    },
 *    didChangeTheme: {
 *       'default': null
 *    },
 *    didNavigate: {
 *       testing: {
 *          place: 'testing',
 *          target: '_self',
 *          data: {
 *             user: 'Peter',
 *             articleId: '1234'
 *          }
 *       }
 *    }
 * } );
 * ```
 *
 * The effect of this call is the following:
 * 1. There will be two *didChangeLocale* events: *didChangeLocale.default*, carrying the language tag *en*
 *    in its payload, and *didChangeLocale.alternative*, carrying the language tag *de* in its payload.
 * 2. There will be no *didChangeTheme* event, since the only pre-configured one is set to `null`.
 * 3. The parameters of the *didNavigate.testing* event are changed to be
 *    `{ user: 'Peter', articleId: '1234' }`.
 *
 * @param {Object} [optionalEvents]
 *    optional map of user defined events
 *
 */
function triggerStartupEvents() {
   var optionalEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

   defaultEvents.map(function (_ref) {
      var topic = _ref.topic,
          subtopics = _ref.subtopics;
      return {
         topic: topic,
         subtopics: Object.assign({}, subtopics, optionalEvents[topic])
      };
   }).forEach(function (_ref2) {
      var topic = _ref2.topic,
          subtopics = _ref2.subtopics;

      Object.keys(subtopics).filter(function (key) {
         return subtopics[key] != null;
      }).forEach(function (key) {
         eventBus.publish(topic + '.' + key, subtopics[key]);
      });
      eventBus.flush();
   });
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Creates the setup function for a widget test, using externally provided fixtures.
 *
 * This is the recommended way to setup your widget test. For this to work, *this* module's `fixtures` export
 * needs to be initialized with the following properties:
 *
 *   - `descriptor` - the widget's JSON descriptor,
 *   - `adapter` - the adapter module for the widget's integration technology (use `null` for "plain"),
 *   - `artifacts` - an artifact listing containing the assets of the widget and its controls.
 *
 * When webpack loads spec-tests through the `laxar-mocks/spec-loader`, fixtures are provided automatically.
 * To manually provide these fixtures, controlling every aspect of your test environment, pass them using the
 * named `optionalOptions` parameter.
 *
 * The returned function is asynchronous and should simply be passed to `beforeEach`. By doing so, the Jasmine
 * `done` callback is handled under the hood.
 *
 * ###### Example (ES 2015) `example-widget.spec.js`:
 *
 * ```js
 * import * as axMocks from 'laxar-mocks';
 *
 * describe( 'An ExampleWidget', () => {
 *    beforeEach( testing.setupForWidget() );
 *    // ... widget configuration, loading and your tests ...
 *    afterEach( axMocks.tearDown );
 * } );
 * ```
 *
 * When using the spec-loader, something like the following code will be generated:
 *
 * ```js
 * ( fixtures => {
 *    fixtures.descriptor = require( '../widget.json' );
 *    fixtures.artifacts = require( 'laxar-loader?widget=example-widget' );
 *    fixtures.adapter = require( 'laxar-' + fixtures.descriptor.integration.technology + '-adapter' );
 * } )( require( 'laxar-mocks' ).fixtures );
 * import * as axMocks from 'laxar-mocks';
 *
 * describe( 'An ExampleWidget', () => {
 *    // ... same as above ...
 * } );
 * ```
 * @param {Object} [optionalOptions]
 *    optional map of options
 * @param {Object} [optionalOptions.adapter=undefined]
 *    a widget-adapter matching the integration technology of the widget; omit if "plain"
 * @param {Object} [optionalOptions.artifacts={}]
 *    artifacts listing for this widget and its controls. Because it is hard to manually produce this
 *    correctly, using the laxar-mocks spec-loader is recommended
 * @param {Object} [optionalOptions.configuration={ baseHref: '/' }]
 *    mock configuration data to use for the `axConfiguration` injection of the widget
 * @param {Object} [optionalOptions.descriptor={}]
 *    the contents of this widget's `widget.json`, including the JSON schema for the widget features
 *
 * @return {Function}
 *    a function to directly pass to `beforeEach`, accepting a Jasmine `done` callback
 */
function setupForWidget() {
   var optionalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["assert"])(optionalOptions).hasType(Object);
   var setupFixtures = Object.assign({ configuration: { baseHref: '/' } }, fixtures, optionalOptions);
   var _setupFixtures$adapte = setupFixtures.adapter;
   adapter = _setupFixtures$adapte === undefined ? __WEBPACK_IMPORTED_MODULE_0_laxar__["plainAdapter"] : _setupFixtures$adapte;
   artifacts = setupFixtures.artifacts;
   var _setupFixtures$config = setupFixtures.configuration;
   configuration = _setupFixtures$config === undefined ? {} : _setupFixtures$config;
   var descriptor = setupFixtures.descriptor;


   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["assert"])(artifacts).isNotNull('laxar-mocks.setupForWidget: *artifacts* must be set as fixture (use spec-loader) or passed as option');
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["assert"])(adapter).isNotNull('laxar-mocks.setupForWidget: the *adapter* option must not be set to null');
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["assert"])(configuration).isNotNull('laxar-mocks.setupForWidget: the *configuration* option must not be set to null');
   __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["assert"])(descriptor).isNotNull('laxar-mocks.setupForWidget: *descriptor* must be set as fixture (use spec-loader) or passed as option');

   return function (done) {
      var htmlTemplate = void 0;
      var features = {};
      var loadContext = void 0;

      __WEBPACK_IMPORTED_MODULE_0_laxar__["assert"].state(adapter.technology === descriptor.integration.technology, 'laxar-mocks: Widget is using technology "' + descriptor.integration.technology + '", ' + ('but adapter is for "' + adapter.technology + '". ') + 'Pass the correct adapter as option "adapter" to `createSetupForWidget`.');

      if (anchorElement && anchorElement.parentElement) {
         anchorElement.parentElement.removeChild(anchorElement);
      }
      anchorElement = document.createElement('DIV');
      anchorElement.id = 'widgetContainer';
      document.body.appendChild(anchorElement);

      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_laxar__["bootstrap"])(anchorElement, {
         widgetAdapters: [decoratedAdapter(adapter)],
         configuration: configuration,
         artifacts: artifacts
      });
      var adapterInstance = void 0;

      widgetPrivateApi.configure = function (keyOrConfiguration, optionalValue) {
         if (typeof keyOrConfiguration === 'string') {
            __WEBPACK_IMPORTED_MODULE_0_laxar__["object"].setPath(features, keyOrConfiguration, optionalValue);
         } else {
            features = __WEBPACK_IMPORTED_MODULE_0_laxar__["object"].deepClone(keyOrConfiguration);
         }
      };

      widgetPrivateApi.load = function (done) {
         return laxarServices.widgetLoader.load({
            id: TEST_WIDGET_ID,
            widget: descriptor.name,
            features: validate(features, descriptor)
         }, {
            whenServicesAvailable: function whenServicesAvailable(services) {
               // Grab the widget injections and make them available to tests.
               // Do this lazily to avoid creating services that where not actually injected.
               Object.keys(services).forEach(function (k) {
                  delete widget[k];
                  Object.defineProperty(widget, k, {
                     configurable: true,
                     get: function get() {
                        return services[k];
                     }
                  });
               });
            }
         }).then(function (_) {
            loadContext = _;
            return loadContext.templatePromise;
         }).then(function (_) {
            htmlTemplate = _;
            return adapterInstancePromise;
         }).then(function (_) {
            adapterInstance = _;
         }).then(done);
      };

      widgetPrivateApi.destroy = function () {
         if (loadContext) {
            loadContext.destroy();
            loadContext = null;
         }
         if (adapter.reset) {
            adapter.reset();
         }
      };

      widgetPrivateApi.renderTo = function (container) {
         adapterInstance.domAttachTo(container, htmlTemplate);
      };

      done();
   };
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Creates the setup function for a widget test, using user-provided fixtures.
 *
 * This function exists for backwards compatibility with LaxarJS v1. It is recommended to use
 * {@link #setupForWidget} instead, which does not expect the user to provide descriptor, artifacts listing
 * and adapter module and instead relies on external tooling (such as the `laxar-mocks/spec-loader`).
 *
 * The returned function is asynchronous and should simply be passed to `beforeEach`. By doing so, the Jasmine
 * `done` callback is handled under the hood.
 *
 * **Note:** This method has been deprecated. Use {@link #setupForWidget} instead.
 *
 * ### Example (ES 2015) `example-widget.spec.js`:
 *
 * ```js
 * import * as axMocks from 'laxar-mocks';
 *
 * describe( 'An ExampleWidget', () => {
 *    beforeEach( testing.createSetupForWidget( descriptor, {
 *       artifacts: {
 *          // ... should be generated, see laxar-tooling project for details ...
 *       },
 *       adapter: require( 'laxar-my-adapter' )
 *    } ) );
 *
 *    // ... widget configuration, loading and your tests ...
 *
 *    afterEach( axMocks.tearDown );
 * } );
 * ```
 *
 * @deprecated use {@link #setupForWidget} instead
 *
 * @param {Object} descriptor
 *    the widget descriptor (taken from `widget.json`)
 * @param {Object} [optionalOptions]
 *    optional map of options
 * @param {Object} [optionalOptions.adapter=laxar.plainAdapter]
 *    a technology adapter to use for this widget.
 *    When using a custom integration technology (something other than "plain" or "angular"), pass the
 *    adapter module using this option.
 * @param {Object} [optionalOptions.artifacts={}]
 *    an artifacts listing containing all assets for the widget and its controls
 * @param {Object} [optionalOptions.configuration={}]
 *    mock configuration data to use for the `axConfiguration` injection of the widget
 *
 * @return {Function}
 *    a function to directly pass to `beforeEach`, accepting a Jasmine `done` callback
 */
function createSetupForWidget(descriptor) {
   var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

   if (window.console && window.console.warn) {
      window.console.warn('laxar-mocks: DEPRECATION: `createSetupForWidget( args )` should be changed to `setupForWidget()`');
   }
   optionalOptions.descriptor = descriptor;
   return setupForWidget(optionalOptions);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function validate(features, descriptor) {
   var newFeatures = __WEBPACK_IMPORTED_MODULE_0_laxar__["object"].deepClone(features);
   if (descriptor.features) {
      var jsonSchema = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_laxar_tooling_lib_ajv__["create"])();
      var _validate = jsonSchema.compile(descriptor.features, descriptor.name, { isFeaturesValidator: true });

      var valid = _validate(newFeatures);
      if (!valid) {
         throw jsonSchema.error('Validation failed for widget "' + name + '"', _validate.errors);
      }
   }
   return newFeatures;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

function handleErrorForJasmine(err) {
   if (window.console && window.console.error) {
      window.console.error(err);
   }
   jasmine.getEnv().fail(err);
}

/***/ }),

/***/ 35:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_assert__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities_object__ = __webpack_require__(15);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
*/

/**
 * Allows to create mock implementations of {@link Configuration}, compatible to the "axConfiguration"
 * injection.
 *
 * @module configuration_mock
 */




/**
 * Creates a mock {@link Configuration}, compatible to the "axConfiguration" injection of a widget.
 *
 * The accessor methods `get` and `ensure` are spied.
 *
 * The mock behaves just like the actual configuration, except that configuration values may be initialized
 * from paths, not just regular nested JSON objects. This simplifies mocking of nested configuration such as
 * `logging.threshold`. Usage of this feature is optional, nested objects work just as well.
 *
 * @param {Object} configByPath
 *    path-to-value mappings for the mock
 *
 * @return {Configuration}
 *    a fresh mock instance
 */
function create() {
   var configByPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};


   var get = jasmine.createSpy('configuration.get').and.callFake(function (key, fallback) {
      var config = {};
      Object.keys(configByPath).forEach(function (path) {
         __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["d" /* setPath */])(config, path, configByPath[path]);
      });
      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities_object__["e" /* path */])(config, key, fallback);
   });

   var ensure = jasmine.createSpy('configuration.ensure').and.callFake(function (key) {
      var value = get(key);
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_assert__["a" /* default */])(value).isNotNull('Configuration mock is missing mandatory entry: ' + key);
      return value;
   });

   return { ensure: ensure, get: get };
}

/***/ }),

/***/ 36:
/***/ (function(module, exports, __webpack_require__) {

var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(175);

module.exports = function (obj, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var space = opts.space || '';
    if (typeof space === 'number') space = Array(space+1).join(' ');
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
    var replacer = opts.replacer || function(key, value) { return value; };

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (parent, key, node, level) {
        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
        var colonSeparator = space ? ': ' : ':';

        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        node = replacer.call(parent, key, node);

        if (node === undefined) {
            return;
        }
        if (typeof node !== 'object' || node === null) {
            return json.stringify(node);
        }
        if (isArray(node)) {
            var out = [];
            for (var i = 0; i < node.length; i++) {
                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
                out.push(indent + space + item);
            }
            return '[' + out.join(',') + indent + ']';
        }
        else {
            if (seen.indexOf(node) !== -1) {
                if (cycles) return json.stringify('__cycle__');
                throw new TypeError('Converting circular structure to JSON');
            }
            else seen.push(node);

            var keys = objectKeys(node).sort(cmp && cmp(node));
            var out = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var value = stringify(node, key, node[key], level+1);

                if(!value) continue;

                var keyValue = json.stringify(key)
                    + colonSeparator
                    + value;
                ;
                out.push(indent + space + keyValue);
            }
            seen.splice(seen.indexOf(node), 1);
            return '{' + out.join(',') + indent + '}';
        }
    })({ '': obj }, '', obj, 0);
};

var isArray = Array.isArray || function (x) {
    return {}.toString.call(x) === '[object Array]';
};

var objectKeys = Object.keys || function (obj) {
    var has = Object.prototype.hasOwnProperty || function () { return true };
    var keys = [];
    for (var key in obj) {
        if (has.call(obj, key)) keys.push(key);
    }
    return keys;
};


/***/ }),

/***/ 42:
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 465:
/***/ (function(module, exports, __webpack_require__) {

/* global __resourceQuery */
module.exports = __webpack_require__( 530 );


/***/ }),

/***/ 471:
/***/ (function(module, exports) {

module.exports = {
	"name": "host-connector-widget",
	"description": "Connects the contents of the development window to the AxDeveloperToolsWidget",
	"integration": {
		"technology": "plain",
		"type": "widget"
	},
	"features": {
		"$schema": "http://json-schema.org/draft-04/schema#",
		"type": "object",
		"properties": {
			"events": {
				"type": "object",
				"description": "Publish a stream of event bus activity through wrapper events.",
				"properties": {
					"stream": {
						"type": "string",
						"description": "The topic through which to publish event items.",
						"default": null
					}
				}
			},
			"log": {
				"type": "object",
				"description": "Publish a stream of log items through wrapper events.",
				"properties": {
					"stream": {
						"type": "string",
						"description": "The topic through which to publish log items.",
						"default": null
					}
				}
			},
			"pageInfo": {
				"type": "object",
				"description": "Publish the current page for inspection.",
				"properties": {
					"resource": {
						"type": "string",
						"description": "The topic through which to publish the current page.",
						"default": null,
						"format": "topic",
						"axRole": "outlet"
					}
				}
			},
			"grid": {
				"type": "object",
				"description": "Publish application-specific grid configuration set by the host application.",
				"properties": {
					"resource": {
						"type": "string",
						"description": "A resource through which to publish grid settings.",
						"default": null,
						"format": "topic",
						"axRole": "outlet"
					}
				}
			},
			"development": {
				"type": "object",
				"properties": {
					"liveReload": {
						"type": "boolean",
						"default": true
					}
				}
			},
			"laxarApplication": {
				"type": "object",
				"description": "Publish the state of the inspected window. True if a LaxarJS application is running.",
				"required": [
					"flag"
				],
				"properties": {
					"flag": {
						"type": "string",
						"format": "flag-topic",
						"description": "The topic through which to publish the current state."
					}
				}
			}
		}
	}
};

/***/ }),

/***/ 480:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__; /**
               * Copyright 2017 aixigo AG
               * Released under the MIT license.
               * http://laxarjs.org/license
               */

/* global chrome */

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
   'use strict';

   var REFRESH_DELAY_MS = 100;

   //Security wrapper denied access to property "buffers" on privileged Javascript object.
   //Support for exposing privileged objects to untrusted content via __exposedProps__ is being
   //gradually removed - use WebIDL bindings or Components.utils.cloneInto instead.
   // Note that only the first denied property access from a given global object will be reported.
   var injections = ['axContext', 'axEventBus'];
   var controller = function controller(context, eventBus) {
      var pageInfoVersion = -1;
      var timeout = void 0;
      var lastIndexByStream = {};
      var isLaxarApplication = void 0;
      var isBrowserWebExtension = window.chrome && chrome.runtime && chrome.runtime.id;
      // If the development server is used and we don't want the development window to be reloaded each
      // time something changes during development, we shutdown live reload here.
      if (window.LiveReload && !context.features.development.liveReload) {
         window.LiveReload.shutDown();
      }

      eventBus.subscribe('endLifecycleRequest', function () {
         if (timeout) {
            window.clearTimeout(timeout);
         }
      });

      if (window.opener) {
         eventBus.subscribe('beginLifecycleRequest', function () {
            publishLaxarApplicationFlag(true);
            tryPublishData();
         });
      } else
      {
         eventBus.subscribe('beginLifecycleRequest', function () {
            publishLaxarApplicationFlag(false);
            window.addEventListener('message', extensionEventListener);
         });
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function extensionEventListener(event) {
         var channel = JSON.parse(event.detail || event.data);
         if (channel.text === 'noLaxarDeveloperToolsApi') {
            publishLaxarApplicationFlag(false);
            return;
         }
         var channelGridSettings = channel && channel.gridSettings;
         if (context.features.grid.resource) {
            console.log(channelGridSettings);
            publishGridSettings(channelGridSettings);
         }
         if (channel && channel.pageInfoVersion > pageInfoVersion) {
            publishAndSetPageInfoVersion(channel.pageInfo, channel.pageInfoVersion);
         }
         var buffers = channel && channel.buffers;
         if (buffers) {
            publishStream('events', buffers);
            publishStream('log', buffers);
            publishLaxarApplicationFlag(true);
         }
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function tryPublishData() {
         try {
            var channel = window.opener.axDeveloperTools;
            publishDataOrHandleException(channel, false);
         }
         catch (exception) {
            publishDataOrHandleException(undefined, true);
         }
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function publishDataOrHandleException(channel, isException) {
         if (isException) {
            publishLaxarApplicationFlag(false);
         } else
         {
            var channelGridSettings = channel && channel.gridSettings;
            if (context.features.grid.resource) {
               publishGridSettings(channelGridSettings);
            }
            publishLaxarApplicationFlag(true);
            checkForData();
         }
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function publishGridSettings(channelGridSettings) {
         if (!channelGridSettings) {
            channelGridSettings = null;
         }
         eventBus.publish('didReplace.' + context.features.grid.resource, {
            resource: context.features.grid.resource,
            data: channelGridSettings });

      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function checkForData() {
         try {
            var channel = window.opener.axDeveloperTools;
            checkForDataOrHandleException(channel, false);
         }
         catch (e) {
            checkForDataOrHandleException(undefined, true);
         }
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function checkForDataOrHandleException(channel, isException) {
         if (isException) {
            publishLaxarApplicationFlag(false);
         } else
         {
            var buffers = channel && channel.buffers;
            if (buffers) {
               publishStream('events', buffers);
               publishStream('log', buffers);
            }
            if (channel && channel.pageInfoVersion > pageInfoVersion) {
               publishAndSetPageInfoVersion(channel.pageInfo, channel.pageInfoVersion);
            }
            publishLaxarApplicationFlag(true);
            timeout = window.setTimeout(checkForData, REFRESH_DELAY_MS);
         }
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function publishAndSetPageInfoVersion(pageInfo, version) {
         pageInfoVersion = version;
         eventBus.publish('didReplace.' + context.features.pageInfo.resource, {
            resource: context.features.pageInfo.resource,
            data: pageInfo });

      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function publishStream(bufferFeature, buffers) {
         var buffer = buffers[bufferFeature];
         var lastIndex = lastIndexByStream[bufferFeature] || -1;
         var events = buffer.
         filter(function (_) {return lastIndex < _.index;}).
         map(function (_) {return JSON.parse(_.json);});
         if (!events.length) {
            return;
         }
         eventBus.publish('didProduce.' + context.features[bufferFeature].stream, {
            stream: context.features[bufferFeature].stream,
            data: events });

         lastIndexByStream[bufferFeature] = buffer[buffer.length - 1].index;
         navigation(events);
      }

      /////////////////////////////////////////////////////////////////////////////////////////////////////

      function navigation(events) {
         events.forEach(function (event) {
            if (event.action === 'publish' && event.event.substr(0, 11) === 'didNavigate') {
               eventBus.publish('takeActionRequest.navigation', {
                  action: 'navigation' });

            }
         });
      }

      ////////////////////////////////////////////////////////////////////////////////////////////////////////

      function publishLaxarApplicationFlag(state) {
         if (isLaxarApplication !== state) {
            eventBus.publish('didChangeFlag.' + context.features.laxarApplication.flag + '.' + state, {
               flag: context.features.laxarApplication.flag,
               state: state });

            isLaxarApplication = state;
            if (isBrowserWebExtension) {
               chrome.runtime.sendMessage({
                  active: state,
                  id: chrome.devtools.inspectedWindow.tabId });

            }
         }
      }
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   return {
      name: 'host-connector-widget',
      injections: injections,
      create: controller };


}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 530:
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
   aliases: {
      themes: { "default.theme": 0, "default": 0 },
      controls: {},
      layouts: {},
      flows: {},
      pages: {},
      widgets: { "host-connector-widget": 0, "module:./widgets/host-connector-widget": 0 }
   },
   flows: [],
   themes: [
      {
         descriptor: { name: "default.theme" },
         assets: {
            "css/theme.css": {
               url: __webpack_require__( 178 )
            }
         }
      }
   ],
   pages: [],
   layouts: [],
   widgets: [
      {
         descriptor: {
            name: "host-connector-widget",
            description: "Connects the contents of the development window to the AxDeveloperToolsWidget",
            integration: { technology: "plain", type: "widget" },
            features: {
               $schema: "http://json-schema.org/draft-04/schema#",
               type: "object",
               properties: {
                  events: {
                     type: "object",
                     description: "Publish a stream of event bus activity through wrapper events.",
                     properties: {
                        stream: {
                           type: "string",
                           description: "The topic through which to publish event items.",
                           "default": null
                        }
                     },
                     additionalProperties: false
                  },
                  log: {
                     type: "object",
                     description: "Publish a stream of log items through wrapper events.",
                     properties: {
                        stream: {
                           type: "string",
                           description: "The topic through which to publish log items.",
                           "default": null
                        }
                     },
                     additionalProperties: false
                  },
                  pageInfo: {
                     type: "object",
                     description: "Publish the current page for inspection.",
                     properties: {
                        resource: {
                           type: "string",
                           description: "The topic through which to publish the current page.",
                           "default": null,
                           format: "topic",
                           axRole: "outlet"
                        }
                     },
                     additionalProperties: false
                  },
                  grid: {
                     type: "object",
                     description: "Publish application-specific grid configuration set by the host application.",
                     properties: {
                        resource: {
                           type: "string",
                           description: "A resource through which to publish grid settings.",
                           "default": null,
                           format: "topic",
                           axRole: "outlet"
                        }
                     },
                     additionalProperties: false
                  },
                  development: {
                     type: "object",
                     properties: { liveReload: { type: "boolean", "default": true } },
                     additionalProperties: false
                  },
                  laxarApplication: {
                     type: "object",
                     description: "Publish the state of the inspected window. True if a LaxarJS application is running.",
                     required: [ "flag" ],
                     properties: {
                        flag: {
                           type: "string",
                           format: "flag-topic",
                           description: "The topic through which to publish the current state."
                        }
                     },
                     additionalProperties: false
                  }
               },
               additionalProperties: false
            },
            controls: [],
            compatibility: []
         },
         module: __webpack_require__( 480 ),
         assets: { "default.theme": {} }
      }
   ],
   controls: []
};

/***/ }),

/***/ 565:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


















var _laxarMocks = __webpack_require__(31);var axMocks = _interopRequireWildcard(_laxarMocks);function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}(function (fixtures, adapter, artifacts, descriptor) {fixtures.adapter = adapter;fixtures.artifacts = artifacts;fixtures.descriptor = descriptor;})(__webpack_require__(31).fixtures, undefined, __webpack_require__(465), // cannot simply read descriptor from artifacts because the features schema may have been stripped:
__webpack_require__(471));; /**
                             * Copyright 2016 aixigo AG
                             * Released under the MIT license.
                             * http://laxarjs.org/license
                             */describe('A host-connector-widget', function () {var fakeChannel = void 0;
   var widgetEventBus = void 0;
   var testEventBus = void 0;

   beforeEach(axMocks.setupForWidget());

   beforeEach(function () {
      // fake the AxDeveloperToolsWidget presence in the opener window:
      window.opener = {
         axDeveloperTools: {
            buffers: {
               events: [],
               log: [] } } };




      fakeChannel = window.opener.axDeveloperTools;

      axMocks.widget.configure({
         events: {
            stream: 'eventBusItems' },

         log: {
            stream: 'logItems' },

         grid: {
            resource: 'gridSettings' },

         pageInfo: {
            resource: 'page' },

         laxarApplication: {
            flag: 'isLaxarApplication' } });


   });

   beforeEach(axMocks.widget.load);

   beforeEach(function () {
      widgetEventBus = axMocks.widget.axEventBus;
      testEventBus = axMocks.eventBus;
   });

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   afterEach(axMocks.tearDown);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   it('polls the host application for event bus interactions and publishes them through the configured stream topic (R1.1)',
   function (done) {
      testEventBus.publish('beginLifecycleRequest');
      testEventBus.flush();
      expect(widgetEventBus.publish).not.toHaveBeenCalledWith(
      'didProduce.logItems',
      jasmine.any(Object));

      fakeChannel.buffers.events.push({ index: 0, json: JSON.stringify({ fake: 'event item' }) });
      window.setTimeout(function () {
         expect(widgetEventBus.publish).not.toHaveBeenCalledWith(
         'didProduce.logItems',
         jasmine.any(Object));

         window.setTimeout(function () {
            expect(widgetEventBus.publish).toHaveBeenCalledWith(
            'didProduce.eventBusItems',
            {
               stream: 'eventBusItems',
               data: [{ fake: 'event item' }] });


            done();
         }, 21);
      }, 80);
   });


   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   it('polls the host application for log messages and publishes them through the configured stream topic (R1.2)',
   function (done) {
      testEventBus.publish('beginLifecycleRequest');
      testEventBus.flush();
      expect(widgetEventBus.publish).not.toHaveBeenCalledWith(
      'didProduce.logItems',
      jasmine.any(Object));

      fakeChannel.buffers.log.push({ index: 0, json: JSON.stringify({ fake: 'log item' }) });
      window.setTimeout(function () {
         expect(widgetEventBus.publish).not.toHaveBeenCalledWith(
         'didProduce.logItems',
         jasmine.any(Object));

         window.setTimeout(function () {
            expect(widgetEventBus.publish).toHaveBeenCalledWith(
            'didProduce.logItems',
            {
               stream: 'logItems',
               data: [{ fake: 'log item' }] });


            done();
         }, 21);
      }, 80);
   });


   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   it('polls the host application for CSS grid settings and publishes them through the configured resource (R1.3)',
   function () {
      fakeChannel.gridSettings = { fake: 'grid' };
      testEventBus.publish('beginLifecycleRequest');
      testEventBus.flush();
      expect(widgetEventBus.publish).toHaveBeenCalledWith('didReplace.gridSettings', {
         resource: 'gridSettings',
         data: { fake: 'grid' } });

   });


});

/***/ }),

/***/ 65:
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 65;


/***/ }),

/***/ 66:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  setup: setupAsync,
  compile: compileAsync
};


var util = __webpack_require__(13);

var ASYNC = {
  '*': checkGenerators,
  'co*': checkGenerators,
  'es7': checkAsyncFunction
};

var TRANSPILE = {
  'nodent': getNodent,
  'regenerator': getRegenerator
};

var MODES = [
  { async: 'co*' },
  { async: 'es7', transpile: 'nodent' },
  { async: 'co*', transpile: 'regenerator' }
];


var regenerator, nodent;


function setupAsync(opts, required) {
  if (required !== false) required = true;
  var async = opts.async
    , transpile = opts.transpile
    , check;

  switch (typeof transpile) {
    case 'string':
      var get = TRANSPILE[transpile];
      if (!get) throw new Error('bad transpiler: ' + transpile);
      return (opts._transpileFunc = get(opts, required));
    case 'undefined':
    case 'boolean':
      if (typeof async == 'string') {
        check = ASYNC[async];
        if (!check) throw new Error('bad async mode: ' + async);
        return (opts.transpile = check(opts, required));
      }

      for (var i=0; i<MODES.length; i++) {
        var _opts = MODES[i];
        if (setupAsync(_opts, false)) {
          util.copy(_opts, opts);
          return opts.transpile;
        }
      }
      /* istanbul ignore next */
      throw new Error('generators, nodent and regenerator are not available');
    case 'function':
      return (opts._transpileFunc = opts.transpile);
    default:
      throw new Error('bad transpiler: ' + transpile);
  }
}


function checkGenerators(opts, required) {
  /* jshint evil: true */
  try {
    (new Function('(function*(){})()'))();
    return true;
  } catch(e) {
    /* istanbul ignore next */
    if (required) throw new Error('generators not supported');
  }
}


function checkAsyncFunction(opts, required) {
  /* jshint evil: true */
  try {
    (new Function('(async function(){})()'))();
    /* istanbul ignore next */
    return true;
  } catch(e) {
    if (required) throw new Error('es7 async functions not supported');
  }
}


function getRegenerator(opts, required) {
  try {
    if (!regenerator) {
      var name = 'regenerator';
      regenerator = !(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND';; throw e; }());
      regenerator.runtime();
    }
    if (!opts.async || opts.async === true)
      opts.async = 'es7';
    return regeneratorTranspile;
  } catch(e) {
    /* istanbul ignore next */
    if (required) throw new Error('regenerator not available');
  }
}


function regeneratorTranspile(code) {
  return regenerator.compile(code).code;
}


function getNodent(opts, required) {
  /* jshint evil: true */
  try {
    if (!nodent) {
      var name = 'nodent';
      nodent = !(function webpackMissingModule() { var e = new Error("Cannot find module \".\""); e.code = 'MODULE_NOT_FOUND';; throw e; }())({ log: false, dontInstallRequireHook: true });
    }
    if (opts.async != 'es7') {
      if (opts.async && opts.async !== true) console.warn('nodent transpiles only es7 async functions');
      opts.async = 'es7';
    }
    return nodentTranspile;
  } catch(e) {
    /* istanbul ignore next */
    if (required) throw new Error('nodent not available');
  }
}


function nodentTranspile(code) {
  return nodent.compile(code, '', { promises: true, sourcemap: false }).code;
}


/**
 * Creates validating function for passed schema with asynchronous loading of missing schemas.
 * `loadSchema` option should be a function that accepts schema uri and node-style callback.
 * @this  Ajv
 * @param {Object}   schema schema object
 * @param {Function} callback node-style callback, it is always called with 2 parameters: error (or null) and validating function.
 */
function compileAsync(schema, callback) {
  /* eslint no-shadow: 0 */
  /* jshint validthis: true */
  var schemaObj;
  var self = this;
  try {
    schemaObj = this._addSchema(schema);
  } catch(e) {
    setTimeout(function() { callback(e); });
    return;
  }
  if (schemaObj.validate) {
    setTimeout(function() { callback(null, schemaObj.validate); });
  } else {
    if (typeof this._opts.loadSchema != 'function')
      throw new Error('options.loadSchema should be a function');
    _compileAsync(schema, callback, true);
  }


  function _compileAsync(schema, callback, firstCall) {
    var validate;
    try { validate = self.compile(schema); }
    catch(e) {
      if (e.missingSchema) loadMissingSchema(e);
      else deferCallback(e);
      return;
    }
    deferCallback(null, validate);

    function loadMissingSchema(e) {
      var ref = e.missingSchema;
      if (self._refs[ref] || self._schemas[ref])
        return callback(new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved'));
      var _callbacks = self._loadingSchemas[ref];
      if (_callbacks) {
        if (typeof _callbacks == 'function')
          self._loadingSchemas[ref] = [_callbacks, schemaLoaded];
        else
          _callbacks[_callbacks.length] = schemaLoaded;
      } else {
        self._loadingSchemas[ref] = schemaLoaded;
        self._opts.loadSchema(ref, function (err, sch) {
          var _callbacks = self._loadingSchemas[ref];
          delete self._loadingSchemas[ref];
          if (typeof _callbacks == 'function') {
            _callbacks(err, sch);
          } else {
            for (var i=0; i<_callbacks.length; i++)
              _callbacks[i](err, sch);
          }
        });
      }

      function schemaLoaded(err, sch) {
        if (err) return callback(err);
        if (!(self._refs[ref] || self._schemas[ref])) {
          try {
            self.addSchema(sch, ref);
          } catch(e) {
            callback(e);
            return;
          }
        }
        _compileAsync(schema, callback);
      }
    }

    function deferCallback(err, validate) {
      if (firstCall) setTimeout(function() { callback(err, validate); });
      else return callback(err, validate);
    }
  }
}


/***/ }),

/***/ 67:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*eslint complexity: 0*/

module.exports = function equal(a, b) {
  if (a === b) return true;

  var arrA = Array.isArray(a)
    , arrB = Array.isArray(b)
    , i;

  if (arrA && arrB) {
    if (a.length != b.length) return false;
    for (i = 0; i < a.length; i++)
      if (!equal(a[i], b[i])) return false;
    return true;
  }

  if (arrA != arrB) return false;

  if (a && b && typeof a === 'object' && typeof b === 'object') {
    var keys = Object.keys(a);
    if (keys.length !== Object.keys(b).length) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA && dateB) return a.getTime() == b.getTime();
    if (dateA != dateB) return false;

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA && regexpB) return a.toString() == b.toString();
    if (regexpA != regexpB) return false;

    for (i = 0; i < keys.length; i++)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

    for (i = 0; i < keys.length; i++)
      if(!equal(a[keys[i]], b[keys[i]])) return false;

    return true;
  }

  return false;
};


/***/ }),

/***/ 68:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var url = __webpack_require__(186)
  , equal = __webpack_require__(67)
  , util = __webpack_require__(13)
  , SchemaObject = __webpack_require__(69);

module.exports = resolve;

resolve.normalizeId = normalizeId;
resolve.fullPath = getFullPath;
resolve.url = resolveUrl;
resolve.ids = resolveIds;
resolve.inlineRef = inlineRef;
resolve.schema = resolveSchema;

/**
 * [resolve and compile the references ($ref)]
 * @this   Ajv
 * @param  {Function} compile reference to schema compilation funciton (localCompile)
 * @param  {Object} root object with information about the root schema for the current schema
 * @param  {String} ref reference to resolve
 * @return {Object|Function} schema object (if the schema can be inlined) or validation function
 */
function resolve(compile, root, ref) {
  /* jshint validthis: true */
  var refVal = this._refs[ref];
  if (typeof refVal == 'string') {
    if (this._refs[refVal]) refVal = this._refs[refVal];
    else return resolve.call(this, compile, root, refVal);
  }

  refVal = refVal || this._schemas[ref];
  if (refVal instanceof SchemaObject) {
    return inlineRef(refVal.schema, this._opts.inlineRefs)
            ? refVal.schema
            : refVal.validate || this._compile(refVal);
  }

  var res = resolveSchema.call(this, root, ref);
  var schema, v, baseId;
  if (res) {
    schema = res.schema;
    root = res.root;
    baseId = res.baseId;
  }

  if (schema instanceof SchemaObject) {
    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);
  } else if (schema) {
    v = inlineRef(schema, this._opts.inlineRefs)
        ? schema
        : compile.call(this, schema, root, undefined, baseId);
  }

  return v;
}


/**
 * Resolve schema, its root and baseId
 * @this Ajv
 * @param  {Object} root root object with properties schema, refVal, refs
 * @param  {String} ref  reference to resolve
 * @return {Object} object with properties schema, root, baseId
 */
function resolveSchema(root, ref) {
  /* jshint validthis: true */
  var p = url.parse(ref, false, true)
    , refPath = _getFullPath(p)
    , baseId = getFullPath(root.schema.id);
  if (refPath !== baseId) {
    var id = normalizeId(refPath);
    var refVal = this._refs[id];
    if (typeof refVal == 'string') {
      return resolveRecursive.call(this, root, refVal, p);
    } else if (refVal instanceof SchemaObject) {
      if (!refVal.validate) this._compile(refVal);
      root = refVal;
    } else {
      refVal = this._schemas[id];
      if (refVal instanceof SchemaObject) {
        if (!refVal.validate) this._compile(refVal);
        if (id == normalizeId(ref))
          return { schema: refVal, root: root, baseId: baseId };
        root = refVal;
      } else {
        return;
      }
    }
    if (!root.schema) return;
    baseId = getFullPath(root.schema.id);
  }
  return getJsonPointer.call(this, p, baseId, root.schema, root);
}


/* @this Ajv */
function resolveRecursive(root, ref, parsedRef) {
  /* jshint validthis: true */
  var res = resolveSchema.call(this, root, ref);
  if (res) {
    var schema = res.schema;
    var baseId = res.baseId;
    root = res.root;
    if (schema.id) baseId = resolveUrl(baseId, schema.id);
    return getJsonPointer.call(this, parsedRef, baseId, schema, root);
  }
}


var PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);
/* @this Ajv */
function getJsonPointer(parsedRef, baseId, schema, root) {
  /* jshint validthis: true */
  parsedRef.hash = parsedRef.hash || '';
  if (parsedRef.hash.slice(0,2) != '#/') return;
  var parts = parsedRef.hash.split('/');

  for (var i = 1; i < parts.length; i++) {
    var part = parts[i];
    if (part) {
      part = util.unescapeFragment(part);
      schema = schema[part];
      if (!schema) break;
      if (schema.id && !PREVENT_SCOPE_CHANGE[part]) baseId = resolveUrl(baseId, schema.id);
      if (schema.$ref) {
        var $ref = resolveUrl(baseId, schema.$ref);
        var res = resolveSchema.call(this, root, $ref);
        if (res) {
          schema = res.schema;
          root = res.root;
          baseId = res.baseId;
        }
      }
    }
  }
  if (schema && schema != root.schema)
    return { schema: schema, root: root, baseId: baseId };
}


var SIMPLE_INLINED = util.toHash([
  'type', 'format', 'pattern',
  'maxLength', 'minLength',
  'maxProperties', 'minProperties',
  'maxItems', 'minItems',
  'maximum', 'minimum',
  'uniqueItems', 'multipleOf',
  'required', 'enum'
]);
function inlineRef(schema, limit) {
  if (limit === false) return false;
  if (limit === undefined || limit === true) return checkNoRef(schema);
  else if (limit) return countKeys(schema) <= limit;
}


function checkNoRef(schema) {
  var item;
  if (Array.isArray(schema)) {
    for (var i=0; i<schema.length; i++) {
      item = schema[i];
      if (typeof item == 'object' && !checkNoRef(item)) return false;
    }
  } else {
    for (var key in schema) {
      if (key == '$ref') return false;
      item = schema[key];
      if (typeof item == 'object' && !checkNoRef(item)) return false;
    }
  }
  return true;
}


function countKeys(schema) {
  var count = 0, item;
  if (Array.isArray(schema)) {
    for (var i=0; i<schema.length; i++) {
      item = schema[i];
      if (typeof item == 'object') count += countKeys(item);
      if (count == Infinity) return Infinity;
    }
  } else {
    for (var key in schema) {
      if (key == '$ref') return Infinity;
      if (SIMPLE_INLINED[key]) {
        count++;
      } else {
        item = schema[key];
        if (typeof item == 'object') count += countKeys(item) + 1;
        if (count == Infinity) return Infinity;
      }
    }
  }
  return count;
}


function getFullPath(id, normalize) {
  if (normalize !== false) id = normalizeId(id);
  var p = url.parse(id, false, true);
  return _getFullPath(p);
}


function _getFullPath(p) {
  var protocolSeparator = p.protocol || p.href.slice(0,2) == '//' ? '//' : '';
  return (p.protocol||'') + protocolSeparator + (p.host||'') + (p.path||'')  + '#';
}


var TRAILING_SLASH_HASH = /#\/?$/;
function normalizeId(id) {
  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';
}


function resolveUrl(baseId, id) {
  id = normalizeId(id);
  return url.resolve(baseId, id);
}


/* @this Ajv */
function resolveIds(schema) {
  /* eslint no-shadow: 0 */
  /* jshint validthis: true */
  var id = normalizeId(schema.id);
  var localRefs = {};
  _resolveIds.call(this, schema, getFullPath(id, false), id);
  return localRefs;

  /* @this Ajv */
  function _resolveIds(schema, fullPath, baseId) {
    /* jshint validthis: true */
    if (Array.isArray(schema)) {
      for (var i=0; i<schema.length; i++)
        _resolveIds.call(this, schema[i], fullPath+'/'+i, baseId);
    } else if (schema && typeof schema == 'object') {
      if (typeof schema.id == 'string') {
        var id = baseId = baseId
                          ? url.resolve(baseId, schema.id)
                          : schema.id;
        id = normalizeId(id);

        var refVal = this._refs[id];
        if (typeof refVal == 'string') refVal = this._refs[refVal];
        if (refVal && refVal.schema) {
          if (!equal(schema, refVal.schema))
            throw new Error('id "' + id + '" resolves to more than one schema');
        } else if (id != normalizeId(fullPath)) {
          if (id[0] == '#') {
            if (localRefs[id] && !equal(schema, localRefs[id]))
              throw new Error('id "' + id + '" resolves to more than one schema');
            localRefs[id] = schema;
          } else {
            this._refs[id] = fullPath;
          }
        }
      }
      for (var key in schema)
        _resolveIds.call(this, schema[key], fullPath+'/'+util.escapeFragment(key), baseId);
    }
  }
}


/***/ }),

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(13);

module.exports = SchemaObject;

function SchemaObject(obj) {
  util.copy(obj, this);
}


/***/ }),

/***/ 70:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = ValidationError;


function ValidationError(errors) {
  this.message = 'validation failed';
  this.errors = errors;
  this.ajv = this.validation = true;
}


ValidationError.prototype = Object.create(Error.prototype);
ValidationError.prototype.constructor = ValidationError;


/***/ }),

/***/ 71:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limit(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $isMax = $keyword == 'maximum',
    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',
    $schemaExcl = it.schema[$exclusiveKeyword],
    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,
    $op = $isMax ? '<' : '>',
    $notOp = $isMax ? '>' : '<';
  if ($isDataExcl) {
    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),
      $exclusive = 'exclusive' + $lvl,
      $opExpr = 'op' + $lvl,
      $opStr = '\' + ' + $opExpr + ' + \'';
    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';
    $schemaValueExcl = 'schemaExcl' + $lvl;
    out += ' var exclusive' + ($lvl) + '; if (typeof ' + ($schemaValueExcl) + ' != \'boolean\' && typeof ' + ($schemaValueExcl) + ' != \'undefined\') { ';
    var $errorKeyword = $exclusiveKeyword;
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || '_exclusiveLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'' + ($exclusiveKeyword) + ' should be boolean\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } else if( ';
    if ($isData) {
      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
    }
    out += ' ((exclusive' + ($lvl) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ') || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = exclusive' + ($lvl) + ' ? \'' + ($op) + '\' : \'' + ($op) + '=\';';
  } else {
    var $exclusive = $schemaExcl === true,
      $opStr = $op;
    if (!$exclusive) $opStr += '=';
    var $opExpr = '\'' + $opStr + '\'';
    out += ' if ( ';
    if ($isData) {
      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
    }
    out += ' ' + ($data) + ' ' + ($notOp);
    if ($exclusive) {
      out += '=';
    }
    out += ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') {';
  }
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be ' + ($opStr) + ' ';
      if ($isData) {
        out += '\' + ' + ($schemaValue);
      } else {
        out += '' + ($schema) + '\'';
      }
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' } ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 72:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitItems(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxItems' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT have ';
      if ($keyword == 'maxItems') {
        out += 'more';
      } else {
        out += 'less';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' items\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitLength(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxLength' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  if (it.opts.unicode === false) {
    out += ' ' + ($data) + '.length ';
  } else {
    out += ' ucs2length(' + ($data) + ') ';
  }
  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT be ';
      if ($keyword == 'maxLength') {
        out += 'longer';
      } else {
        out += 'shorter';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' characters\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 74:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitProperties(it, $keyword) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.v5 && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxProperties' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT have ';
      if ($keyword == 'maxProperties') {
        out += 'more';
      } else {
        out += 'less';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' properties\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_validate(it, $keyword) {
  var out = '';
  var $async = it.schema.$async === true;
  if (it.isTop) {
    var $top = it.isTop,
      $lvl = it.level = 0,
      $dataLvl = it.dataLevel = 0,
      $data = 'data';
    it.rootId = it.resolve.fullPath(it.root.schema.id);
    it.baseId = it.baseId || it.rootId;
    if ($async) {
      it.async = true;
      var $es7 = it.opts.async == 'es7';
      it.yieldAwait = $es7 ? 'await' : 'yield';
    }
    delete it.isTop;
    it.dataPathArr = [undefined];
    out += ' var validate = ';
    if ($async) {
      if ($es7) {
        out += ' (async function ';
      } else {
        if (it.opts.async == 'co*') {
          out += 'co.wrap';
        }
        out += '(function* ';
      }
    } else {
      out += ' (function ';
    }
    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \'use strict\'; var vErrors = null; ';
    out += ' var errors = 0;     ';
    out += ' if (rootData === undefined) rootData = data;';
  } else {
    var $lvl = it.level,
      $dataLvl = it.dataLevel,
      $data = 'data' + ($dataLvl || '');
    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);
    if ($async && !it.async) throw new Error('async schema in sync schema');
    out += ' var errs_' + ($lvl) + ' = errors;';
  }
  var $valid = 'valid' + $lvl,
    $breakOnError = !it.opts.allErrors,
    $closingBraces1 = '',
    $closingBraces2 = '',
    $errorKeyword;
  var $typeSchema = it.schema.type,
    $typeIsArray = Array.isArray($typeSchema);
  if ($typeSchema && it.opts.coerceTypes) {
    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);
    if ($coerceToTypes) {
      var $schemaPath = it.schemaPath + '.type',
        $errSchemaPath = it.errSchemaPath + '/type',
        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';
      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';
      var $dataType = 'dataType' + $lvl,
        $coerced = 'coerced' + $lvl;
      out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';
      if (it.opts.coerceTypes == 'array') {
        out += ' if (' + ($dataType) + ' == \'object\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \'array\'; ';
      }
      out += ' var ' + ($coerced) + ' = undefined; ';
      var $bracesCoercion = '';
      var arr1 = $coerceToTypes;
      if (arr1) {
        var $type, $i = -1,
          l1 = arr1.length - 1;
        while ($i < l1) {
          $type = arr1[$i += 1];
          if ($i) {
            out += ' if (' + ($coerced) + ' === undefined) { ';
            $bracesCoercion += '}';
          }
          if (it.opts.coerceTypes == 'array' && $type != 'array') {
            out += ' if (' + ($dataType) + ' == \'array\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';
          }
          if ($type == 'string') {
            out += ' if (' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\') ' + ($coerced) + ' = \'\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \'\'; ';
          } else if ($type == 'number' || $type == 'integer') {
            out += ' if (' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \'string\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';
            if ($type == 'integer') {
              out += ' && !(' + ($data) + ' % 1)';
            }
            out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';
          } else if ($type == 'boolean') {
            out += ' if (' + ($data) + ' === \'false\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \'true\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';
          } else if ($type == 'null') {
            out += ' if (' + ($data) + ' === \'\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';
          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {
            out += ' if (' + ($dataType) + ' == \'string\' || ' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';
          }
        }
      }
      out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';
      var $$outStack = $$outStack || [];
      $$outStack.push(out);
      out = ''; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
        if ($typeIsArray) {
          out += '' + ($typeSchema.join(","));
        } else {
          out += '' + ($typeSchema);
        }
        out += '\' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should be ';
          if ($typeIsArray) {
            out += '' + ($typeSchema.join(","));
          } else {
            out += '' + ($typeSchema);
          }
          out += '\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      var __err = out;
      out = $$outStack.pop();
      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError([' + (__err) + ']); ';
        } else {
          out += ' validate.errors = [' + (__err) + ']; return false; ';
        }
      } else {
        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      }
      out += ' } else {  ';
      var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
      out += ' ' + ($data) + ' = ' + ($coerced) + '; ';
      if (!$dataLvl) {
        out += 'if (' + ($parentData) + ' !== undefined)';
      }
      out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } } ';
    }
  }
  var $refKeywords;
  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {
    if (it.opts.extendRefs == 'fail') {
      throw new Error('$ref: validation keywords used in schema at path "' + it.errSchemaPath + '"');
    } else if (it.opts.extendRefs == 'ignore') {
      $refKeywords = false;
      console.log('$ref: keywords ignored in schema at path "' + it.errSchemaPath + '"');
    } else if (it.opts.extendRefs !== true) {
      console.log('$ref: all keywords used in schema at path "' + it.errSchemaPath + '". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');
    }
  }
  if (it.schema.$ref && !$refKeywords) {
    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';
    if ($breakOnError) {
      out += ' } if (errors === ';
      if ($top) {
        out += '0';
      } else {
        out += 'errs_' + ($lvl);
      }
      out += ') { ';
      $closingBraces2 += '}';
    }
  } else {
    var arr2 = it.RULES;
    if (arr2) {
      var $rulesGroup, i2 = -1,
        l2 = arr2.length - 1;
      while (i2 < l2) {
        $rulesGroup = arr2[i2 += 1];
        if ($shouldUseGroup($rulesGroup)) {
          if ($rulesGroup.type) {
            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';
          }
          if (it.opts.useDefaults && !it.compositeRule) {
            if ($rulesGroup.type == 'object' && it.schema.properties) {
              var $schema = it.schema.properties,
                $schemaKeys = Object.keys($schema);
              var arr3 = $schemaKeys;
              if (arr3) {
                var $propertyKey, i3 = -1,
                  l3 = arr3.length - 1;
                while (i3 < l3) {
                  $propertyKey = arr3[i3 += 1];
                  var $sch = $schema[$propertyKey];
                  if ($sch.default !== undefined) {
                    var $passData = $data + it.util.getProperty($propertyKey);
                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';
                    if (it.opts.useDefaults == 'shared') {
                      out += ' ' + (it.useDefault($sch.default)) + ' ';
                    } else {
                      out += ' ' + (JSON.stringify($sch.default)) + ' ';
                    }
                    out += '; ';
                  }
                }
              }
            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {
              var arr4 = it.schema.items;
              if (arr4) {
                var $sch, $i = -1,
                  l4 = arr4.length - 1;
                while ($i < l4) {
                  $sch = arr4[$i += 1];
                  if ($sch.default !== undefined) {
                    var $passData = $data + '[' + $i + ']';
                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';
                    if (it.opts.useDefaults == 'shared') {
                      out += ' ' + (it.useDefault($sch.default)) + ' ';
                    } else {
                      out += ' ' + (JSON.stringify($sch.default)) + ' ';
                    }
                    out += '; ';
                  }
                }
              }
            }
          }
          var arr5 = $rulesGroup.rules;
          if (arr5) {
            var $rule, i5 = -1,
              l5 = arr5.length - 1;
            while (i5 < l5) {
              $rule = arr5[i5 += 1];
              if ($shouldUseRule($rule)) {
                out += ' ' + ($rule.code(it, $rule.keyword)) + ' ';
                if ($breakOnError) {
                  $closingBraces1 += '}';
                }
              }
            }
          }
          if ($breakOnError) {
            out += ' ' + ($closingBraces1) + ' ';
            $closingBraces1 = '';
          }
          if ($rulesGroup.type) {
            out += ' } ';
            if ($typeSchema && $typeSchema === $rulesGroup.type) {
              var $typeChecked = true;
              out += ' else { ';
              var $schemaPath = it.schemaPath + '.type',
                $errSchemaPath = it.errSchemaPath + '/type';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
                if ($typeIsArray) {
                  out += '' + ($typeSchema.join(","));
                } else {
                  out += '' + ($typeSchema);
                }
                out += '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'should be ';
                  if ($typeIsArray) {
                    out += '' + ($typeSchema.join(","));
                  } else {
                    out += '' + ($typeSchema);
                  }
                  out += '\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              out += ' } ';
            }
          }
          if ($breakOnError) {
            out += ' if (errors === ';
            if ($top) {
              out += '0';
            } else {
              out += 'errs_' + ($lvl);
            }
            out += ') { ';
            $closingBraces2 += '}';
          }
        }
      }
    }
  }
  if ($typeSchema && !$typeChecked && !(it.opts.coerceTypes && $coerceToTypes)) {
    var $schemaPath = it.schemaPath + '.type',
      $errSchemaPath = it.errSchemaPath + '/type',
      $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';
    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {   ';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
      if ($typeIsArray) {
        out += '' + ($typeSchema.join(","));
      } else {
        out += '' + ($typeSchema);
      }
      out += '\' } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should be ';
        if ($typeIsArray) {
          out += '' + ($typeSchema.join(","));
        } else {
          out += '' + ($typeSchema);
        }
        out += '\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' }';
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces2) + ' ';
  }
  if ($top) {
    if ($async) {
      out += ' if (errors === 0) return true;           ';
      out += ' else throw new ValidationError(vErrors); ';
    } else {
      out += ' validate.errors = vErrors; ';
      out += ' return errors === 0;       ';
    }
    out += ' }); return validate;';
  } else {
    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';
  }
  out = it.util.cleanUpCode(out);
  if ($top && $breakOnError) {
    out = it.util.cleanUpVarErrors(out, $async);
  }

  function $shouldUseGroup($rulesGroup) {
    for (var i = 0; i < $rulesGroup.rules.length; i++)
      if ($shouldUseRule($rulesGroup.rules[i])) return true;
  }

  function $shouldUseRule($rule) {
    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length) || (it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length)));
  }
  return out;
}


/***/ }),

/***/ 76:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_object__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__runtime_log__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__configuration_mock__ = __webpack_require__(35);
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to create mock implementations of {@link Log}, compatible to the "axLog" and "axGlobalLog"
 * injections.
 *
 * @module log_mock
 */





/**
 * Creates a log mock that does not actually log anywhere, but can be spied upon.
 *
 * @return {AxLog}
 *    a fresh mock instance
 */
function create() {
  var config = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__configuration_mock__["a" /* create */])({ 'logging.threshold': 'INFO' });
  var logger = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__runtime_log__["a" /* create */])(config, false);
  return Object.assign({ levels: __WEBPACK_IMPORTED_MODULE_1__runtime_log__["b" /* levels */] }, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utilities_object__["a" /* tabulate */])(function (method) {
    return jasmine.createSpy('log.' + method);
  }, Object.keys(logger.constructor.prototype)));
}

/***/ }),

/***/ 77:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Copyright 2016 aixigo AG
 * Released under the MIT license.
 * http://laxarjs.org/license
 */

/**
 * Allows to instantiate a mock implementations of {@link Storage}, compatible to the "axGlobalStorage"
 * injection. For the widget-specific "axStorage" injection, refer to the {@link widget_services_storage_mock}
 * module.
 *
 * @module storage_mock
 */

/**
 * Creates a storage mock that does not actually change the browser's local- or session-storage.
 *
 * @return {StorageMock}
 *    a fresh mock instance
 */
function create() {

   var spy = function spy(name) {
      return jasmine.createSpy(name);
   };

   var mockBackends = {
      local: {},
      session: {}
   };

   /**
    * A mock for {@link Storage} that does not actually change the browser's local- or session-storage.
    * Instances of this mock are compatible to the "axGlobalStorage" injection.
    *
    * Do not confuse this with the {@AxStorageMock}, which is compatible to the "axStorage" injection offered
    * by the widget services.
    *
    * Note that the mock does erform JSON transformations of the value objects, just like the actual Storage.
    *
    * @name StorageMock
    * @constructor
    * @extends {Storage}
    */
   return {
      getLocalStorage: spy('getLocalStorage').and.callFake(mockStorage('local')),
      getSessionStorage: spy('getSessionStorage').and.callFake(mockStorage('session')),

      /**
       * Provides access to the backing stores of the storage mock.
       *
       * Has a `local` and a `session` property, each of which has spies for `getItem`/`setItem`/`removeItem`.
       * The `local` and `session` properties also provide direct access to their respective backing `store`
       * objects, accessible in this manner:
       *
       * ```js
       *    const storageMock = create();
       *    storageMock.getLocalStorage( 'myNs' ).setItem( 'k', 'v' );
       *    expect( storageMock.mockBackends.local.myNs.k ).toEqual( '"v"' );  // note the JSON transform
       * ```
       *
       * @memberof {StorageMock}
       * @type {Object}
       */
      mockBackends: mockBackends
   };

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function mockBackend(type) {
      var store = {};
      return {
         setItem: spy(type + '.setItem').and.callFake(function (k, v) {
            store[k] = v === undefined ? v : JSON.stringify(v);
         }),
         getItem: spy(type + '.getItem').and.callFake(function (k) {
            return store[k] && JSON.parse(store[k]);
         }),
         removeItem: spy(type + '.removeItem').and.callFake(function (k) {
            delete store[k];
         }),
         store: store
      };
   }

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////

   function mockStorage(type) {
      return function (prefix) {
         if (!mockBackends[type][prefix]) {
            mockBackends[type][prefix] = mockBackend(type);
         }
         return mockBackends[type][prefix];
      };
   }
}

/***/ }),

/***/ 78:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = create;
/**
 * Allows to instantiate a mock implementations of {@link AxAreaHelper}, compatible to the "axAreaHelper"
 * widget service injection.
 *
 * @module widget_services_area_helper_mock
 */

/**
 * Creates a mock for the widget-specific "axAreaHelper" injection.
 *
 * @param {AxContext} context
 *    an object with a `widget.id` property
 *
 * @return {AxVisibilityMock}
 *    an `axVisibility`-compatible mock object
 */
function create(context) {

   return {
      isVisible: jasmine.createSpy('areaHelper.isVisible').and.returnValue(false),
      register: jasmine.createSpy('areaHelper.register'),
      fullName: jasmine.createSpy('areaHelper.fullName').and.callFake(function (localName) {
         return context.widget.id + '.' + localName;
      }),
      localName: jasmine.createSpy('areaHelper.localName').and.callFake(function (fullName) {
         return fullName.substring(context.widget.id.length + 1);
      }),
      release: jasmine.createSpy('areaHelper.release')
   };
}

/***/ }),

/***/ 79:
/***/ (function(module, exports) {


/**
 * slice() reference.
 */

var slice = Array.prototype.slice;

/**
 * Expose `co`.
 */

module.exports = co['default'] = co.co = co;

/**
 * Wrap the given generator `fn` into a
 * function that returns a promise.
 * This is a separate function so that
 * every `co()` call doesn't create a new,
 * unnecessary closure.
 *
 * @param {GeneratorFunction} fn
 * @return {Function}
 * @api public
 */

co.wrap = function (fn) {
  createPromise.__generatorFunction__ = fn;
  return createPromise;
  function createPromise() {
    return co.call(this, fn.apply(this, arguments));
  }
};

/**
 * Execute the generator function or a generator
 * and return a promise.
 *
 * @param {Function} fn
 * @return {Promise}
 * @api public
 */

function co(gen) {
  var ctx = this;
  var args = slice.call(arguments, 1)

  // we wrap everything in a promise to avoid promise chaining,
  // which leads to memory leak errors.
  // see https://github.com/tj/co/issues/180
  return new Promise(function(resolve, reject) {
    if (typeof gen === 'function') gen = gen.apply(ctx, args);
    if (!gen || typeof gen.next !== 'function') return resolve(gen);

    onFulfilled();

    /**
     * @param {Mixed} res
     * @return {Promise}
     * @api private
     */

    function onFulfilled(res) {
      var ret;
      try {
        ret = gen.next(res);
      } catch (e) {
        return reject(e);
      }
      next(ret);
    }

    /**
     * @param {Error} err
     * @return {Promise}
     * @api private
     */

    function onRejected(err) {
      var ret;
      try {
        ret = gen.throw(err);
      } catch (e) {
        return reject(e);
      }
      next(ret);
    }

    /**
     * Get the next value in the generator,
     * return a promise.
     *
     * @param {Object} ret
     * @return {Promise}
     * @api private
     */

    function next(ret) {
      if (ret.done) return resolve(ret.value);
      var value = toPromise.call(ctx, ret.value);
      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);
      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '
        + 'but the following object was passed: "' + String(ret.value) + '"'));
    }
  });
}

/**
 * Convert a `yield`ed value into a promise.
 *
 * @param {Mixed} obj
 * @return {Promise}
 * @api private
 */

function toPromise(obj) {
  if (!obj) return obj;
  if (isPromise(obj)) return obj;
  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);
  if ('function' == typeof obj) return thunkToPromise.call(this, obj);
  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);
  if (isObject(obj)) return objectToPromise.call(this, obj);
  return obj;
}

/**
 * Convert a thunk to a promise.
 *
 * @param {Function}
 * @return {Promise}
 * @api private
 */

function thunkToPromise(fn) {
  var ctx = this;
  return new Promise(function (resolve, reject) {
    fn.call(ctx, function (err, res) {
      if (err) return reject(err);
      if (arguments.length > 2) res = slice.call(arguments, 1);
      resolve(res);
    });
  });
}

/**
 * Convert an array of "yieldables" to a promise.
 * Uses `Promise.all()` internally.
 *
 * @param {Array} obj
 * @return {Promise}
 * @api private
 */

function arrayToPromise(obj) {
  return Promise.all(obj.map(toPromise, this));
}

/**
 * Convert an object of "yieldables" to a promise.
 * Uses `Promise.all()` internally.
 *
 * @param {Object} obj
 * @return {Promise}
 * @api private
 */

function objectToPromise(obj){
  var results = new obj.constructor();
  var keys = Object.keys(obj);
  var promises = [];
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var promise = toPromise.call(this, obj[key]);
    if (promise && isPromise(promise)) defer(promise, key);
    else results[key] = obj[key];
  }
  return Promise.all(promises).then(function () {
    return results;
  });

  function defer(promise, key) {
    // predefine the key in the result
    results[key] = undefined;
    promises.push(promise.then(function (res) {
      results[key] = res;
    }));
  }
}

/**
 * Check if `obj` is a promise.
 *
 * @param {Object} obj
 * @return {Boolean}
 * @api private
 */

function isPromise(obj) {
  return 'function' == typeof obj.then;
}

/**
 * Check if `obj` is a generator.
 *
 * @param {Mixed} obj
 * @return {Boolean}
 * @api private
 */

function isGenerator(obj) {
  return 'function' == typeof obj.next && 'function' == typeof obj.throw;
}

/**
 * Check if `obj` is a generator function.
 *
 * @param {Mixed} obj
 * @return {Boolean}
 * @api private
 */
function isGeneratorFunction(obj) {
  var constructor = obj.constructor;
  if (!constructor) return false;
  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;
  return isGenerator(constructor.prototype);
}

/**
 * Check for plain object.
 *
 * @param {Mixed} val
 * @return {Boolean}
 * @api private
 */

function isObject(val) {
  return Object == val.constructor;
}


/***/ }),

/***/ 80:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),

/***/ 82:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/glyphicons-halflings-regular.eot";

/***/ }),

/***/ 83:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {  /* globals require, module */

  

  /**
   * Module dependencies.
   */

  var pathtoRegexp = __webpack_require__(180);

  /**
   * Module exports.
   */

  module.exports = page;

  /**
   * Detect click event
   */
  var clickEvent = ('undefined' !== typeof document) && document.ontouchstart ? 'touchstart' : 'click';

  /**
   * To work properly with the URL
   * history.location generated polyfill in https://github.com/devote/HTML5-History-API
   */

  var location = ('undefined' !== typeof window) && (window.history.location || window.location);

  /**
   * Perform initial dispatch.
   */

  var dispatch = true;


  /**
   * Decode URL components (query string, pathname, hash).
   * Accommodates both regular percent encoding and x-www-form-urlencoded format.
   */
  var decodeURLComponents = true;

  /**
   * Base path.
   */

  var base = '';

  /**
   * Running flag.
   */

  var running;

  /**
   * HashBang option
   */

  var hashbang = false;

  /**
   * Previous context, for capturing
   * page exit events.
   */

  var prevContext;

  /**
   * Register `path` with callback `fn()`,
   * or route `path`, or redirection,
   * or `page.start()`.
   *
   *   page(fn);
   *   page('*', fn);
   *   page('/user/:id', load, user);
   *   page('/user/' + user.id, { some: 'thing' });
   *   page('/user/' + user.id);
   *   page('/from', '/to')
   *   page();
   *
   * @param {string|!Function|!Object} path
   * @param {Function=} fn
   * @api public
   */

  function page(path, fn) {
    // <callback>
    if ('function' === typeof path) {
      return page('*', path);
    }

    // route <path> to <callback ...>
    if ('function' === typeof fn) {
      var route = new Route(/** @type {string} */ (path));
      for (var i = 1; i < arguments.length; ++i) {
        page.callbacks.push(route.middleware(arguments[i]));
      }
      // show <path> with [state]
    } else if ('string' === typeof path) {
      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);
      // start [options]
    } else {
      page.start(path);
    }
  }

  /**
   * Callback functions.
   */

  page.callbacks = [];
  page.exits = [];

  /**
   * Current path being processed
   * @type {string}
   */
  page.current = '';

  /**
   * Number of pages navigated to.
   * @type {number}
   *
   *     page.len == 0;
   *     page('/login');
   *     page.len == 1;
   */

  page.len = 0;

  /**
   * Get or set basepath to `path`.
   *
   * @param {string} path
   * @api public
   */

  page.base = function(path) {
    if (0 === arguments.length) return base;
    base = path;
  };

  /**
   * Bind with the given `options`.
   *
   * Options:
   *
   *    - `click` bind to click events [true]
   *    - `popstate` bind to popstate [true]
   *    - `dispatch` perform initial dispatch [true]
   *
   * @param {Object} options
   * @api public
   */

  page.start = function(options) {
    options = options || {};
    if (running) return;
    running = true;
    if (false === options.dispatch) dispatch = false;
    if (false === options.decodeURLComponents) decodeURLComponents = false;
    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);
    if (false !== options.click) {
      document.addEventListener(clickEvent, onclick, false);
    }
    if (true === options.hashbang) hashbang = true;
    if (!dispatch) return;
    var url = (hashbang && ~location.hash.indexOf('#!')) ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;
    page.replace(url, null, true, dispatch);
  };

  /**
   * Unbind click and popstate event handlers.
   *
   * @api public
   */

  page.stop = function() {
    if (!running) return;
    page.current = '';
    page.len = 0;
    running = false;
    document.removeEventListener(clickEvent, onclick, false);
    window.removeEventListener('popstate', onpopstate, false);
  };

  /**
   * Show `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} dispatch
   * @param {boolean=} push
   * @return {!Context}
   * @api public
   */

  page.show = function(path, state, dispatch, push) {
    var ctx = new Context(path, state);
    page.current = ctx.path;
    if (false !== dispatch) page.dispatch(ctx);
    if (false !== ctx.handled && false !== push) ctx.pushState();
    return ctx;
  };

  /**
   * Goes back in the history
   * Back should always let the current route push state and then go back.
   *
   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base
   * @param {Object=} state
   * @api public
   */

  page.back = function(path, state) {
    if (page.len > 0) {
      // this may need more testing to see if all browsers
      // wait for the next tick to go back in history
      history.back();
      page.len--;
    } else if (path) {
      setTimeout(function() {
        page.show(path, state);
      });
    }else{
      setTimeout(function() {
        page.show(base, state);
      });
    }
  };


  /**
   * Register route to redirect from one path to other
   * or just redirect to another route
   *
   * @param {string} from - if param 'to' is undefined redirects to 'from'
   * @param {string=} to
   * @api public
   */
  page.redirect = function(from, to) {
    // Define route from a path to another
    if ('string' === typeof from && 'string' === typeof to) {
      page(from, function(e) {
        setTimeout(function() {
          page.replace(/** @type {!string} */ (to));
        }, 0);
      });
    }

    // Wait for the push state and replace it with another
    if ('string' === typeof from && 'undefined' === typeof to) {
      setTimeout(function() {
        page.replace(from);
      }, 0);
    }
  };

  /**
   * Replace `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} init
   * @param {boolean=} dispatch
   * @return {!Context}
   * @api public
   */


  page.replace = function(path, state, init, dispatch) {
    var ctx = new Context(path, state);
    page.current = ctx.path;
    ctx.init = init;
    ctx.save(); // save before dispatching, which may redirect
    if (false !== dispatch) page.dispatch(ctx);
    return ctx;
  };

  /**
   * Dispatch the given `ctx`.
   *
   * @param {Context} ctx
   * @api private
   */
  page.dispatch = function(ctx) {
    var prev = prevContext,
      i = 0,
      j = 0;

    prevContext = ctx;

    function nextExit() {
      var fn = page.exits[j++];
      if (!fn) return nextEnter();
      fn(prev, nextExit);
    }

    function nextEnter() {
      var fn = page.callbacks[i++];

      if (ctx.path !== page.current) {
        ctx.handled = false;
        return;
      }
      if (!fn) return unhandled(ctx);
      fn(ctx, nextEnter);
    }

    if (prev) {
      nextExit();
    } else {
      nextEnter();
    }
  };

  /**
   * Unhandled `ctx`. When it's not the initial
   * popstate then redirect. If you wish to handle
   * 404s on your own use `page('*', callback)`.
   *
   * @param {Context} ctx
   * @api private
   */
  function unhandled(ctx) {
    if (ctx.handled) return;
    var current;

    if (hashbang) {
      current = base + location.hash.replace('#!', '');
    } else {
      current = location.pathname + location.search;
    }

    if (current === ctx.canonicalPath) return;
    page.stop();
    ctx.handled = false;
    location.href = ctx.canonicalPath;
  }

  /**
   * Register an exit route on `path` with
   * callback `fn()`, which will be called
   * on the previous context when a new
   * page is visited.
   */
  page.exit = function(path, fn) {
    if (typeof path === 'function') {
      return page.exit('*', path);
    }

    var route = new Route(path);
    for (var i = 1; i < arguments.length; ++i) {
      page.exits.push(route.middleware(arguments[i]));
    }
  };

  /**
   * Remove URL encoding from the given `str`.
   * Accommodates whitespace in both x-www-form-urlencoded
   * and regular percent-encoded form.
   *
   * @param {string} val - URL component to decode
   */
  function decodeURLEncodedURIComponent(val) {
    if (typeof val !== 'string') { return val; }
    return decodeURLComponents ? decodeURIComponent(val.replace(/\+/g, ' ')) : val;
  }

  /**
   * Initialize a new "request" `Context`
   * with the given `path` and optional initial `state`.
   *
   * @constructor
   * @param {string} path
   * @param {Object=} state
   * @api public
   */

  function Context(path, state) {
    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;
    var i = path.indexOf('?');

    this.canonicalPath = path;
    this.path = path.replace(base, '') || '/';
    if (hashbang) this.path = this.path.replace('#!', '') || '/';

    this.title = document.title;
    this.state = state || {};
    this.state.path = path;
    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';
    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);
    this.params = {};

    // fragment
    this.hash = '';
    if (!hashbang) {
      if (!~this.path.indexOf('#')) return;
      var parts = this.path.split('#');
      this.path = parts[0];
      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';
      this.querystring = this.querystring.split('#')[0];
    }
  }

  /**
   * Expose `Context`.
   */

  page.Context = Context;

  /**
   * Push state.
   *
   * @api private
   */

  Context.prototype.pushState = function() {
    page.len++;
    history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
  };

  /**
   * Save the context state.
   *
   * @api public
   */

  Context.prototype.save = function() {
    history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
  };

  /**
   * Initialize `Route` with the given HTTP `path`,
   * and an array of `callbacks` and `options`.
   *
   * Options:
   *
   *   - `sensitive`    enable case-sensitive routes
   *   - `strict`       enable strict matching for trailing slashes
   *
   * @constructor
   * @param {string} path
   * @param {Object=} options
   * @api private
   */

  function Route(path, options) {
    options = options || {};
    this.path = (path === '*') ? '(.*)' : path;
    this.method = 'GET';
    this.regexp = pathtoRegexp(this.path,
      this.keys = [],
      options);
  }

  /**
   * Expose `Route`.
   */

  page.Route = Route;

  /**
   * Return route middleware with
   * the given callback `fn()`.
   *
   * @param {Function} fn
   * @return {Function}
   * @api public
   */

  Route.prototype.middleware = function(fn) {
    var self = this;
    return function(ctx, next) {
      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
      next();
    };
  };

  /**
   * Check if this route matches `path`, if so
   * populate `params`.
   *
   * @param {string} path
   * @param {Object} params
   * @return {boolean}
   * @api private
   */

  Route.prototype.match = function(path, params) {
    var keys = this.keys,
      qsIndex = path.indexOf('?'),
      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,
      m = this.regexp.exec(decodeURIComponent(pathname));

    if (!m) return false;

    for (var i = 1, len = m.length; i < len; ++i) {
      var key = keys[i - 1];
      var val = decodeURLEncodedURIComponent(m[i]);
      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {
        params[key.name] = val;
      }
    }

    return true;
  };


  /**
   * Handle "populate" events.
   */

  var onpopstate = (function () {
    var loaded = false;
    if ('undefined' === typeof window) {
      return;
    }
    if (document.readyState === 'complete') {
      loaded = true;
    } else {
      window.addEventListener('load', function() {
        setTimeout(function() {
          loaded = true;
        }, 0);
      });
    }
    return function onpopstate(e) {
      if (!loaded) return;
      if (e.state) {
        var path = e.state.path;
        page.replace(path, e.state);
      } else {
        page.show(location.pathname + location.hash, undefined, undefined, false);
      }
    };
  })();
  /**
   * Handle "click" events.
   */

  function onclick(e) {

    if (1 !== which(e)) return;

    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
    if (e.defaultPrevented) return;



    // ensure link
    // use shadow dom when available
    var el = e.path ? e.path[0] : e.target;
    while (el && 'A' !== el.nodeName) el = el.parentNode;
    if (!el || 'A' !== el.nodeName) return;



    // Ignore if tag has
    // 1. "download" attribute
    // 2. rel="external" attribute
    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;

    // ensure non-hash for the same path
    var link = el.getAttribute('href');
    if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;



    // Check for mailto: in the href
    if (link && link.indexOf('mailto:') > -1) return;

    // check target
    if (el.target) return;

    // x-origin
    if (!sameOrigin(el.href)) return;



    // rebuild path
    var path = el.pathname + el.search + (el.hash || '');

    // strip leading "/[drive letter]:" on NW.js on Windows
    if (typeof process !== 'undefined' && path.match(/^\/[a-zA-Z]:\//)) {
      path = path.replace(/^\/[a-zA-Z]:\//, '/');
    }

    // same page
    var orig = path;

    if (path.indexOf(base) === 0) {
      path = path.substr(base.length);
    }

    if (hashbang) path = path.replace('#!', '');

    if (base && orig === path) return;

    e.preventDefault();
    page.show(orig);
  }

  /**
   * Event button.
   */

  function which(e) {
    e = e || window.event;
    return null === e.which ? e.button : e.which;
  }

  /**
   * Check if `href` is the same origin.
   */

  function sameOrigin(href) {
    var origin = location.protocol + '//' + location.hostname;
    if (location.port) origin += ':' + location.port;
    return (href && (0 === href.indexOf(origin)));
  }

  page.sameOrigin = sameOrigin;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))

/***/ }),

/***/ 84:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ })

/******/ });
//# sourceMappingURL=host-connector-widget.spec.bundle.js.map